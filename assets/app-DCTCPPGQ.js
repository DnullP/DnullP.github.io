/**
* @vue/shared v3.4.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Rl(s,a){const n=new Set(s.split(","));return a?t=>n.has(t.toLowerCase()):t=>n.has(t)}const xs={},An=[],la=()=>{},Am=()=>!1,wt=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&(s.charCodeAt(2)>122||s.charCodeAt(2)<97),Ml=s=>s.startsWith("onUpdate:"),Rs=Object.assign,Vl=(s,a)=>{const n=s.indexOf(a);n>-1&&s.splice(n,1)},Cm=Object.prototype.hasOwnProperty,rs=(s,a)=>Cm.call(s,a),ns=Array.isArray,nt=s=>fe(s)==="[object Map]",Im=s=>fe(s)==="[object Set]",ts=s=>typeof s=="function",Fs=s=>typeof s=="string",ge=s=>typeof s=="symbol",Is=s=>s!==null&&typeof s=="object",li=s=>(Is(s)||ts(s))&&ts(s.then)&&ts(s.catch),Lm=Object.prototype.toString,fe=s=>Lm.call(s),Tm=s=>fe(s).slice(8,-1),Pm=s=>fe(s)==="[object Object]",Bl=s=>Fs(s)&&s!=="NaN"&&s[0]!=="-"&&""+parseInt(s,10)===s,Cn=Rl(",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"),ve=s=>{const a=Object.create(null);return n=>a[n]||(a[n]=s(n))},Sm=/-(\w)/g,Ks=ve(s=>s.replace(Sm,(a,n)=>n?n.toUpperCase():"")),Om=/\B([A-Z])/g,Hn=ve(s=>s.replace(Om,"-$1").toLowerCase()),Nn=ve(s=>s.charAt(0).toUpperCase()+s.slice(1)),Re=ve(s=>s?`on${Nn(s)}`:""),Xa=(s,a)=>!Object.is(s,a),Me=(s,a)=>{for(let n=0;n<s.length;n++)s[n](a)},te=(s,a,n)=>{Object.defineProperty(s,a,{configurable:!0,enumerable:!1,value:n})},Dm=s=>{const a=parseFloat(s);return isNaN(a)?s:a},Rm=s=>{const a=Fs(s)?Number(s):NaN;return isNaN(a)?s:a};let So;const oi=()=>So||(So=typeof globalThis<"u"?globalThis:typeof self<"u"?self:typeof window<"u"?window:typeof global<"u"?global:{});function zl(s){if(ns(s)){const a={};for(let n=0;n<s.length;n++){const t=s[n],e=Fs(t)?zm(t):zl(t);if(e)for(const l in e)a[l]=e[l]}return a}else if(Fs(s)||Is(s))return s}const Mm=/;(?![^(]*\))/g,Vm=/:([^]+)/,Bm=/\/\*[^]*?\*\//g;function zm(s){const a={};return s.replace(Bm,"").split(Mm).forEach(n=>{if(n){const t=n.split(Vm);t.length>1&&(a[t[0].trim()]=t[1].trim())}}),a}function Fl(s){let a="";if(Fs(s))a=s;else if(ns(s))for(let n=0;n<s.length;n++){const t=Fl(s[n]);t&&(a+=t+" ")}else if(Is(s))for(const n in s)s[n]&&(a+=n+" ");return a.trim()}const Fm="itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",$m=Rl(Fm);function pi(s){return!!s||s===""}/**
* @vue/reactivity v3.4.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/let Js;class Hm{constructor(a=!1){this.detached=a,this._active=!0,this.effects=[],this.cleanups=[],this.parent=Js,!a&&Js&&(this.index=(Js.scopes||(Js.scopes=[])).push(this)-1)}get active(){return this._active}run(a){if(this._active){const n=Js;try{return Js=this,a()}finally{Js=n}}}on(){Js=this}off(){Js=this.parent}stop(a){if(this._active){let n,t;for(n=0,t=this.effects.length;n<t;n++)this.effects[n].stop();for(n=0,t=this.cleanups.length;n<t;n++)this.cleanups[n]();if(this.scopes)for(n=0,t=this.scopes.length;n<t;n++)this.scopes[n].stop(!0);if(!this.detached&&this.parent&&!a){const e=this.parent.scopes.pop();e&&e!==this&&(this.parent.scopes[this.index]=e,e.index=this.index)}this.parent=void 0,this._active=!1}}}function Nm(s,a=Js){a&&a.active&&a.effects.push(s)}function ii(){return Js}function jm(s){Js&&Js.cleanups.push(s)}let pn;class $l{constructor(a,n,t,e){this.fn=a,this.trigger=n,this.scheduler=t,this.active=!0,this.deps=[],this._dirtyLevel=4,this._trackId=0,this._runnings=0,this._shouldSchedule=!1,this._depsLength=0,Nm(this,e)}get dirty(){if(this._dirtyLevel===2||this._dirtyLevel===3){this._dirtyLevel=1,un();for(let a=0;a<this._depsLength;a++){const n=this.deps[a];if(n.computed&&(qm(n.computed),this._dirtyLevel>=4))break}this._dirtyLevel===1&&(this._dirtyLevel=0),dn()}return this._dirtyLevel>=4}set dirty(a){this._dirtyLevel=a?4:0}run(){if(this._dirtyLevel=0,!this.active)return this.fn();let a=Wa,n=pn;try{return Wa=!0,pn=this,this._runnings++,Oo(this),this.fn()}finally{Do(this),this._runnings--,pn=n,Wa=a}}stop(){var a;this.active&&(Oo(this),Do(this),(a=this.onStop)==null||a.call(this),this.active=!1)}}function qm(s){return s.value}function Oo(s){s._trackId++,s._depsLength=0}function Do(s){if(s.deps.length>s._depsLength){for(let a=s._depsLength;a<s.deps.length;a++)ri(s.deps[a],s);s.deps.length=s._depsLength}}function ri(s,a){const n=s.get(a);n!==void 0&&a._trackId!==n&&(s.delete(a),s.size===0&&s.cleanup())}let Wa=!0,il=0;const ci=[];function un(){ci.push(Wa),Wa=!1}function dn(){const s=ci.pop();Wa=s===void 0?!0:s}function Hl(){il++}function Nl(){for(il--;!il&&rl.length;)rl.shift()()}function mi(s,a,n){if(a.get(s)!==s._trackId){a.set(s,s._trackId);const t=s.deps[s._depsLength];t!==a?(t&&ri(t,s),s.deps[s._depsLength++]=a):s._depsLength++}}const rl=[];function ui(s,a,n){Hl();for(const t of s.keys()){let e;t._dirtyLevel<a&&(e??(e=s.get(t)===t._trackId))&&(t._shouldSchedule||(t._shouldSchedule=t._dirtyLevel===0),t._dirtyLevel=a),t._shouldSchedule&&(e??(e=s.get(t)===t._trackId))&&(t.trigger(),(!t._runnings||t.allowRecurse)&&t._dirtyLevel!==2&&(t._shouldSchedule=!1,t.scheduler&&rl.push(t.scheduler)))}Nl()}const di=(s,a)=>{const n=new Map;return n.cleanup=s,n.computed=a,n},ee=new WeakMap,rn=Symbol(""),cl=Symbol("");function Xs(s,a,n){if(Wa&&pn){let t=ee.get(s);t||ee.set(s,t=new Map);let e=t.get(n);e||t.set(n,e=di(()=>t.delete(n))),mi(pn,e)}}function Sa(s,a,n,t,e,l){const o=ee.get(s);if(!o)return;let p=[];if(a==="clear")p=[...o.values()];else if(n==="length"&&ns(s)){const c=Number(t);o.forEach((r,m)=>{(m==="length"||!ge(m)&&m>=c)&&p.push(r)})}else switch(n!==void 0&&p.push(o.get(n)),a){case"add":ns(s)?Bl(n)&&p.push(o.get("length")):(p.push(o.get(rn)),nt(s)&&p.push(o.get(cl)));break;case"delete":ns(s)||(p.push(o.get(rn)),nt(s)&&p.push(o.get(cl)));break;case"set":nt(s)&&p.push(o.get(rn));break}Hl();for(const c of p)c&&ui(c,4);Nl()}function Um(s,a){var n;return(n=ee.get(s))==null?void 0:n.get(a)}const Gm=Rl("__proto__,__v_isRef,__isVue"),hi=new Set(Object.getOwnPropertyNames(Symbol).filter(s=>s!=="arguments"&&s!=="caller").map(s=>Symbol[s]).filter(ge)),Ro=Wm();function Wm(){const s={};return["includes","indexOf","lastIndexOf"].forEach(a=>{s[a]=function(...n){const t=os(this);for(let l=0,o=this.length;l<o;l++)Xs(t,"get",l+"");const e=t[a](...n);return e===-1||e===!1?t[a](...n.map(os)):e}}),["push","pop","shift","unshift","splice"].forEach(a=>{s[a]=function(...n){un(),Hl();const t=os(this)[a].apply(this,n);return Nl(),dn(),t}}),s}function Km(s){const a=os(this);return Xs(a,"has",s),a.hasOwnProperty(s)}class gi{constructor(a=!1,n=!1){this._isReadonly=a,this._shallow=n}get(a,n,t){const e=this._isReadonly,l=this._shallow;if(n==="__v_isReactive")return!e;if(n==="__v_isReadonly")return e;if(n==="__v_isShallow")return l;if(n==="__v_raw")return t===(e?l?pu:ki:l?yi:vi).get(a)||Object.getPrototypeOf(a)===Object.getPrototypeOf(t)?a:void 0;const o=ns(a);if(!e){if(o&&rs(Ro,n))return Reflect.get(Ro,n,t);if(n==="hasOwnProperty")return Km}const p=Reflect.get(a,n,t);return(ge(n)?hi.has(n):Gm(n))||(e||Xs(a,"get",n),l)?p:Hs(p)?o&&Bl(n)?p:p.value:Is(p)?e?hn(p):xt(p):p}}class fi extends gi{constructor(a=!1){super(!1,a)}set(a,n,t,e){let l=a[n];if(!this._shallow){const c=Dn(l);if(!le(t)&&!Dn(t)&&(l=os(l),t=os(t)),!ns(a)&&Hs(l)&&!Hs(t))return c?!1:(l.value=t,!0)}const o=ns(a)&&Bl(n)?Number(n)<a.length:rs(a,n),p=Reflect.set(a,n,t,e);return a===os(e)&&(o?Xa(t,l)&&Sa(a,"set",n,t):Sa(a,"add",n,t)),p}deleteProperty(a,n){const t=rs(a,n);a[n];const e=Reflect.deleteProperty(a,n);return e&&t&&Sa(a,"delete",n,void 0),e}has(a,n){const t=Reflect.has(a,n);return(!ge(n)||!hi.has(n))&&Xs(a,"has",n),t}ownKeys(a){return Xs(a,"iterate",ns(a)?"length":rn),Reflect.ownKeys(a)}}class Xm extends gi{constructor(a=!1){super(!0,a)}set(a,n){return!0}deleteProperty(a,n){return!0}}const Ym=new fi,Qm=new Xm,Jm=new fi(!0),jl=s=>s,ye=s=>Reflect.getPrototypeOf(s);function $t(s,a,n=!1,t=!1){s=s.__v_raw;const e=os(s),l=os(a);n||(Xa(a,l)&&Xs(e,"get",a),Xs(e,"get",l));const{has:o}=ye(e),p=t?jl:n?Gl:ut;if(o.call(e,a))return p(s.get(a));if(o.call(e,l))return p(s.get(l));s!==e&&s.get(a)}function Ht(s,a=!1){const n=this.__v_raw,t=os(n),e=os(s);return a||(Xa(s,e)&&Xs(t,"has",s),Xs(t,"has",e)),s===e?n.has(s):n.has(s)||n.has(e)}function Nt(s,a=!1){return s=s.__v_raw,!a&&Xs(os(s),"iterate",rn),Reflect.get(s,"size",s)}function Mo(s){s=os(s);const a=os(this);return ye(a).has.call(a,s)||(a.add(s),Sa(a,"add",s,s)),this}function Vo(s,a){a=os(a);const n=os(this),{has:t,get:e}=ye(n);let l=t.call(n,s);l||(s=os(s),l=t.call(n,s));const o=e.call(n,s);return n.set(s,a),l?Xa(a,o)&&Sa(n,"set",s,a):Sa(n,"add",s,a),this}function Bo(s){const a=os(this),{has:n,get:t}=ye(a);let e=n.call(a,s);e||(s=os(s),e=n.call(a,s)),t&&t.call(a,s);const l=a.delete(s);return e&&Sa(a,"delete",s,void 0),l}function zo(){const s=os(this),a=s.size!==0,n=s.clear();return a&&Sa(s,"clear",void 0,void 0),n}function jt(s,a){return function(t,e){const l=this,o=l.__v_raw,p=os(o),c=a?jl:s?Gl:ut;return!s&&Xs(p,"iterate",rn),o.forEach((r,m)=>t.call(e,c(r),c(m),l))}}function qt(s,a,n){return function(...t){const e=this.__v_raw,l=os(e),o=nt(l),p=s==="entries"||s===Symbol.iterator&&o,c=s==="keys"&&o,r=e[s](...t),m=n?jl:a?Gl:ut;return!a&&Xs(l,"iterate",c?cl:rn),{next(){const{value:d,done:h}=r.next();return h?{value:d,done:h}:{value:p?[m(d[0]),m(d[1])]:m(d),done:h}},[Symbol.iterator](){return this}}}}function Va(s){return function(...a){return s==="delete"?!1:s==="clear"?void 0:this}}function Zm(){const s={get(l){return $t(this,l)},get size(){return Nt(this)},has:Ht,add:Mo,set:Vo,delete:Bo,clear:zo,forEach:jt(!1,!1)},a={get(l){return $t(this,l,!1,!0)},get size(){return Nt(this)},has:Ht,add:Mo,set:Vo,delete:Bo,clear:zo,forEach:jt(!1,!0)},n={get(l){return $t(this,l,!0)},get size(){return Nt(this,!0)},has(l){return Ht.call(this,l,!0)},add:Va("add"),set:Va("set"),delete:Va("delete"),clear:Va("clear"),forEach:jt(!0,!1)},t={get(l){return $t(this,l,!0,!0)},get size(){return Nt(this,!0)},has(l){return Ht.call(this,l,!0)},add:Va("add"),set:Va("set"),delete:Va("delete"),clear:Va("clear"),forEach:jt(!0,!0)};return["keys","values","entries",Symbol.iterator].forEach(l=>{s[l]=qt(l,!1,!1),n[l]=qt(l,!0,!1),a[l]=qt(l,!1,!0),t[l]=qt(l,!0,!0)}),[s,n,a,t]}const[su,au,nu,tu]=Zm();function ql(s,a){const n=a?s?tu:nu:s?au:su;return(t,e,l)=>e==="__v_isReactive"?!s:e==="__v_isReadonly"?s:e==="__v_raw"?t:Reflect.get(rs(n,e)&&e in t?n:t,e,l)}const eu={get:ql(!1,!1)},lu={get:ql(!1,!0)},ou={get:ql(!0,!1)},vi=new WeakMap,yi=new WeakMap,ki=new WeakMap,pu=new WeakMap;function iu(s){switch(s){case"Object":case"Array":return 1;case"Map":case"Set":case"WeakMap":case"WeakSet":return 2;default:return 0}}function ru(s){return s.__v_skip||!Object.isExtensible(s)?0:iu(Tm(s))}function xt(s){return Dn(s)?s:Ul(s,!1,Ym,eu,vi)}function _i(s){return Ul(s,!1,Jm,lu,yi)}function hn(s){return Ul(s,!0,Qm,ou,ki)}function Ul(s,a,n,t,e){if(!Is(s)||s.__v_raw&&!(a&&s.__v_isReactive))return s;const l=e.get(s);if(l)return l;const o=ru(s);if(o===0)return s;const p=new Proxy(s,o===2?t:n);return e.set(s,p),p}function In(s){return Dn(s)?In(s.__v_raw):!!(s&&s.__v_isReactive)}function Dn(s){return!!(s&&s.__v_isReadonly)}function le(s){return!!(s&&s.__v_isShallow)}function bi(s){return In(s)||Dn(s)}function os(s){const a=s&&s.__v_raw;return a?os(a):s}function Ei(s){return Object.isExtensible(s)&&te(s,"__v_skip",!0),s}const ut=s=>Is(s)?xt(s):s,Gl=s=>Is(s)?hn(s):s;class wi{constructor(a,n,t,e){this._setter=n,this.dep=void 0,this.__v_isRef=!0,this.__v_isReadonly=!1,this.effect=new $l(()=>a(this._value),()=>tt(this,this.effect._dirtyLevel===2?2:3)),this.effect.computed=this,this.effect.active=this._cacheable=!e,this.__v_isReadonly=t}get value(){const a=os(this);return(!a._cacheable||a.effect.dirty)&&Xa(a._value,a._value=a.effect.run())&&tt(a,4),Wl(a),a.effect._dirtyLevel>=2&&tt(a,2),a._value}set value(a){this._setter(a)}get _dirty(){return this.effect.dirty}set _dirty(a){this.effect.dirty=a}}function cu(s,a,n=!1){let t,e;const l=ts(s);return l?(t=s,e=la):(t=s.get,e=s.set),new wi(t,e,l||!e,n)}function Wl(s){var a;Wa&&pn&&(s=os(s),mi(pn,(a=s.dep)!=null?a:s.dep=di(()=>s.dep=void 0,s instanceof wi?s:void 0)))}function tt(s,a=4,n){s=os(s);const t=s.dep;t&&ui(t,a)}function Hs(s){return!!(s&&s.__v_isRef===!0)}function Q(s){return xi(s,!1)}function Ts(s){return xi(s,!0)}function xi(s,a){return Hs(s)?s:new mu(s,a)}class mu{constructor(a,n){this.__v_isShallow=n,this.dep=void 0,this.__v_isRef=!0,this._rawValue=n?a:os(a),this._value=n?a:ut(a)}get value(){return Wl(this),this._value}set value(a){const n=this.__v_isShallow||le(a)||Dn(a);a=n?a:os(a),Xa(a,this._rawValue)&&(this._rawValue=a,this._value=n?a:ut(a),tt(this,4))}}function cn(s){return Hs(s)?s.value:s}const uu={get:(s,a,n)=>cn(Reflect.get(s,a,n)),set:(s,a,n,t)=>{const e=s[a];return Hs(e)&&!Hs(n)?(e.value=n,!0):Reflect.set(s,a,n,t)}};function Ai(s){return In(s)?s:new Proxy(s,uu)}class du{constructor(a){this.dep=void 0,this.__v_isRef=!0;const{get:n,set:t}=a(()=>Wl(this),()=>tt(this));this._get=n,this._set=t}get value(){return this._get()}set value(a){this._set(a)}}function Ci(s){return new du(s)}class hu{constructor(a,n,t){this._object=a,this._key=n,this._defaultValue=t,this.__v_isRef=!0}get value(){const a=this._object[this._key];return a===void 0?this._defaultValue:a}set value(a){this._object[this._key]=a}get dep(){return Um(os(this._object),this._key)}}class gu{constructor(a){this._getter=a,this.__v_isRef=!0,this.__v_isReadonly=!0}get value(){return this._getter()}}function jn(s,a,n){return Hs(s)?s:ts(s)?new gu(s):Is(s)&&arguments.length>1?fu(s,a,n):Q(s)}function fu(s,a,n){const t=s[a];return Hs(t)?t:new hu(s,a,n)}/**
* @vue/runtime-core v3.4.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/function Ka(s,a,n,t){let e;try{e=t?s(...t):s()}catch(l){At(l,a,n)}return e}function pa(s,a,n,t){if(ts(s)){const l=Ka(s,a,n,t);return l&&li(l)&&l.catch(o=>{At(o,a,n)}),l}const e=[];for(let l=0;l<s.length;l++)e.push(pa(s[l],a,n,t));return e}function At(s,a,n,t=!0){const e=a?a.vnode:null;if(a){let l=a.parent;const o=a.proxy,p=`https://vuejs.org/error-reference/#runtime-${n}`;for(;l;){const r=l.ec;if(r){for(let m=0;m<r.length;m++)if(r[m](s,o,p)===!1)return}l=l.parent}const c=a.appContext.config.errorHandler;if(c){Ka(c,null,10,[s,o,p]);return}}vu(s,n,e,t)}function vu(s,a,n,t=!0){console.error(s)}let dt=!1,ml=!1;const Ns=[];let Ea=0;const Ln=[];let Na=null,en=0;const Ii=Promise.resolve();let Kl=null;function Ja(s){const a=Kl||Ii;return s?a.then(this?s.bind(this):s):a}function yu(s){let a=Ea+1,n=Ns.length;for(;a<n;){const t=a+n>>>1,e=Ns[t],l=ht(e);l<s||l===s&&e.pre?a=t+1:n=t}return a}function ke(s){(!Ns.length||!Ns.includes(s,dt&&s.allowRecurse?Ea+1:Ea))&&(s.id==null?Ns.push(s):Ns.splice(yu(s.id),0,s),Li())}function Li(){!dt&&!ml&&(ml=!0,Kl=Ii.then(Ti))}function ku(s){const a=Ns.indexOf(s);a>Ea&&Ns.splice(a,1)}function _u(s){ns(s)?Ln.push(...s):(!Na||!Na.includes(s,s.allowRecurse?en+1:en))&&Ln.push(s),Li()}function Fo(s,a,n=dt?Ea+1:0){for(;n<Ns.length;n++){const t=Ns[n];if(t&&t.pre){if(s&&t.id!==s.uid)continue;Ns.splice(n,1),n--,t()}}}function oe(s){if(Ln.length){const a=[...new Set(Ln)].sort((n,t)=>ht(n)-ht(t));if(Ln.length=0,Na){Na.push(...a);return}for(Na=a,en=0;en<Na.length;en++)Na[en]();Na=null,en=0}}const ht=s=>s.id==null?1/0:s.id,bu=(s,a)=>{const n=ht(s)-ht(a);if(n===0){if(s.pre&&!a.pre)return-1;if(a.pre&&!s.pre)return 1}return n};function Ti(s){ml=!1,dt=!0,Ns.sort(bu);try{for(Ea=0;Ea<Ns.length;Ea++){const a=Ns[Ea];a&&a.active!==!1&&Ka(a,null,14)}}finally{Ea=0,Ns.length=0,oe(),dt=!1,Kl=null,(Ns.length||Ln.length)&&Ti()}}function Eu(s,a,...n){if(s.isUnmounted)return;const t=s.vnode.props||xs;let e=n;const l=a.startsWith("update:"),o=l&&a.slice(7);if(o&&o in t){const m=`${o==="modelValue"?"model":o}Modifiers`,{number:d,trim:h}=t[m]||xs;h&&(e=n.map(g=>Fs(g)?g.trim():g)),d&&(e=n.map(Dm))}let p,c=t[p=Re(a)]||t[p=Re(Ks(a))];!c&&l&&(c=t[p=Re(Hn(a))]),c&&pa(c,s,6,e);const r=t[p+"Once"];if(r){if(!s.emitted)s.emitted={};else if(s.emitted[p])return;s.emitted[p]=!0,pa(r,s,6,e)}}function Pi(s,a,n=!1){const t=a.emitsCache,e=t.get(s);if(e!==void 0)return e;const l=s.emits;let o={},p=!1;if(!ts(s)){const c=r=>{const m=Pi(r,a,!0);m&&(p=!0,Rs(o,m))};!n&&a.mixins.length&&a.mixins.forEach(c),s.extends&&c(s.extends),s.mixins&&s.mixins.forEach(c)}return!l&&!p?(Is(s)&&t.set(s,null),null):(ns(l)?l.forEach(c=>o[c]=null):Rs(o,l),Is(s)&&t.set(s,o),o)}function _e(s,a){return!s||!wt(a)?!1:(a=a.slice(2).replace(/Once$/,""),rs(s,a[0].toLowerCase()+a.slice(1))||rs(s,Hn(a))||rs(s,a))}let oa=null,Si=null;function pe(s){const a=oa;return oa=s,Si=s&&s.type.__scopeId||null,a}function wu(s,a=oa,n){if(!a||s._n)return s;const t=(...e)=>{t._d&&Qo(-1);const l=pe(a);let o;try{o=s(...e)}finally{pe(l),t._d&&Qo(1)}return o};return t._n=!0,t._c=!0,t._d=!0,t}function Ve(s){const{type:a,vnode:n,proxy:t,withProxy:e,props:l,propsOptions:[o],slots:p,attrs:c,emit:r,render:m,renderCache:d,data:h,setupState:g,ctx:y,inheritAttrs:E}=s;let w,k;const C=pe(s);try{if(n.shapeFlag&4){const I=e||t,M=I;w=ua(m.call(M,I,d,l,g,h,y)),k=c}else{const I=a;w=ua(I.length>1?I(l,{attrs:c,slots:p,emit:r}):I(l,null)),k=a.props?c:xu(c)}}catch(I){it.length=0,At(I,s,1),w=Ps(ra)}let _=w;if(k&&E!==!1){const I=Object.keys(k),{shapeFlag:M}=_;I.length&&M&7&&(o&&I.some(Ml)&&(k=Au(k,o)),_=Ya(_,k))}return n.dirs&&(_=Ya(_),_.dirs=_.dirs?_.dirs.concat(n.dirs):n.dirs),n.transition&&(_.transition=n.transition),w=_,pe(C),w}const xu=s=>{let a;for(const n in s)(n==="class"||n==="style"||wt(n))&&((a||(a={}))[n]=s[n]);return a},Au=(s,a)=>{const n={};for(const t in s)(!Ml(t)||!(t.slice(9)in a))&&(n[t]=s[t]);return n};function Cu(s,a,n){const{props:t,children:e,component:l}=s,{props:o,children:p,patchFlag:c}=a,r=l.emitsOptions;if(a.dirs||a.transition)return!0;if(n&&c>=0){if(c&1024)return!0;if(c&16)return t?$o(t,o,r):!!o;if(c&8){const m=a.dynamicProps;for(let d=0;d<m.length;d++){const h=m[d];if(o[h]!==t[h]&&!_e(r,h))return!0}}}else return(e||p)&&(!p||!p.$stable)?!0:t===o?!1:t?o?$o(t,o,r):!0:!!o;return!1}function $o(s,a,n){const t=Object.keys(a);if(t.length!==Object.keys(s).length)return!0;for(let e=0;e<t.length;e++){const l=t[e];if(a[l]!==s[l]&&!_e(n,l))return!0}return!1}function Iu({vnode:s,parent:a},n){for(;a;){const t=a.subTree;if(t.suspense&&t.suspense.activeBranch===s&&(t.el=s.el),t===s)(s=a.vnode).el=n,a=a.parent;else break}}const Oi="components";function ia(s,a){return Tu(Oi,s,!0,a)||s}const Lu=Symbol.for("v-ndc");function Tu(s,a,n=!0,t=!1){const e=oa||zs;if(e){const l=e.type;if(s===Oi){const p=Ad(l,!1);if(p&&(p===a||p===Ks(a)||p===Nn(Ks(a))))return l}const o=Ho(e[s]||l[s],a)||Ho(e.appContext[s],a);return!o&&t?l:o}}function Ho(s,a){return s&&(s[a]||s[Ks(a)]||s[Nn(Ks(a))])}const Pu=s=>s.__isSuspense;function Di(s,a){a&&a.pendingBranch?ns(s)?a.effects.push(...s):a.effects.push(s):_u(s)}const Su=Symbol.for("v-scx"),Ou=()=>bs(Su);function Ri(s,a){return Xl(s,null,a)}const Ut={};function cs(s,a,n){return Xl(s,a,n)}function Xl(s,a,{immediate:n,deep:t,flush:e,once:l,onTrack:o,onTrigger:p}=xs){if(a&&l){const A=a;a=(...R)=>{A(...R),M()}}const c=zs,r=A=>t===!0?A:wn(A,t===!1?1:void 0);let m,d=!1,h=!1;if(Hs(s)?(m=()=>s.value,d=le(s)):In(s)?(m=()=>r(s),d=!0):ns(s)?(h=!0,d=s.some(A=>In(A)||le(A)),m=()=>s.map(A=>{if(Hs(A))return A.value;if(In(A))return r(A);if(ts(A))return Ka(A,c,2)})):ts(s)?a?m=()=>Ka(s,c,2):m=()=>(g&&g(),pa(s,c,3,[y])):m=la,a&&t){const A=m;m=()=>wn(A())}let g,y=A=>{g=_.onStop=()=>{Ka(A,c,4),g=_.onStop=void 0}},E;if(Lt)if(y=la,a?n&&pa(a,c,3,[m(),h?[]:void 0,y]):m(),e==="sync"){const A=Ou();E=A.__watcherHandles||(A.__watcherHandles=[])}else return la;let w=h?new Array(s.length).fill(Ut):Ut;const k=()=>{if(!(!_.active||!_.dirty))if(a){const A=_.run();(t||d||(h?A.some((R,O)=>Xa(R,w[O])):Xa(A,w)))&&(g&&g(),pa(a,c,3,[A,w===Ut?void 0:h&&w[0]===Ut?[]:w,y]),w=A)}else _.run()};k.allowRecurse=!!a;let C;e==="sync"?C=k:e==="post"?C=()=>Gs(k,c&&c.suspense):(k.pre=!0,c&&(k.id=c.uid),C=()=>ke(k));const _=new $l(m,la,C),I=ii(),M=()=>{_.stop(),I&&Vl(I.effects,_)};return a?n?k():w=_.run():e==="post"?Gs(_.run.bind(_),c&&c.suspense):_.run(),E&&E.push(M),M}function Du(s,a,n){const t=this.proxy,e=Fs(s)?s.includes(".")?Mi(t,s):()=>t[s]:s.bind(t,t);let l;ts(a)?l=a:(l=a.handler,n=a);const o=It(this),p=Xl(e,l.bind(t),n);return o(),p}function Mi(s,a){const n=a.split(".");return()=>{let t=s;for(let e=0;e<n.length&&t;e++)t=t[n[e]];return t}}function wn(s,a,n=0,t){if(!Is(s)||s.__v_skip)return s;if(a&&a>0){if(n>=a)return s;n++}if(t=t||new Set,t.has(s))return s;if(t.add(s),Hs(s))wn(s.value,a,n,t);else if(ns(s))for(let e=0;e<s.length;e++)wn(s[e],a,n,t);else if(Im(s)||nt(s))s.forEach(e=>{wn(e,a,n,t)});else if(Pm(s))for(const e in s)wn(s[e],a,n,t);return s}function ba(s,a,n,t){const e=s.dirs,l=a&&a.dirs;for(let o=0;o<e.length;o++){const p=e[o];l&&(p.oldValue=l[o].value);let c=p.dir[t];c&&(un(),pa(c,n,8,[s.el,p,s,a]),dn())}}const ja=Symbol("_leaveCb"),Gt=Symbol("_enterCb");function Vi(){const s={isMounted:!1,isLeaving:!1,isUnmounting:!1,leavingVNodes:new Map};return ys(()=>{s.isMounted=!0}),Hi(()=>{s.isUnmounting=!0}),s}const na=[Function,Array],Bi={mode:String,appear:Boolean,persisted:Boolean,onBeforeEnter:na,onEnter:na,onAfterEnter:na,onEnterCancelled:na,onBeforeLeave:na,onLeave:na,onAfterLeave:na,onLeaveCancelled:na,onBeforeAppear:na,onAppear:na,onAfterAppear:na,onAppearCancelled:na},Ru={name:"BaseTransition",props:Bi,setup(s,{slots:a}){const n=Un(),t=Vi();let e;return()=>{const l=a.default&&Yl(a.default(),!0);if(!l||!l.length)return;let o=l[0];if(l.length>1){for(const E of l)if(E.type!==ra){o=E;break}}const p=os(s),{mode:c}=p;if(t.isLeaving)return Be(o);const r=No(o);if(!r)return Be(o);const m=gt(r,p,t,n);ft(r,m);const d=n.subTree,h=d&&No(d);let g=!1;const{getTransitionKey:y}=r.type;if(y){const E=y();e===void 0?e=E:E!==e&&(e=E,g=!0)}if(h&&h.type!==ra&&(!ln(r,h)||g)){const E=gt(h,p,t,n);if(ft(h,E),c==="out-in")return t.isLeaving=!0,E.afterLeave=()=>{t.isLeaving=!1,n.update.active!==!1&&(n.effect.dirty=!0,n.update())},Be(o);c==="in-out"&&r.type!==ra&&(E.delayLeave=(w,k,C)=>{const _=zi(t,h);_[String(h.key)]=h,w[ja]=()=>{k(),w[ja]=void 0,delete m.delayedLeave},m.delayedLeave=C})}return o}}},Mu=Ru;function zi(s,a){const{leavingVNodes:n}=s;let t=n.get(a.type);return t||(t=Object.create(null),n.set(a.type,t)),t}function gt(s,a,n,t){const{appear:e,mode:l,persisted:o=!1,onBeforeEnter:p,onEnter:c,onAfterEnter:r,onEnterCancelled:m,onBeforeLeave:d,onLeave:h,onAfterLeave:g,onLeaveCancelled:y,onBeforeAppear:E,onAppear:w,onAfterAppear:k,onAppearCancelled:C}=a,_=String(s.key),I=zi(n,s),M=(O,V)=>{O&&pa(O,t,9,V)},A=(O,V)=>{const $=V[1];M(O,V),ns(O)?O.every(X=>X.length<=1)&&$():O.length<=1&&$()},R={mode:l,persisted:o,beforeEnter(O){let V=p;if(!n.isMounted)if(e)V=E||p;else return;O[ja]&&O[ja](!0);const $=I[_];$&&ln(s,$)&&$.el[ja]&&$.el[ja](),M(V,[O])},enter(O){let V=c,$=r,X=m;if(!n.isMounted)if(e)V=w||c,$=k||r,X=C||m;else return;let H=!1;const Z=O[Gt]=Cs=>{H||(H=!0,Cs?M(X,[O]):M($,[O]),R.delayedLeave&&R.delayedLeave(),O[Gt]=void 0)};V?A(V,[O,Z]):Z()},leave(O,V){const $=String(s.key);if(O[Gt]&&O[Gt](!0),n.isUnmounting)return V();M(d,[O]);let X=!1;const H=O[ja]=Z=>{X||(X=!0,V(),Z?M(y,[O]):M(g,[O]),O[ja]=void 0,I[$]===s&&delete I[$])};I[$]=s,h?A(h,[O,H]):H()},clone(O){return gt(O,a,n,t)}};return R}function Be(s){if(Ct(s))return s=Ya(s),s.children=null,s}function No(s){return Ct(s)?s.children?s.children[0]:void 0:s}function ft(s,a){s.shapeFlag&6&&s.component?ft(s.component.subTree,a):s.shapeFlag&128?(s.ssContent.transition=a.clone(s.ssContent),s.ssFallback.transition=a.clone(s.ssFallback)):s.transition=a}function Yl(s,a=!1,n){let t=[],e=0;for(let l=0;l<s.length;l++){let o=s[l];const p=n==null?o.key:String(n)+String(o.key!=null?o.key:l);o.type===Zs?(o.patchFlag&128&&e++,t=t.concat(Yl(o.children,a,p))):(a||o.type!==ra)&&t.push(p!=null?Ya(o,{key:p}):o)}if(e>1)for(let l=0;l<t.length;l++)t[l].patchFlag=-2;return t}/*! #__NO_SIDE_EFFECTS__ */function z(s,a){return ts(s)?Rs({name:s.name},a,{setup:s}):s}const et=s=>!!s.type.__asyncLoader;/*! #__NO_SIDE_EFFECTS__ */function Vu(s){ts(s)&&(s={loader:s});const{loader:a,loadingComponent:n,errorComponent:t,delay:e=200,timeout:l,suspensible:o=!0,onError:p}=s;let c=null,r,m=0;const d=()=>(m++,c=null,h()),h=()=>{let g;return c||(g=c=a().catch(y=>{if(y=y instanceof Error?y:new Error(String(y)),p)return new Promise((E,w)=>{p(y,()=>E(d()),()=>w(y),m+1)});throw y}).then(y=>g!==c&&c?c:(y&&(y.__esModule||y[Symbol.toStringTag]==="Module")&&(y=y.default),r=y,y)))};return z({name:"AsyncComponentWrapper",__asyncLoader:h,get __asyncResolved(){return r},setup(){const g=zs;if(r)return()=>ze(r,g);const y=C=>{c=null,At(C,g,13,!t)};if(o&&g.suspense||Lt)return h().then(C=>()=>ze(C,g)).catch(C=>(y(C),()=>t?Ps(t,{error:C}):null));const E=Q(!1),w=Q(),k=Q(!!e);return e&&setTimeout(()=>{k.value=!1},e),l!=null&&setTimeout(()=>{if(!E.value&&!w.value){const C=new Error(`Async component timed out after ${l}ms.`);y(C),w.value=C}},l),h().then(()=>{E.value=!0,g.parent&&Ct(g.parent.vnode)&&(g.parent.effect.dirty=!0,ke(g.parent.update))}).catch(C=>{y(C),w.value=C}),()=>{if(E.value&&r)return ze(r,g);if(w.value&&t)return Ps(t,{error:w.value});if(n&&!k.value)return Ps(n)}}})}function ze(s,a){const{ref:n,props:t,children:e,ce:l}=a.vnode,o=Ps(s,t,e);return o.ref=n,o.ce=l,delete a.vnode.ce,o}const Ct=s=>s.type.__isKeepAlive;function Bu(s,a){Fi(s,"a",a)}function zu(s,a){Fi(s,"da",a)}function Fi(s,a,n=zs){const t=s.__wdc||(s.__wdc=()=>{let e=n;for(;e;){if(e.isDeactivated)return;e=e.parent}return s()});if(be(a,t,n),n){let e=n.parent;for(;e&&e.parent;)Ct(e.parent.vnode)&&Fu(t,a,n,e),e=e.parent}}function Fu(s,a,n,t){const e=be(a,s,t,!0);qn(()=>{Vl(t[a],e)},n)}function be(s,a,n=zs,t=!1){if(n){const e=n[s]||(n[s]=[]),l=a.__weh||(a.__weh=(...o)=>{if(n.isUnmounted)return;un();const p=It(n),c=pa(a,n,s,o);return p(),dn(),c});return t?e.unshift(l):e.push(l),l}}const Oa=s=>(a,n=zs)=>(!Lt||s==="sp")&&be(s,(...t)=>a(...t),n),$u=Oa("bm"),ys=Oa("m"),Hu=Oa("bu"),$i=Oa("u"),Hi=Oa("bum"),qn=Oa("um"),Nu=Oa("sp"),ju=Oa("rtg"),qu=Oa("rtc");function Uu(s,a=zs){be("ec",s,a)}const ul=s=>s?nr(s)?so(s)||s.proxy:ul(s.parent):null,lt=Rs(Object.create(null),{$:s=>s,$el:s=>s.vnode.el,$data:s=>s.data,$props:s=>s.props,$attrs:s=>s.attrs,$slots:s=>s.slots,$refs:s=>s.refs,$parent:s=>ul(s.parent),$root:s=>ul(s.root),$emit:s=>s.emit,$options:s=>Ql(s),$forceUpdate:s=>s.f||(s.f=()=>{s.effect.dirty=!0,ke(s.update)}),$nextTick:s=>s.n||(s.n=Ja.bind(s.proxy)),$watch:s=>Du.bind(s)}),Fe=(s,a)=>s!==xs&&!s.__isScriptSetup&&rs(s,a),Gu={get({_:s},a){const{ctx:n,setupState:t,data:e,props:l,accessCache:o,type:p,appContext:c}=s;let r;if(a[0]!=="$"){const g=o[a];if(g!==void 0)switch(g){case 1:return t[a];case 2:return e[a];case 4:return n[a];case 3:return l[a]}else{if(Fe(t,a))return o[a]=1,t[a];if(e!==xs&&rs(e,a))return o[a]=2,e[a];if((r=s.propsOptions[0])&&rs(r,a))return o[a]=3,l[a];if(n!==xs&&rs(n,a))return o[a]=4,n[a];dl&&(o[a]=0)}}const m=lt[a];let d,h;if(m)return a==="$attrs"&&Xs(s,"get",a),m(s);if((d=p.__cssModules)&&(d=d[a]))return d;if(n!==xs&&rs(n,a))return o[a]=4,n[a];if(h=c.config.globalProperties,rs(h,a))return h[a]},set({_:s},a,n){const{data:t,setupState:e,ctx:l}=s;return Fe(e,a)?(e[a]=n,!0):t!==xs&&rs(t,a)?(t[a]=n,!0):rs(s.props,a)||a[0]==="$"&&a.slice(1)in s?!1:(l[a]=n,!0)},has({_:{data:s,setupState:a,accessCache:n,ctx:t,appContext:e,propsOptions:l}},o){let p;return!!n[o]||s!==xs&&rs(s,o)||Fe(a,o)||(p=l[0])&&rs(p,o)||rs(t,o)||rs(lt,o)||rs(e.config.globalProperties,o)},defineProperty(s,a,n){return n.get!=null?s._.accessCache[a]=0:rs(n,"value")&&this.set(s,a,n.value,null),Reflect.defineProperty(s,a,n)}};function jo(s){return ns(s)?s.reduce((a,n)=>(a[n]=null,a),{}):s}let dl=!0;function Wu(s){const a=Ql(s),n=s.proxy,t=s.ctx;dl=!1,a.beforeCreate&&qo(a.beforeCreate,s,"bc");const{data:e,computed:l,methods:o,watch:p,provide:c,inject:r,created:m,beforeMount:d,mounted:h,beforeUpdate:g,updated:y,activated:E,deactivated:w,beforeDestroy:k,beforeUnmount:C,destroyed:_,unmounted:I,render:M,renderTracked:A,renderTriggered:R,errorCaptured:O,serverPrefetch:V,expose:$,inheritAttrs:X,components:H,directives:Z,filters:Cs}=a;if(r&&Ku(r,t,null),o)for(const ss in o){const W=o[ss];ts(W)&&(t[ss]=W.bind(n))}if(e){const ss=e.call(n,n);Is(ss)&&(s.data=xt(ss))}if(dl=!0,l)for(const ss in l){const W=l[ss],Os=ts(W)?W.bind(n,n):ts(W.get)?W.get.bind(n,n):la,ya=!ts(W)&&ts(W.set)?W.set.bind(n):la,aa=b({get:Os,set:ya});Object.defineProperty(t,ss,{enumerable:!0,configurable:!0,get:()=>aa.value,set:Vs=>aa.value=Vs})}if(p)for(const ss in p)Ni(p[ss],t,n,ss);if(c){const ss=ts(c)?c.call(n):c;Reflect.ownKeys(ss).forEach(W=>{ha(W,ss[W])})}m&&qo(m,s,"c");function G(ss,W){ns(W)?W.forEach(Os=>ss(Os.bind(n))):W&&ss(W.bind(n))}if(G($u,d),G(ys,h),G(Hu,g),G($i,y),G(Bu,E),G(zu,w),G(Uu,O),G(qu,A),G(ju,R),G(Hi,C),G(qn,I),G(Nu,V),ns($))if($.length){const ss=s.exposed||(s.exposed={});$.forEach(W=>{Object.defineProperty(ss,W,{get:()=>n[W],set:Os=>n[W]=Os})})}else s.exposed||(s.exposed={});M&&s.render===la&&(s.render=M),X!=null&&(s.inheritAttrs=X),H&&(s.components=H),Z&&(s.directives=Z)}function Ku(s,a,n=la){ns(s)&&(s=hl(s));for(const t in s){const e=s[t];let l;Is(e)?"default"in e?l=bs(e.from||t,e.default,!0):l=bs(e.from||t):l=bs(e),Hs(l)?Object.defineProperty(a,t,{enumerable:!0,configurable:!0,get:()=>l.value,set:o=>l.value=o}):a[t]=l}}function qo(s,a,n){pa(ns(s)?s.map(t=>t.bind(a.proxy)):s.bind(a.proxy),a,n)}function Ni(s,a,n,t){const e=t.includes(".")?Mi(n,t):()=>n[t];if(Fs(s)){const l=a[s];ts(l)&&cs(e,l)}else if(ts(s))cs(e,s.bind(n));else if(Is(s))if(ns(s))s.forEach(l=>Ni(l,a,n,t));else{const l=ts(s.handler)?s.handler.bind(n):a[s.handler];ts(l)&&cs(e,l,s)}}function Ql(s){const a=s.type,{mixins:n,extends:t}=a,{mixins:e,optionsCache:l,config:{optionMergeStrategies:o}}=s.appContext,p=l.get(a);let c;return p?c=p:!e.length&&!n&&!t?c=a:(c={},e.length&&e.forEach(r=>ie(c,r,o,!0)),ie(c,a,o)),Is(a)&&l.set(a,c),c}function ie(s,a,n,t=!1){const{mixins:e,extends:l}=a;l&&ie(s,l,n,!0),e&&e.forEach(o=>ie(s,o,n,!0));for(const o in a)if(!(t&&o==="expose")){const p=Xu[o]||n&&n[o];s[o]=p?p(s[o],a[o]):a[o]}return s}const Xu={data:Uo,props:Go,emits:Go,methods:st,computed:st,beforeCreate:qs,created:qs,beforeMount:qs,mounted:qs,beforeUpdate:qs,updated:qs,beforeDestroy:qs,beforeUnmount:qs,destroyed:qs,unmounted:qs,activated:qs,deactivated:qs,errorCaptured:qs,serverPrefetch:qs,components:st,directives:st,watch:Qu,provide:Uo,inject:Yu};function Uo(s,a){return a?s?function(){return Rs(ts(s)?s.call(this,this):s,ts(a)?a.call(this,this):a)}:a:s}function Yu(s,a){return st(hl(s),hl(a))}function hl(s){if(ns(s)){const a={};for(let n=0;n<s.length;n++)a[s[n]]=s[n];return a}return s}function qs(s,a){return s?[...new Set([].concat(s,a))]:a}function st(s,a){return s?Rs(Object.create(null),s,a):a}function Go(s,a){return s?ns(s)&&ns(a)?[...new Set([...s,...a])]:Rs(Object.create(null),jo(s),jo(a??{})):a}function Qu(s,a){if(!s)return a;if(!a)return s;const n=Rs(Object.create(null),s);for(const t in a)n[t]=qs(s[t],a[t]);return n}function ji(){return{app:null,config:{isNativeTag:Am,performance:!1,globalProperties:{},optionMergeStrategies:{},errorHandler:void 0,warnHandler:void 0,compilerOptions:{}},mixins:[],components:{},directives:{},provides:Object.create(null),optionsCache:new WeakMap,propsCache:new WeakMap,emitsCache:new WeakMap}}let Ju=0;function Zu(s,a){return function(t,e=null){ts(t)||(t=Rs({},t)),e!=null&&!Is(e)&&(e=null);const l=ji(),o=new WeakSet;let p=!1;const c=l.app={_uid:Ju++,_component:t,_props:e,_container:null,_context:l,_instance:null,version:Id,get config(){return l.config},set config(r){},use(r,...m){return o.has(r)||(r&&ts(r.install)?(o.add(r),r.install(c,...m)):ts(r)&&(o.add(r),r(c,...m))),c},mixin(r){return l.mixins.includes(r)||l.mixins.push(r),c},component(r,m){return m?(l.components[r]=m,c):l.components[r]},directive(r,m){return m?(l.directives[r]=m,c):l.directives[r]},mount(r,m,d){if(!p){const h=Ps(t,e);return h.appContext=l,d===!0?d="svg":d===!1&&(d=void 0),m&&a?a(h,r):s(h,r,d),p=!0,c._container=r,r.__vue_app__=c,so(h.component)||h.component.proxy}},unmount(){p&&(s(null,c._container),delete c._container.__vue_app__)},provide(r,m){return l.provides[r]=m,c},runWithContext(r){const m=ot;ot=c;try{return r()}finally{ot=m}}};return c}}let ot=null;function ha(s,a){if(zs){let n=zs.provides;const t=zs.parent&&zs.parent.provides;t===n&&(n=zs.provides=Object.create(t)),n[s]=a}}function bs(s,a,n=!1){const t=zs||oa;if(t||ot){const e=t?t.parent==null?t.vnode.appContext&&t.vnode.appContext.provides:t.parent.provides:ot._context.provides;if(e&&s in e)return e[s];if(arguments.length>1)return n&&ts(a)?a.call(t&&t.proxy):a}}function sd(s,a,n,t=!1){const e={},l={};te(l,Ee,1),s.propsDefaults=Object.create(null),qi(s,a,e,l);for(const o in s.propsOptions[0])o in e||(e[o]=void 0);n?s.props=t?e:_i(e):s.type.props?s.props=e:s.props=l,s.attrs=l}function ad(s,a,n,t){const{props:e,attrs:l,vnode:{patchFlag:o}}=s,p=os(e),[c]=s.propsOptions;let r=!1;if((t||o>0)&&!(o&16)){if(o&8){const m=s.vnode.dynamicProps;for(let d=0;d<m.length;d++){let h=m[d];if(_e(s.emitsOptions,h))continue;const g=a[h];if(c)if(rs(l,h))g!==l[h]&&(l[h]=g,r=!0);else{const y=Ks(h);e[y]=gl(c,p,y,g,s,!1)}else g!==l[h]&&(l[h]=g,r=!0)}}}else{qi(s,a,e,l)&&(r=!0);let m;for(const d in p)(!a||!rs(a,d)&&((m=Hn(d))===d||!rs(a,m)))&&(c?n&&(n[d]!==void 0||n[m]!==void 0)&&(e[d]=gl(c,p,d,void 0,s,!0)):delete e[d]);if(l!==p)for(const d in l)(!a||!rs(a,d))&&(delete l[d],r=!0)}r&&Sa(s,"set","$attrs")}function qi(s,a,n,t){const[e,l]=s.propsOptions;let o=!1,p;if(a)for(let c in a){if(Cn(c))continue;const r=a[c];let m;e&&rs(e,m=Ks(c))?!l||!l.includes(m)?n[m]=r:(p||(p={}))[m]=r:_e(s.emitsOptions,c)||(!(c in t)||r!==t[c])&&(t[c]=r,o=!0)}if(l){const c=os(n),r=p||xs;for(let m=0;m<l.length;m++){const d=l[m];n[d]=gl(e,c,d,r[d],s,!rs(r,d))}}return o}function gl(s,a,n,t,e,l){const o=s[n];if(o!=null){const p=rs(o,"default");if(p&&t===void 0){const c=o.default;if(o.type!==Function&&!o.skipFactory&&ts(c)){const{propsDefaults:r}=e;if(n in r)t=r[n];else{const m=It(e);t=r[n]=c.call(null,a),m()}}else t=c}o[0]&&(l&&!p?t=!1:o[1]&&(t===""||t===Hn(n))&&(t=!0))}return t}function Ui(s,a,n=!1){const t=a.propsCache,e=t.get(s);if(e)return e;const l=s.props,o={},p=[];let c=!1;if(!ts(s)){const m=d=>{c=!0;const[h,g]=Ui(d,a,!0);Rs(o,h),g&&p.push(...g)};!n&&a.mixins.length&&a.mixins.forEach(m),s.extends&&m(s.extends),s.mixins&&s.mixins.forEach(m)}if(!l&&!c)return Is(s)&&t.set(s,An),An;if(ns(l))for(let m=0;m<l.length;m++){const d=Ks(l[m]);Wo(d)&&(o[d]=xs)}else if(l)for(const m in l){const d=Ks(m);if(Wo(d)){const h=l[m],g=o[d]=ns(h)||ts(h)?{type:h}:Rs({},h);if(g){const y=Yo(Boolean,g.type),E=Yo(String,g.type);g[0]=y>-1,g[1]=E<0||y<E,(y>-1||rs(g,"default"))&&p.push(d)}}}const r=[o,p];return Is(s)&&t.set(s,r),r}function Wo(s){return s[0]!=="$"&&!Cn(s)}function Ko(s){const a=s&&s.toString().match(/^\s*(function|class) (\w+)/);return a?a[2]:s===null?"null":""}function Xo(s,a){return Ko(s)===Ko(a)}function Yo(s,a){return ns(a)?a.findIndex(n=>Xo(n,s)):ts(a)&&Xo(a,s)?0:-1}const Gi=s=>s[0]==="_"||s==="$stable",Jl=s=>ns(s)?s.map(ua):[ua(s)],nd=(s,a,n)=>{if(a._n)return a;const t=wu((...e)=>Jl(a(...e)),n);return t._c=!1,t},Wi=(s,a,n)=>{const t=s._ctx;for(const e in s){if(Gi(e))continue;const l=s[e];if(ts(l))a[e]=nd(e,l,t);else if(l!=null){const o=Jl(l);a[e]=()=>o}}},Ki=(s,a)=>{const n=Jl(a);s.slots.default=()=>n},td=(s,a)=>{if(s.vnode.shapeFlag&32){const n=a._;n?(s.slots=os(a),te(a,"_",n)):Wi(a,s.slots={})}else s.slots={},a&&Ki(s,a);te(s.slots,Ee,1)},ed=(s,a,n)=>{const{vnode:t,slots:e}=s;let l=!0,o=xs;if(t.shapeFlag&32){const p=a._;p?n&&p===1?l=!1:(Rs(e,a),!n&&p===1&&delete e._):(l=!a.$stable,Wi(a,e)),o=a}else a&&(Ki(s,a),o={default:1});if(l)for(const p in e)!Gi(p)&&o[p]==null&&delete e[p]};function re(s,a,n,t,e=!1){if(ns(s)){s.forEach((h,g)=>re(h,a&&(ns(a)?a[g]:a),n,t,e));return}if(et(t)&&!e)return;const l=t.shapeFlag&4?so(t.component)||t.component.proxy:t.el,o=e?null:l,{i:p,r:c}=s,r=a&&a.r,m=p.refs===xs?p.refs={}:p.refs,d=p.setupState;if(r!=null&&r!==c&&(Fs(r)?(m[r]=null,rs(d,r)&&(d[r]=null)):Hs(r)&&(r.value=null)),ts(c))Ka(c,p,12,[o,m]);else{const h=Fs(c),g=Hs(c);if(h||g){const y=()=>{if(s.f){const E=h?rs(d,c)?d[c]:m[c]:c.value;e?ns(E)&&Vl(E,l):ns(E)?E.includes(l)||E.push(l):h?(m[c]=[l],rs(d,c)&&(d[c]=m[c])):(c.value=[l],s.k&&(m[s.k]=c.value))}else h?(m[c]=o,rs(d,c)&&(d[c]=o)):g&&(c.value=o,s.k&&(m[s.k]=o))};o?(y.id=-1,Gs(y,n)):y()}}}let Ba=!1;const ld=s=>s.namespaceURI.includes("svg")&&s.tagName!=="foreignObject",od=s=>s.namespaceURI.includes("MathML"),Wt=s=>{if(ld(s))return"svg";if(od(s))return"mathml"},Kt=s=>s.nodeType===8;function pd(s){const{mt:a,p:n,o:{patchProp:t,createText:e,nextSibling:l,parentNode:o,remove:p,insert:c,createComment:r}}=s,m=(_,I)=>{if(!I.hasChildNodes()){n(null,_,I),oe(),I._vnode=_;return}Ba=!1,d(I.firstChild,_,null,null,null),oe(),I._vnode=_,Ba&&console.error("Hydration completed but contains mismatches.")},d=(_,I,M,A,R,O=!1)=>{const V=Kt(_)&&_.data==="[",$=()=>E(_,I,M,A,R,V),{type:X,ref:H,shapeFlag:Z,patchFlag:Cs}=I;let Es=_.nodeType;I.el=_,Cs===-2&&(O=!1,I.dynamicChildren=null);let G=null;switch(X){case Rn:Es!==3?I.children===""?(c(I.el=e(""),o(_),_),G=_):G=$():(_.data!==I.children&&(Ba=!0,_.data=I.children),G=l(_));break;case ra:C(_)?(G=l(_),k(I.el=_.content.firstChild,_,M)):Es!==8||V?G=$():G=l(_);break;case pt:if(V&&(_=l(_),Es=_.nodeType),Es===1||Es===3){G=_;const ss=!I.children.length;for(let W=0;W<I.staticCount;W++)ss&&(I.children+=G.nodeType===1?G.outerHTML:G.data),W===I.staticCount-1&&(I.anchor=G),G=l(G);return V?l(G):G}else $();break;case Zs:V?G=y(_,I,M,A,R,O):G=$();break;default:if(Z&1)(Es!==1||I.type.toLowerCase()!==_.tagName.toLowerCase())&&!C(_)?G=$():G=h(_,I,M,A,R,O);else if(Z&6){I.slotScopeIds=R;const ss=o(_);if(V?G=w(_):Kt(_)&&_.data==="teleport start"?G=w(_,_.data,"teleport end"):G=l(_),a(I,ss,null,M,A,Wt(ss),O),et(I)){let W;V?(W=Ps(Zs),W.anchor=G?G.previousSibling:ss.lastChild):W=_.nodeType===3?ar(""):Ps("div"),W.el=_,I.component.subTree=W}}else Z&64?Es!==8?G=$():G=I.type.hydrate(_,I,M,A,R,O,s,g):Z&128&&(G=I.type.hydrate(_,I,M,A,Wt(o(_)),R,O,s,d))}return H!=null&&re(H,null,A,I),G},h=(_,I,M,A,R,O)=>{O=O||!!I.dynamicChildren;const{type:V,props:$,patchFlag:X,shapeFlag:H,dirs:Z,transition:Cs}=I,Es=V==="input"||V==="option";if(Es||X!==-1){Z&&ba(I,null,M,"created");let G=!1;if(C(_)){G=Xi(A,Cs)&&M&&M.vnode.props&&M.vnode.props.appear;const W=_.content.firstChild;G&&Cs.beforeEnter(W),k(W,_,M),I.el=_=W}if(H&16&&!($&&($.innerHTML||$.textContent))){let W=g(_.firstChild,I,_,M,A,R,O);for(;W;){Ba=!0;const Os=W;W=W.nextSibling,p(Os)}}else H&8&&_.textContent!==I.children&&(Ba=!0,_.textContent=I.children);if($)if(Es||!O||X&48)for(const W in $)(Es&&(W.endsWith("value")||W==="indeterminate")||wt(W)&&!Cn(W)||W[0]===".")&&t(_,W,null,$[W],void 0,void 0,M);else $.onClick&&t(_,"onClick",null,$.onClick,void 0,void 0,M);let ss;(ss=$&&$.onVnodeBeforeMount)&&ta(ss,M,I),Z&&ba(I,null,M,"beforeMount"),((ss=$&&$.onVnodeMounted)||Z||G)&&Di(()=>{ss&&ta(ss,M,I),G&&Cs.enter(_),Z&&ba(I,null,M,"mounted")},A)}return _.nextSibling},g=(_,I,M,A,R,O,V)=>{V=V||!!I.dynamicChildren;const $=I.children,X=$.length;for(let H=0;H<X;H++){const Z=V?$[H]:$[H]=ua($[H]);if(_)_=d(_,Z,A,R,O,V);else{if(Z.type===Rn&&!Z.children)continue;Ba=!0,n(null,Z,M,null,A,R,Wt(M),O)}}return _},y=(_,I,M,A,R,O)=>{const{slotScopeIds:V}=I;V&&(R=R?R.concat(V):V);const $=o(_),X=g(l(_),I,$,M,A,R,O);return X&&Kt(X)&&X.data==="]"?l(I.anchor=X):(Ba=!0,c(I.anchor=r("]"),$,X),X)},E=(_,I,M,A,R,O)=>{if(Ba=!0,I.el=null,O){const X=w(_);for(;;){const H=l(_);if(H&&H!==X)p(H);else break}}const V=l(_),$=o(_);return p(_),n(null,I,$,V,M,A,Wt($),R),V},w=(_,I="[",M="]")=>{let A=0;for(;_;)if(_=l(_),_&&Kt(_)&&(_.data===I&&A++,_.data===M)){if(A===0)return l(_);A--}return _},k=(_,I,M)=>{const A=I.parentNode;A&&A.replaceChild(_,I);let R=M;for(;R;)R.vnode.el===I&&(R.vnode.el=R.subTree.el=_),R=R.parent},C=_=>_.nodeType===1&&_.tagName.toLowerCase()==="template";return[m,d]}const Gs=Di;function id(s){return rd(s,pd)}function rd(s,a){const n=oi();n.__VUE__=!0;const{insert:t,remove:e,patchProp:l,createElement:o,createText:p,createComment:c,setText:r,setElementText:m,parentNode:d,nextSibling:h,setScopeId:g=la,insertStaticContent:y}=s,E=(f,v,x,P=null,T=null,B=null,j=void 0,D=null,F=!!v.dynamicChildren)=>{if(f===v)return;f&&!ln(f,v)&&(P=L(f),Vs(f,T,B,!0),f=null),v.patchFlag===-2&&(F=!1,v.dynamicChildren=null);const{type:S,ref:U,shapeFlag:J}=v;switch(S){case Rn:w(f,v,x,P);break;case ra:k(f,v,x,P);break;case pt:f==null&&C(v,x,P,j);break;case Zs:H(f,v,x,P,T,B,j,D,F);break;default:J&1?M(f,v,x,P,T,B,j,D,F):J&6?Z(f,v,x,P,T,B,j,D,F):(J&64||J&128)&&S.process(f,v,x,P,T,B,j,D,F,K)}U!=null&&T&&re(U,f&&f.ref,B,v||f,!v)},w=(f,v,x,P)=>{if(f==null)t(v.el=p(v.children),x,P);else{const T=v.el=f.el;v.children!==f.children&&r(T,v.children)}},k=(f,v,x,P)=>{f==null?t(v.el=c(v.children||""),x,P):v.el=f.el},C=(f,v,x,P)=>{[f.el,f.anchor]=y(f.children,v,x,P,f.el,f.anchor)},_=({el:f,anchor:v},x,P)=>{let T;for(;f&&f!==v;)T=h(f),t(f,x,P),f=T;t(v,x,P)},I=({el:f,anchor:v})=>{let x;for(;f&&f!==v;)x=h(f),e(f),f=x;e(v)},M=(f,v,x,P,T,B,j,D,F)=>{v.type==="svg"?j="svg":v.type==="math"&&(j="mathml"),f==null?A(v,x,P,T,B,j,D,F):V(f,v,T,B,j,D,F)},A=(f,v,x,P,T,B,j,D)=>{let F,S;const{props:U,shapeFlag:J,transition:Y,dirs:as}=f;if(F=f.el=o(f.type,B,U&&U.is,U),J&8?m(F,f.children):J&16&&O(f.children,F,null,P,T,$e(f,B),j,D),as&&ba(f,null,P,"created"),R(F,f,f.scopeId,j,P),U){for(const gs in U)gs!=="value"&&!Cn(gs)&&l(F,gs,null,U[gs],B,f.children,P,T,Ds);"value"in U&&l(F,"value",null,U.value,B),(S=U.onVnodeBeforeMount)&&ta(S,P,f)}as&&ba(f,null,P,"beforeMount");const es=Xi(T,Y);es&&Y.beforeEnter(F),t(F,v,x),((S=U&&U.onVnodeMounted)||es||as)&&Gs(()=>{S&&ta(S,P,f),es&&Y.enter(F),as&&ba(f,null,P,"mounted")},T)},R=(f,v,x,P,T)=>{if(x&&g(f,x),P)for(let B=0;B<P.length;B++)g(f,P[B]);if(T){let B=T.subTree;if(v===B){const j=T.vnode;R(f,j,j.scopeId,j.slotScopeIds,T.parent)}}},O=(f,v,x,P,T,B,j,D,F=0)=>{for(let S=F;S<f.length;S++){const U=f[S]=D?qa(f[S]):ua(f[S]);E(null,U,v,x,P,T,B,j,D)}},V=(f,v,x,P,T,B,j)=>{const D=v.el=f.el;let{patchFlag:F,dynamicChildren:S,dirs:U}=v;F|=f.patchFlag&16;const J=f.props||xs,Y=v.props||xs;let as;if(x&&an(x,!1),(as=Y.onVnodeBeforeUpdate)&&ta(as,x,v,f),U&&ba(v,f,x,"beforeUpdate"),x&&an(x,!0),S?$(f.dynamicChildren,S,D,x,P,$e(v,T),B):j||W(f,v,D,null,x,P,$e(v,T),B,!1),F>0){if(F&16)X(D,v,J,Y,x,P,T);else if(F&2&&J.class!==Y.class&&l(D,"class",null,Y.class,T),F&4&&l(D,"style",J.style,Y.style,T),F&8){const es=v.dynamicProps;for(let gs=0;gs<es.length;gs++){const ws=es[gs],Bs=J[ws],ca=Y[ws];(ca!==Bs||ws==="value")&&l(D,ws,Bs,ca,T,f.children,x,P,Ds)}}F&1&&f.children!==v.children&&m(D,v.children)}else!j&&S==null&&X(D,v,J,Y,x,P,T);((as=Y.onVnodeUpdated)||U)&&Gs(()=>{as&&ta(as,x,v,f),U&&ba(v,f,x,"updated")},P)},$=(f,v,x,P,T,B,j)=>{for(let D=0;D<v.length;D++){const F=f[D],S=v[D],U=F.el&&(F.type===Zs||!ln(F,S)||F.shapeFlag&70)?d(F.el):x;E(F,S,U,null,P,T,B,j,!0)}},X=(f,v,x,P,T,B,j)=>{if(x!==P){if(x!==xs)for(const D in x)!Cn(D)&&!(D in P)&&l(f,D,x[D],null,j,v.children,T,B,Ds);for(const D in P){if(Cn(D))continue;const F=P[D],S=x[D];F!==S&&D!=="value"&&l(f,D,S,F,j,v.children,T,B,Ds)}"value"in P&&l(f,"value",x.value,P.value,j)}},H=(f,v,x,P,T,B,j,D,F)=>{const S=v.el=f?f.el:p(""),U=v.anchor=f?f.anchor:p("");let{patchFlag:J,dynamicChildren:Y,slotScopeIds:as}=v;as&&(D=D?D.concat(as):as),f==null?(t(S,x,P),t(U,x,P),O(v.children||[],x,U,T,B,j,D,F)):J>0&&J&64&&Y&&f.dynamicChildren?($(f.dynamicChildren,Y,x,T,B,j,D),(v.key!=null||T&&v===T.subTree)&&Yi(f,v,!0)):W(f,v,x,U,T,B,j,D,F)},Z=(f,v,x,P,T,B,j,D,F)=>{v.slotScopeIds=D,f==null?v.shapeFlag&512?T.ctx.activate(v,x,P,j,F):Cs(v,x,P,T,B,j,F):Es(f,v,F)},Cs=(f,v,x,P,T,B,j)=>{const D=f.component=_d(f,P,T);if(Ct(f)&&(D.ctx.renderer=K),bd(D),D.asyncDep){if(T&&T.registerDep(D,G),!f.el){const F=D.subTree=Ps(ra);k(null,F,v,x)}}else G(D,f,v,x,T,B,j)},Es=(f,v,x)=>{const P=v.component=f.component;if(Cu(f,v,x))if(P.asyncDep&&!P.asyncResolved){ss(P,v,x);return}else P.next=v,ku(P.update),P.effect.dirty=!0,P.update();else v.el=f.el,P.vnode=v},G=(f,v,x,P,T,B,j)=>{const D=()=>{if(f.isMounted){let{next:U,bu:J,u:Y,parent:as,vnode:es}=f;{const yn=Qi(f);if(yn){U&&(U.el=es.el,ss(f,U,j)),yn.asyncDep.then(()=>{f.isUnmounted||D()});return}}let gs=U,ws;an(f,!1),U?(U.el=es.el,ss(f,U,j)):U=es,J&&Me(J),(ws=U.props&&U.props.onVnodeBeforeUpdate)&&ta(ws,as,U,es),an(f,!0);const Bs=Ve(f),ca=f.subTree;f.subTree=Bs,E(ca,Bs,d(ca.el),L(ca),f,T,B),U.el=Bs.el,gs===null&&Iu(f,Bs.el),Y&&Gs(Y,T),(ws=U.props&&U.props.onVnodeUpdated)&&Gs(()=>ta(ws,as,U,es),T)}else{let U;const{el:J,props:Y}=v,{bm:as,m:es,parent:gs}=f,ws=et(v);if(an(f,!1),as&&Me(as),!ws&&(U=Y&&Y.onVnodeBeforeMount)&&ta(U,gs,v),an(f,!0),J&&vs){const Bs=()=>{f.subTree=Ve(f),vs(J,f.subTree,f,T,null)};ws?v.type.__asyncLoader().then(()=>!f.isUnmounted&&Bs()):Bs()}else{const Bs=f.subTree=Ve(f);E(null,Bs,x,P,f,T,B),v.el=Bs.el}if(es&&Gs(es,T),!ws&&(U=Y&&Y.onVnodeMounted)){const Bs=v;Gs(()=>ta(U,gs,Bs),T)}(v.shapeFlag&256||gs&&et(gs.vnode)&&gs.vnode.shapeFlag&256)&&f.a&&Gs(f.a,T),f.isMounted=!0,v=x=P=null}},F=f.effect=new $l(D,la,()=>ke(S),f.scope),S=f.update=()=>{F.dirty&&F.run()};S.id=f.uid,an(f,!0),S()},ss=(f,v,x)=>{v.component=f;const P=f.vnode.props;f.vnode=v,f.next=null,ad(f,v.props,P,x),ed(f,v.children,x),un(),Fo(f),dn()},W=(f,v,x,P,T,B,j,D,F=!1)=>{const S=f&&f.children,U=f?f.shapeFlag:0,J=v.children,{patchFlag:Y,shapeFlag:as}=v;if(Y>0){if(Y&128){ya(S,J,x,P,T,B,j,D,F);return}else if(Y&256){Os(S,J,x,P,T,B,j,D,F);return}}as&8?(U&16&&Ds(S,T,B),J!==S&&m(x,J)):U&16?as&16?ya(S,J,x,P,T,B,j,D,F):Ds(S,T,B,!0):(U&8&&m(x,""),as&16&&O(J,x,P,T,B,j,D,F))},Os=(f,v,x,P,T,B,j,D,F)=>{f=f||An,v=v||An;const S=f.length,U=v.length,J=Math.min(S,U);let Y;for(Y=0;Y<J;Y++){const as=v[Y]=F?qa(v[Y]):ua(v[Y]);E(f[Y],as,x,null,T,B,j,D,F)}S>U?Ds(f,T,B,!0,!1,J):O(v,x,P,T,B,j,D,F,J)},ya=(f,v,x,P,T,B,j,D,F)=>{let S=0;const U=v.length;let J=f.length-1,Y=U-1;for(;S<=J&&S<=Y;){const as=f[S],es=v[S]=F?qa(v[S]):ua(v[S]);if(ln(as,es))E(as,es,x,null,T,B,j,D,F);else break;S++}for(;S<=J&&S<=Y;){const as=f[J],es=v[Y]=F?qa(v[Y]):ua(v[Y]);if(ln(as,es))E(as,es,x,null,T,B,j,D,F);else break;J--,Y--}if(S>J){if(S<=Y){const as=Y+1,es=as<U?v[as].el:P;for(;S<=Y;)E(null,v[S]=F?qa(v[S]):ua(v[S]),x,es,T,B,j,D,F),S++}}else if(S>Y)for(;S<=J;)Vs(f[S],T,B,!0),S++;else{const as=S,es=S,gs=new Map;for(S=es;S<=Y;S++){const Qs=v[S]=F?qa(v[S]):ua(v[S]);Qs.key!=null&&gs.set(Qs.key,S)}let ws,Bs=0;const ca=Y-es+1;let yn=!1,Lo=0;const Yn=new Array(ca);for(S=0;S<ca;S++)Yn[S]=0;for(S=as;S<=J;S++){const Qs=f[S];if(Bs>=ca){Vs(Qs,T,B,!0);continue}let _a;if(Qs.key!=null)_a=gs.get(Qs.key);else for(ws=es;ws<=Y;ws++)if(Yn[ws-es]===0&&ln(Qs,v[ws])){_a=ws;break}_a===void 0?Vs(Qs,T,B,!0):(Yn[_a-es]=S+1,_a>=Lo?Lo=_a:yn=!0,E(Qs,v[_a],x,null,T,B,j,D,F),Bs++)}const To=yn?cd(Yn):An;for(ws=To.length-1,S=ca-1;S>=0;S--){const Qs=es+S,_a=v[Qs],Po=Qs+1<U?v[Qs+1].el:P;Yn[S]===0?E(null,_a,x,Po,T,B,j,D,F):yn&&(ws<0||S!==To[ws]?aa(_a,x,Po,2):ws--)}}},aa=(f,v,x,P,T=null)=>{const{el:B,type:j,transition:D,children:F,shapeFlag:S}=f;if(S&6){aa(f.component.subTree,v,x,P);return}if(S&128){f.suspense.move(v,x,P);return}if(S&64){j.move(f,v,x,K);return}if(j===Zs){t(B,v,x);for(let J=0;J<F.length;J++)aa(F[J],v,x,P);t(f.anchor,v,x);return}if(j===pt){_(f,v,x);return}if(P!==2&&S&1&&D)if(P===0)D.beforeEnter(B),t(B,v,x),Gs(()=>D.enter(B),T);else{const{leave:J,delayLeave:Y,afterLeave:as}=D,es=()=>t(B,v,x),gs=()=>{J(B,()=>{es(),as&&as()})};Y?Y(B,es,gs):gs()}else t(B,v,x)},Vs=(f,v,x,P=!1,T=!1)=>{const{type:B,props:j,ref:D,children:F,dynamicChildren:S,shapeFlag:U,patchFlag:J,dirs:Y}=f;if(D!=null&&re(D,null,x,f,!0),U&256){v.ctx.deactivate(f);return}const as=U&1&&Y,es=!et(f);let gs;if(es&&(gs=j&&j.onVnodeBeforeUnmount)&&ta(gs,v,f),U&6)ka(f.component,x,P);else{if(U&128){f.suspense.unmount(x,P);return}as&&ba(f,null,v,"beforeUnmount"),U&64?f.type.remove(f,v,x,T,K,P):S&&(B!==Zs||J>0&&J&64)?Ds(S,v,x,!1,!0):(B===Zs&&J&384||!T&&U&16)&&Ds(F,v,x),P&&Ys(f)}(es&&(gs=j&&j.onVnodeUnmounted)||as)&&Gs(()=>{gs&&ta(gs,v,f),as&&ba(f,null,v,"unmounted")},x)},Ys=f=>{const{type:v,el:x,anchor:P,transition:T}=f;if(v===Zs){Ia(x,P);return}if(v===pt){I(f);return}const B=()=>{e(x),T&&!T.persisted&&T.afterLeave&&T.afterLeave()};if(f.shapeFlag&1&&T&&!T.persisted){const{leave:j,delayLeave:D}=T,F=()=>j(x,B);D?D(f.el,B,F):F()}else B()},Ia=(f,v)=>{let x;for(;f!==v;)x=h(f),e(f),f=x;e(v)},ka=(f,v,x)=>{const{bum:P,scope:T,update:B,subTree:j,um:D}=f;P&&Me(P),T.stop(),B&&(B.active=!1,Vs(j,f,v,x)),D&&Gs(D,v),Gs(()=>{f.isUnmounted=!0},v),v&&v.pendingBranch&&!v.isUnmounted&&f.asyncDep&&!f.asyncResolved&&f.suspenseId===v.pendingId&&(v.deps--,v.deps===0&&v.resolve())},Ds=(f,v,x,P=!1,T=!1,B=0)=>{for(let j=B;j<f.length;j++)Vs(f[j],v,x,P,T)},L=f=>f.shapeFlag&6?L(f.component.subTree):f.shapeFlag&128?f.suspense.next():h(f.anchor||f.el);let q=!1;const N=(f,v,x)=>{f==null?v._vnode&&Vs(v._vnode,null,null,!0):E(v._vnode||null,f,v,null,null,null,x),q||(q=!0,Fo(),oe(),q=!1),v._vnode=f},K={p:E,um:Vs,m:aa,r:Ys,mt:Cs,mc:O,pc:W,pbc:$,n:L,o:s};let ps,vs;return a&&([ps,vs]=a(K)),{render:N,hydrate:ps,createApp:Zu(N,ps)}}function $e({type:s,props:a},n){return n==="svg"&&s==="foreignObject"||n==="mathml"&&s==="annotation-xml"&&a&&a.encoding&&a.encoding.includes("html")?void 0:n}function an({effect:s,update:a},n){s.allowRecurse=a.allowRecurse=n}function Xi(s,a){return(!s||s&&!s.pendingBranch)&&a&&!a.persisted}function Yi(s,a,n=!1){const t=s.children,e=a.children;if(ns(t)&&ns(e))for(let l=0;l<t.length;l++){const o=t[l];let p=e[l];p.shapeFlag&1&&!p.dynamicChildren&&((p.patchFlag<=0||p.patchFlag===32)&&(p=e[l]=qa(e[l]),p.el=o.el),n||Yi(o,p)),p.type===Rn&&(p.el=o.el)}}function cd(s){const a=s.slice(),n=[0];let t,e,l,o,p;const c=s.length;for(t=0;t<c;t++){const r=s[t];if(r!==0){if(e=n[n.length-1],s[e]<r){a[t]=e,n.push(t);continue}for(l=0,o=n.length-1;l<o;)p=l+o>>1,s[n[p]]<r?l=p+1:o=p;r<s[n[l]]&&(l>0&&(a[t]=n[l-1]),n[l]=t)}}for(l=n.length,o=n[l-1];l-- >0;)n[l]=o,o=a[o];return n}function Qi(s){const a=s.subTree.component;if(a)return a.asyncDep&&!a.asyncResolved?a:Qi(a)}const md=s=>s.__isTeleport,Zs=Symbol.for("v-fgt"),Rn=Symbol.for("v-txt"),ra=Symbol.for("v-cmt"),pt=Symbol.for("v-stc"),it=[];let da=null;function ud(s=!1){it.push(da=s?null:[])}function dd(){it.pop(),da=it[it.length-1]||null}let vt=1;function Qo(s){vt+=s}function Ji(s){return s.dynamicChildren=vt>0?da||An:null,dd(),vt>0&&da&&da.push(s),s}function w3(s,a,n,t,e,l){return Ji(sr(s,a,n,t,e,l,!0))}function hd(s,a,n,t,e){return Ji(Ps(s,a,n,t,e,!0))}function fl(s){return s?s.__v_isVNode===!0:!1}function ln(s,a){return s.type===a.type&&s.key===a.key}const Ee="__vInternal",Zi=({key:s})=>s??null,ne=({ref:s,ref_key:a,ref_for:n})=>(typeof s=="number"&&(s=""+s),s!=null?Fs(s)||Hs(s)||ts(s)?{i:oa,r:s,k:a,f:!!n}:s:null);function sr(s,a=null,n=null,t=0,e=null,l=s===Zs?0:1,o=!1,p=!1){const c={__v_isVNode:!0,__v_skip:!0,type:s,props:a,key:a&&Zi(a),ref:a&&ne(a),scopeId:Si,slotScopeIds:null,children:n,component:null,suspense:null,ssContent:null,ssFallback:null,dirs:null,transition:null,el:null,anchor:null,target:null,targetAnchor:null,staticCount:0,shapeFlag:l,patchFlag:t,dynamicProps:e,dynamicChildren:null,appContext:null,ctx:oa};return p?(Zl(c,n),l&128&&s.normalize(c)):n&&(c.shapeFlag|=Fs(n)?8:16),vt>0&&!o&&da&&(c.patchFlag>0||l&6)&&c.patchFlag!==32&&da.push(c),c}const Ps=gd;function gd(s,a=null,n=null,t=0,e=null,l=!1){if((!s||s===Lu)&&(s=ra),fl(s)){const p=Ya(s,a,!0);return n&&Zl(p,n),vt>0&&!l&&da&&(p.shapeFlag&6?da[da.indexOf(s)]=p:da.push(p)),p.patchFlag|=-2,p}if(Cd(s)&&(s=s.__vccOpts),a){a=fd(a);let{class:p,style:c}=a;p&&!Fs(p)&&(a.class=Fl(p)),Is(c)&&(bi(c)&&!ns(c)&&(c=Rs({},c)),a.style=zl(c))}const o=Fs(s)?1:Pu(s)?128:md(s)?64:Is(s)?4:ts(s)?2:0;return sr(s,a,n,t,e,o,l,!0)}function fd(s){return s?bi(s)||Ee in s?Rs({},s):s:null}function Ya(s,a,n=!1){const{props:t,ref:e,patchFlag:l,children:o}=s,p=a?vd(t||{},a):t;return{__v_isVNode:!0,__v_skip:!0,type:s.type,props:p,key:p&&Zi(p),ref:a&&a.ref?n&&e?ns(e)?e.concat(ne(a)):[e,ne(a)]:ne(a):e,scopeId:s.scopeId,slotScopeIds:s.slotScopeIds,children:o,target:s.target,targetAnchor:s.targetAnchor,staticCount:s.staticCount,shapeFlag:s.shapeFlag,patchFlag:a&&s.type!==Zs?l===-1?16:l|16:l,dynamicProps:s.dynamicProps,dynamicChildren:s.dynamicChildren,appContext:s.appContext,dirs:s.dirs,transition:s.transition,component:s.component,suspense:s.suspense,ssContent:s.ssContent&&Ya(s.ssContent),ssFallback:s.ssFallback&&Ya(s.ssFallback),el:s.el,anchor:s.anchor,ctx:s.ctx,ce:s.ce}}function ar(s=" ",a=0){return Ps(Rn,null,s,a)}function x3(s,a){const n=Ps(pt,null,s);return n.staticCount=a,n}function A3(s="",a=!1){return a?(ud(),hd(ra,null,s)):Ps(ra,null,s)}function ua(s){return s==null||typeof s=="boolean"?Ps(ra):ns(s)?Ps(Zs,null,s.slice()):typeof s=="object"?qa(s):Ps(Rn,null,String(s))}function qa(s){return s.el===null&&s.patchFlag!==-1||s.memo?s:Ya(s)}function Zl(s,a){let n=0;const{shapeFlag:t}=s;if(a==null)a=null;else if(ns(a))n=16;else if(typeof a=="object")if(t&65){const e=a.default;e&&(e._c&&(e._d=!1),Zl(s,e()),e._c&&(e._d=!0));return}else{n=32;const e=a._;!e&&!(Ee in a)?a._ctx=oa:e===3&&oa&&(oa.slots._===1?a._=1:(a._=2,s.patchFlag|=1024))}else ts(a)?(a={default:a,_ctx:oa},n=32):(a=String(a),t&64?(n=16,a=[ar(a)]):n=8);s.children=a,s.shapeFlag|=n}function vd(...s){const a={};for(let n=0;n<s.length;n++){const t=s[n];for(const e in t)if(e==="class")a.class!==t.class&&(a.class=Fl([a.class,t.class]));else if(e==="style")a.style=zl([a.style,t.style]);else if(wt(e)){const l=a[e],o=t[e];o&&l!==o&&!(ns(l)&&l.includes(o))&&(a[e]=l?[].concat(l,o):o)}else e!==""&&(a[e]=t[e])}return a}function ta(s,a,n,t=null){pa(s,a,7,[n,t])}const yd=ji();let kd=0;function _d(s,a,n){const t=s.type,e=(a?a.appContext:s.appContext)||yd,l={uid:kd++,vnode:s,type:t,parent:a,appContext:e,root:null,next:null,subTree:null,effect:null,update:null,scope:new Hm(!0),render:null,proxy:null,exposed:null,exposeProxy:null,withProxy:null,provides:a?a.provides:Object.create(e.provides),accessCache:null,renderCache:[],components:null,directives:null,propsOptions:Ui(t,e),emitsOptions:Pi(t,e),emit:null,emitted:null,propsDefaults:xs,inheritAttrs:t.inheritAttrs,ctx:xs,data:xs,props:xs,attrs:xs,slots:xs,refs:xs,setupState:xs,setupContext:null,attrsProxy:null,slotsProxy:null,suspense:n,suspenseId:n?n.pendingId:0,asyncDep:null,asyncResolved:!1,isMounted:!1,isUnmounted:!1,isDeactivated:!1,bc:null,c:null,bm:null,m:null,bu:null,u:null,um:null,bum:null,da:null,a:null,rtg:null,rtc:null,ec:null,sp:null};return l.ctx={_:l},l.root=a?a.root:l,l.emit=Eu.bind(null,l),s.ce&&s.ce(l),l}let zs=null;const Un=()=>zs||oa;let ce,vl;{const s=oi(),a=(n,t)=>{let e;return(e=s[n])||(e=s[n]=[]),e.push(t),l=>{e.length>1?e.forEach(o=>o(l)):e[0](l)}};ce=a("__VUE_INSTANCE_SETTERS__",n=>zs=n),vl=a("__VUE_SSR_SETTERS__",n=>Lt=n)}const It=s=>{const a=zs;return ce(s),s.scope.on(),()=>{s.scope.off(),ce(a)}},Jo=()=>{zs&&zs.scope.off(),ce(null)};function nr(s){return s.vnode.shapeFlag&4}let Lt=!1;function bd(s,a=!1){a&&vl(a);const{props:n,children:t}=s.vnode,e=nr(s);sd(s,n,e,a),td(s,t);const l=e?Ed(s,a):void 0;return a&&vl(!1),l}function Ed(s,a){const n=s.type;s.accessCache=Object.create(null),s.proxy=Ei(new Proxy(s.ctx,Gu));const{setup:t}=n;if(t){const e=s.setupContext=t.length>1?xd(s):null,l=It(s);un();const o=Ka(t,s,0,[s.props,e]);if(dn(),l(),li(o)){if(o.then(Jo,Jo),a)return o.then(p=>{Zo(s,p,a)}).catch(p=>{At(p,s,0)});s.asyncDep=o}else Zo(s,o,a)}else tr(s,a)}function Zo(s,a,n){ts(a)?s.type.__ssrInlineRender?s.ssrRender=a:s.render=a:Is(a)&&(s.setupState=Ai(a)),tr(s,n)}let sp;function tr(s,a,n){const t=s.type;if(!s.render){if(!a&&sp&&!t.render){const e=t.template||Ql(s).template;if(e){const{isCustomElement:l,compilerOptions:o}=s.appContext.config,{delimiters:p,compilerOptions:c}=t,r=Rs(Rs({isCustomElement:l,delimiters:p},o),c);t.render=sp(e,r)}}s.render=t.render||la}{const e=It(s);un();try{Wu(s)}finally{dn(),e()}}}function wd(s){return s.attrsProxy||(s.attrsProxy=new Proxy(s.attrs,{get(a,n){return Xs(s,"get","$attrs"),a[n]}}))}function xd(s){const a=n=>{s.exposed=n||{}};return{get attrs(){return wd(s)},slots:s.slots,emit:s.emit,expose:a}}function so(s){if(s.exposed)return s.exposeProxy||(s.exposeProxy=new Proxy(Ai(Ei(s.exposed)),{get(a,n){if(n in a)return a[n];if(n in lt)return lt[n](s)},has(a,n){return n in a||n in lt}}))}function Ad(s,a=!0){return ts(s)?s.displayName||s.name:s.name||a&&s.__name}function Cd(s){return ts(s)&&"__vccOpts"in s}const b=(s,a)=>cu(s,a,Lt);function i(s,a,n){const t=arguments.length;return t===2?Is(a)&&!ns(a)?fl(a)?Ps(s,null,[a]):Ps(s,a):Ps(s,null,a):(t>3?n=Array.prototype.slice.call(arguments,2):t===3&&fl(n)&&(n=[n]),Ps(s,a,n))}const Id="3.4.18";/**
* @vue/runtime-dom v3.4.18
* (c) 2018-present Yuxi (Evan) You and Vue contributors
* @license MIT
**/const Ld="http://www.w3.org/2000/svg",Td="http://www.w3.org/1998/Math/MathML",Ua=typeof document<"u"?document:null,ap=Ua&&Ua.createElement("template"),Pd={insert:(s,a,n)=>{a.insertBefore(s,n||null)},remove:s=>{const a=s.parentNode;a&&a.removeChild(s)},createElement:(s,a,n,t)=>{const e=a==="svg"?Ua.createElementNS(Ld,s):a==="mathml"?Ua.createElementNS(Td,s):Ua.createElement(s,n?{is:n}:void 0);return s==="select"&&t&&t.multiple!=null&&e.setAttribute("multiple",t.multiple),e},createText:s=>Ua.createTextNode(s),createComment:s=>Ua.createComment(s),setText:(s,a)=>{s.nodeValue=a},setElementText:(s,a)=>{s.textContent=a},parentNode:s=>s.parentNode,nextSibling:s=>s.nextSibling,querySelector:s=>Ua.querySelector(s),setScopeId(s,a){s.setAttribute(a,"")},insertStaticContent(s,a,n,t,e,l){const o=n?n.previousSibling:a.lastChild;if(e&&(e===l||e.nextSibling))for(;a.insertBefore(e.cloneNode(!0),n),!(e===l||!(e=e.nextSibling)););else{ap.innerHTML=t==="svg"?`<svg>${s}</svg>`:t==="mathml"?`<math>${s}</math>`:s;const p=ap.content;if(t==="svg"||t==="mathml"){const c=p.firstChild;for(;c.firstChild;)p.appendChild(c.firstChild);p.removeChild(c)}a.insertBefore(p,n)}return[o?o.nextSibling:a.firstChild,n?n.previousSibling:a.lastChild]}},za="transition",Qn="animation",Mn=Symbol("_vtc"),Qa=(s,{slots:a})=>i(Mu,lr(s),a);Qa.displayName="Transition";const er={name:String,type:String,css:{type:Boolean,default:!0},duration:[String,Number,Object],enterFromClass:String,enterActiveClass:String,enterToClass:String,appearFromClass:String,appearActiveClass:String,appearToClass:String,leaveFromClass:String,leaveActiveClass:String,leaveToClass:String},Sd=Qa.props=Rs({},Bi,er),nn=(s,a=[])=>{ns(s)?s.forEach(n=>n(...a)):s&&s(...a)},np=s=>s?ns(s)?s.some(a=>a.length>1):s.length>1:!1;function lr(s){const a={};for(const H in s)H in er||(a[H]=s[H]);if(s.css===!1)return a;const{name:n="v",type:t,duration:e,enterFromClass:l=`${n}-enter-from`,enterActiveClass:o=`${n}-enter-active`,enterToClass:p=`${n}-enter-to`,appearFromClass:c=l,appearActiveClass:r=o,appearToClass:m=p,leaveFromClass:d=`${n}-leave-from`,leaveActiveClass:h=`${n}-leave-active`,leaveToClass:g=`${n}-leave-to`}=s,y=Od(e),E=y&&y[0],w=y&&y[1],{onBeforeEnter:k,onEnter:C,onEnterCancelled:_,onLeave:I,onLeaveCancelled:M,onBeforeAppear:A=k,onAppear:R=C,onAppearCancelled:O=_}=a,V=(H,Z,Cs)=>{Ha(H,Z?m:p),Ha(H,Z?r:o),Cs&&Cs()},$=(H,Z)=>{H._isLeaving=!1,Ha(H,d),Ha(H,g),Ha(H,h),Z&&Z()},X=H=>(Z,Cs)=>{const Es=H?R:C,G=()=>V(Z,H,Cs);nn(Es,[Z,G]),tp(()=>{Ha(Z,H?c:l),Ta(Z,H?m:p),np(Es)||ep(Z,t,E,G)})};return Rs(a,{onBeforeEnter(H){nn(k,[H]),Ta(H,l),Ta(H,o)},onBeforeAppear(H){nn(A,[H]),Ta(H,c),Ta(H,r)},onEnter:X(!1),onAppear:X(!0),onLeave(H,Z){H._isLeaving=!0;const Cs=()=>$(H,Z);Ta(H,d),pr(),Ta(H,h),tp(()=>{H._isLeaving&&(Ha(H,d),Ta(H,g),np(I)||ep(H,t,w,Cs))}),nn(I,[H,Cs])},onEnterCancelled(H){V(H,!1),nn(_,[H])},onAppearCancelled(H){V(H,!0),nn(O,[H])},onLeaveCancelled(H){$(H),nn(M,[H])}})}function Od(s){if(s==null)return null;if(Is(s))return[He(s.enter),He(s.leave)];{const a=He(s);return[a,a]}}function He(s){return Rm(s)}function Ta(s,a){a.split(/\s+/).forEach(n=>n&&s.classList.add(n)),(s[Mn]||(s[Mn]=new Set)).add(a)}function Ha(s,a){a.split(/\s+/).forEach(t=>t&&s.classList.remove(t));const n=s[Mn];n&&(n.delete(a),n.size||(s[Mn]=void 0))}function tp(s){requestAnimationFrame(()=>{requestAnimationFrame(s)})}let Dd=0;function ep(s,a,n,t){const e=s._endId=++Dd,l=()=>{e===s._endId&&t()};if(n)return setTimeout(l,n);const{type:o,timeout:p,propCount:c}=or(s,a);if(!o)return t();const r=o+"end";let m=0;const d=()=>{s.removeEventListener(r,h),l()},h=g=>{g.target===s&&++m>=c&&d()};setTimeout(()=>{m<c&&d()},p+1),s.addEventListener(r,h)}function or(s,a){const n=window.getComputedStyle(s),t=y=>(n[y]||"").split(", "),e=t(`${za}Delay`),l=t(`${za}Duration`),o=lp(e,l),p=t(`${Qn}Delay`),c=t(`${Qn}Duration`),r=lp(p,c);let m=null,d=0,h=0;a===za?o>0&&(m=za,d=o,h=l.length):a===Qn?r>0&&(m=Qn,d=r,h=c.length):(d=Math.max(o,r),m=d>0?o>r?za:Qn:null,h=m?m===za?l.length:c.length:0);const g=m===za&&/\b(transform|all)(,|$)/.test(t(`${za}Property`).toString());return{type:m,timeout:d,propCount:h,hasTransform:g}}function lp(s,a){for(;s.length<a.length;)s=s.concat(s);return Math.max(...a.map((n,t)=>op(n)+op(s[t])))}function op(s){return s==="auto"?0:Number(s.slice(0,-1).replace(",","."))*1e3}function pr(){return document.body.offsetHeight}function Rd(s,a,n){const t=s[Mn];t&&(a=(a?[a,...t]:[...t]).join(" ")),a==null?s.removeAttribute("class"):n?s.setAttribute("class",a):s.className=a}const pp=Symbol("_vod"),Md=Symbol(""),Vd=/(^|;)\s*display\s*:/;function Bd(s,a,n){const t=s.style,e=Fs(n),l=t.display;let o=!1;if(n&&!e){if(a&&!Fs(a))for(const p in a)n[p]==null&&yl(t,p,"");for(const p in n)p==="display"&&(o=!0),yl(t,p,n[p])}else if(e){if(a!==n){const p=t[Md];p&&(n+=";"+p),t.cssText=n,o=Vd.test(n)}}else a&&s.removeAttribute("style");pp in s&&(s[pp]=o?t.display:"",t.display=l)}const ip=/\s*!important$/;function yl(s,a,n){if(ns(n))n.forEach(t=>yl(s,a,t));else if(n==null&&(n=""),a.startsWith("--"))s.setProperty(a,n);else{const t=zd(s,a);ip.test(n)?s.setProperty(Hn(t),n.replace(ip,""),"important"):s[t]=n}}const rp=["Webkit","Moz","ms"],Ne={};function zd(s,a){const n=Ne[a];if(n)return n;let t=Ks(a);if(t!=="filter"&&t in s)return Ne[a]=t;t=Nn(t);for(let e=0;e<rp.length;e++){const l=rp[e]+t;if(l in s)return Ne[a]=l}return a}const cp="http://www.w3.org/1999/xlink";function Fd(s,a,n,t,e){if(t&&a.startsWith("xlink:"))n==null?s.removeAttributeNS(cp,a.slice(6,a.length)):s.setAttributeNS(cp,a,n);else{const l=$m(a);n==null||l&&!pi(n)?s.removeAttribute(a):s.setAttribute(a,l?"":n)}}function $d(s,a,n,t,e,l,o){if(a==="innerHTML"||a==="textContent"){t&&o(t,e,l),s[a]=n??"";return}const p=s.tagName;if(a==="value"&&p!=="PROGRESS"&&!p.includes("-")){s._value=n;const r=p==="OPTION"?s.getAttribute("value"):s.value,m=n??"";r!==m&&(s.value=m),n==null&&s.removeAttribute(a);return}let c=!1;if(n===""||n==null){const r=typeof s[a];r==="boolean"?n=pi(n):n==null&&r==="string"?(n="",c=!0):r==="number"&&(n=0,c=!0)}try{s[a]=n}catch{}c&&s.removeAttribute(a)}function Hd(s,a,n,t){s.addEventListener(a,n,t)}function Nd(s,a,n,t){s.removeEventListener(a,n,t)}const mp=Symbol("_vei");function jd(s,a,n,t,e=null){const l=s[mp]||(s[mp]={}),o=l[a];if(t&&o)o.value=t;else{const[p,c]=qd(a);if(t){const r=l[a]=Wd(t,e);Hd(s,p,r,c)}else o&&(Nd(s,p,o,c),l[a]=void 0)}}const up=/(?:Once|Passive|Capture)$/;function qd(s){let a;if(up.test(s)){a={};let t;for(;t=s.match(up);)s=s.slice(0,s.length-t[0].length),a[t[0].toLowerCase()]=!0}return[s[2]===":"?s.slice(3):Hn(s.slice(2)),a]}let je=0;const Ud=Promise.resolve(),Gd=()=>je||(Ud.then(()=>je=0),je=Date.now());function Wd(s,a){const n=t=>{if(!t._vts)t._vts=Date.now();else if(t._vts<=n.attached)return;pa(Kd(t,n.value),a,5,[t])};return n.value=s,n.attached=Gd(),n}function Kd(s,a){if(ns(a)){const n=s.stopImmediatePropagation;return s.stopImmediatePropagation=()=>{n.call(s),s._stopped=!0},a.map(t=>e=>!e._stopped&&t&&t(e))}else return a}const dp=s=>s.charCodeAt(0)===111&&s.charCodeAt(1)===110&&s.charCodeAt(2)>96&&s.charCodeAt(2)<123,Xd=(s,a,n,t,e,l,o,p,c)=>{const r=e==="svg";a==="class"?Rd(s,t,r):a==="style"?Bd(s,n,t):wt(a)?Ml(a)||jd(s,a,n,t,o):(a[0]==="."?(a=a.slice(1),!0):a[0]==="^"?(a=a.slice(1),!1):Yd(s,a,t,r))?$d(s,a,t,l,o,p,c):(a==="true-value"?s._trueValue=t:a==="false-value"&&(s._falseValue=t),Fd(s,a,t,r))};function Yd(s,a,n,t){if(t)return!!(a==="innerHTML"||a==="textContent"||a in s&&dp(a)&&ts(n));if(a==="spellcheck"||a==="draggable"||a==="translate"||a==="form"||a==="list"&&s.tagName==="INPUT"||a==="type"&&s.tagName==="TEXTAREA")return!1;if(a==="width"||a==="height"){const e=s.tagName;if(e==="IMG"||e==="VIDEO"||e==="CANVAS"||e==="SOURCE")return!1}return dp(a)&&Fs(n)?!1:a in s}const ir=new WeakMap,rr=new WeakMap,me=Symbol("_moveCb"),hp=Symbol("_enterCb"),cr={name:"TransitionGroup",props:Rs({},Sd,{tag:String,moveClass:String}),setup(s,{slots:a}){const n=Un(),t=Vi();let e,l;return $i(()=>{if(!e.length)return;const o=s.moveClass||`${s.name||"v"}-move`;if(!nh(e[0].el,n.vnode.el,o))return;e.forEach(Zd),e.forEach(sh);const p=e.filter(ah);pr(),p.forEach(c=>{const r=c.el,m=r.style;Ta(r,o),m.transform=m.webkitTransform=m.transitionDuration="";const d=r[me]=h=>{h&&h.target!==r||(!h||/transform$/.test(h.propertyName))&&(r.removeEventListener("transitionend",d),r[me]=null,Ha(r,o))};r.addEventListener("transitionend",d)})}),()=>{const o=os(s),p=lr(o);let c=o.tag||Zs;e=l,l=a.default?Yl(a.default()):[];for(let r=0;r<l.length;r++){const m=l[r];m.key!=null&&ft(m,gt(m,p,t,n))}if(e)for(let r=0;r<e.length;r++){const m=e[r];ft(m,gt(m,p,t,n)),ir.set(m,m.el.getBoundingClientRect())}return Ps(c,null,l)}}},Qd=s=>delete s.mode;cr.props;const Jd=cr;function Zd(s){const a=s.el;a[me]&&a[me](),a[hp]&&a[hp]()}function sh(s){rr.set(s,s.el.getBoundingClientRect())}function ah(s){const a=ir.get(s),n=rr.get(s),t=a.left-n.left,e=a.top-n.top;if(t||e){const l=s.el.style;return l.transform=l.webkitTransform=`translate(${t}px,${e}px)`,l.transitionDuration="0s",s}}function nh(s,a,n){const t=s.cloneNode(),e=s[Mn];e&&e.forEach(p=>{p.split(/\s+/).forEach(c=>c&&t.classList.remove(c))}),n.split(/\s+/).forEach(p=>p&&t.classList.add(p)),t.style.display="none";const l=a.nodeType===1?a:a.parentNode;l.appendChild(t);const{hasTransform:o}=or(t);return l.removeChild(t),o}const th=Rs({patchProp:Xd},Pd);let qe,gp=!1;function eh(){return qe=gp?qe:id(th),gp=!0,qe}const lh=(...s)=>{const a=eh().createApp(...s),{mount:n}=a;return a.mount=t=>{const e=ph(t);if(e)return n(e,!0,oh(e))},a};function oh(s){if(s instanceof SVGElement)return"svg";if(typeof MathMLElement=="function"&&s instanceof MathMLElement)return"mathml"}function ph(s){return Fs(s)?document.querySelector(s):s}var ih=["link","meta","script","style","noscript","template"],rh=["title","base"],ch=([s,a,n])=>rh.includes(s)?s:ih.includes(s)?s==="meta"&&a.name?`${s}.${a.name}`:s==="template"&&a.id?`${s}.${a.id}`:JSON.stringify([s,Object.entries(a).map(([t,e])=>typeof e=="boolean"?e?[t,""]:null:[t,e]).filter(t=>t!=null).sort(([t],[e])=>t.localeCompare(e)),n]):null,mh=s=>{const a=new Set,n=[];return s.forEach(t=>{const e=ch(t);e&&!a.has(e)&&(a.add(e),n.push(t))}),n},uh=s=>s[0]==="/"?s:`/${s}`,mr=s=>s[s.length-1]==="/"||s.endsWith(".html")?s:`${s}/`,Za=s=>/^(https?:)?\/\//.test(s),dh=/.md((\?|#).*)?$/,Vn=(s,a="/")=>!!(Za(s)||s.startsWith("/")&&!s.startsWith(a)&&!dh.test(s)),ur=s=>/^[a-z][a-z0-9+.-]*:/.test(s),Gn=s=>Object.prototype.toString.call(s)==="[object Object]",hh=s=>{const[a,...n]=s.split(/(\?|#)/);if(!a||a.endsWith("/"))return s;let t=a.replace(/(^|\/)README.md$/i,"$1index.html");return t.endsWith(".md")?t=t.substring(0,t.length-3)+".html":t.endsWith(".html")||(t=t+".html"),t.endsWith("/index.html")&&(t=t.substring(0,t.length-10)),t+n.join("")},ao=s=>s[s.length-1]==="/"?s.slice(0,-1):s,dr=s=>s[0]==="/"?s.slice(1):s,gh=(s,a)=>{const n=Object.keys(s).sort((t,e)=>{const l=e.split("/").length-t.split("/").length;return l!==0?l:e.length-t.length});for(const t of n)if(a.startsWith(t))return t;return"/"},fh=s=>typeof s=="function",Ss=s=>typeof s=="string";const vh="modulepreload",yh=function(s){return"/"+s},fp={},u=function(a,n,t){let e=Promise.resolve();if(n&&n.length>0){const l=document.getElementsByTagName("link");e=Promise.all(n.map(o=>{if(o=yh(o),o in fp)return;fp[o]=!0;const p=o.endsWith(".css"),c=p?'[rel="stylesheet"]':"";if(!!t)for(let d=l.length-1;d>=0;d--){const h=l[d];if(h.href===o&&(!p||h.rel==="stylesheet"))return}else if(document.querySelector(`link[href="${o}"]${c}`))return;const m=document.createElement("link");if(m.rel=p?"stylesheet":vh,p||(m.as="script",m.crossOrigin=""),m.href=o,document.head.appendChild(m),p)return new Promise((d,h)=>{m.addEventListener("load",d),m.addEventListener("error",()=>h(new Error(`Unable to preload CSS for ${o}`)))})}))}return e.then(()=>a()).catch(l=>{const o=new Event("vite:preloadError",{cancelable:!0});if(o.payload=l,window.dispatchEvent(o),!o.defaultPrevented)throw l})},kh=JSON.parse('{"/posts/essay/Anime.html":"/posts/essay/Anime.html","/posts/essay/Anime.md":"/posts/essay/Anime.html","/posts/program-language/Csharp/TwoKingofConversion.html":"/posts/program-language/Csharp/TwoKingofConversion.html","/posts/program-language/Csharp/TwoKingofConversion.md":"/posts/program-language/Csharp/TwoKingofConversion.html"}'),_h=Object.fromEntries([["/",{loader:()=>u(()=>import("./index.html-D96AOurX.js"),__vite__mapDeps([0,1])),meta:{y:"h",t:"Dnull's Blog|Home",i:"home"}}],["/README_.html",{loader:()=>u(()=>import("./README_.html-fFLQw4pI.js"),__vite__mapDeps([2,1])),meta:{y:"h",t:"Dnull's Blog|Home",i:"home"}}],["/intro.html",{loader:()=>u(()=>import("./intro.html-Df58a_Uw.js"),__vite__mapDeps([3,1])),meta:{d:1712936892e3,u:!0,v:"/assets/images/cover3.jpg",e:`
<p>考研人在线猝死</p>
`,r:{minutes:.06,words:17},y:"a",t:"介绍页",i:"circle-info"}}],["/logical-and-proof/predicate.html",{loader:()=>u(()=>import("./predicate.html-29PsPk3U.js"),__vite__mapDeps([4,1])),meta:{y:"a",t:""}}],["/posts/IDL-practice1.html",{loader:()=>u(()=>import("./IDL-practice1.html-DPWaEb6I.js"),__vite__mapDeps([5,1])),meta:{d:16919712e5,l:"2023年8月14日",c:["RPC"],g:["RPC","IDL","thrift"],e:`<p>这一部分记录了关于thrift的一些实践, 主要为使用golang完成官方的tutorial实践</p>
<hr>
<h1>环境</h1>
<ul>
<li>windows 10</li>
<li>golang 1.20.7</li>
<li>thrift 1.18</li>
</ul>
<p>本来是打算用C++来做实验的, 但是在windows平台上使用C++的thrift库有些麻烦, 需要自行编译其依赖库, 并且依赖库的编译又依赖于第三方的C++库, 这些会在后面有机会再尝试, 这里采用开发较为简单的golang来尝试</p>
<h1>thrift简介</h1>
<p>thrift本身是一个用于定义RPC接口IDL框架, 分为两部分:</p>`,r:{minutes:5.3,words:1591},y:"a",t:"thrift实践 - golang实现"}}],["/posts/verilog.html",{loader:()=>u(()=>import("./verilog.html-CoLzE0MA.js"),__vite__mapDeps([6,1])),meta:{d:16937856e5,l:"2023年9月4日",c:["嵌入式"],g:["硬件","嵌入式","verilog"],e:`
<p>在开始基本语法前, 先强调两点关于verilog这种硬件编程语言和C的区别:</p>
<ul>
<li>verilog是硬件实现, 所以具有并发性</li>
<li>verilog带有内建时间模型</li>
</ul>
<h1>模块化</h1>
<p>模块化的重要性不用多说, verilog中的功能是通过模块来分别实现的:</p>
<p>比如接下来我们实现一个简单的与门:</p>
<div class="language-verilog" data-ext="verilog" data-title="verilog"><pre class="language-verilog"><code><span class="token keyword">module</span> <span class="token function">and_gate</span><span class="token punctuation">(</span>
    <span class="token keyword">input</span> a<span class="token punctuation">,</span>
    <span class="token keyword">input</span> b<span class="token punctuation">,</span>
    <span class="token keyword">output</span> y
<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">assign</span> y <span class="token operator">=</span> a <span class="token operator">&amp;</span> b<span class="token punctuation">;</span>

<span class="token keyword">endmodule</span>
</code></pre></div>`,r:{minutes:4.01,words:1203},y:"a",t:"verilog基础"}}],["/layouts/vuepress-plugin-obsidian-main/",{loader:()=>u(()=>import("./index.html-COZjthX4.js"),__vite__mapDeps([7,1])),meta:{d:171310174e4,e:`
<p>实现<code>obsidian</code>语法向<code>vuepress</code>的平滑过渡，灵感来源于[<a href="https://github.com/windily-cloud" target="_blank" rel="noopener noreferrer">windily-cloud</a>/<strong><a href="https://github.com/windily-cloud/vuepress-plugin-obsidian" target="_blank" rel="noopener noreferrer">vuepress-plugin-obsidian</a></strong>](<a href="https://github.com/windily-cloud/vuepress-plugin-obsidian" target="_blank" rel="noopener noreferrer">https://github.com/windily-cloud/vuepress-plugin-obsidian</a>)</p>`,r:{minutes:2.55,words:766},y:"a",t:"vuepress-plugin-obsidian"}}],["/posts/SE/SE-design.html",{loader:()=>u(()=>import("./SE-design.html-Cv5Dwnh9.js"),__vite__mapDeps([8,1])),meta:{d:16958592e5,l:"2023年9月28日",c:["软件工程"],g:["需求","项目管理","软件工程"],e:`<!-- TOC -->
<ul>
<li><a href="#%e8%bd%af%e4%bb%b6%e8%ae%be%e8%ae%a1">软件设计</a>
<ul>
<li><a href="#%e4%bb%80%e4%b9%88%e6%98%af%e8%ae%be%e8%ae%a1">什么是设计?</a></li>
<li><a href="#%e8%ae%be%e8%ae%a1%e7%9a%84%e8%bf%87%e7%a8%8b">设计的过程</a></li>
</ul>
</li>
<li><a href="#%e8%bd%af%e4%bb%b6%e8%ae%be%e8%ae%a1%e5%8e%9f%e5%88%99">软件设计原则</a>
<ul>
<li><a href="#%e6%8a%bd%e8%b1%a1">抽象</a>
<ul>
<li><a href="#parametrization">parametrization</a></li>
<li><a href="#specification%e8%a7%84%e8%8c%83">specification规范</a></li>
<li><a href="#%e5%b0%81%e8%a3%85%e4%b8%8e%e4%bf%a1%e6%81%af%e9%9a%90%e8%97%8f">封装与信息隐藏</a></li>
</ul>
</li>
<li><a href="#%e4%bd%8e%e8%80%a6%e5%90%88%e4%b8%8e%e9%ab%98%e5%86%85%e8%81%9a">低耦合与高内聚</a>
<ul>
<li><a href="#%e8%a7%a3%e8%80%a6%e4%b8%8e%e6%a8%a1%e5%9d%97%e5%8c%96">解耦与模块化</a></li>
<li><a href="#%e6%8e%a5%e5%8f%a3%e4%b8%8e%e5%ae%9e%e7%8e%b0%e5%88%86%e7%a6%bb">接口与实现分离</a></li>
<li><a href="#sufficiency-completeness-primitiveness">sufficiency, completeness, primitiveness</a></li>
<li><a href="#separation-of-concerns">separation of concerns</a></li>
</ul>
</li>
<li><a href="#%e4%b8%83%e6%9d%a1%e8%ae%be%e8%ae%a1%e5%8e%9f%e5%88%99">七条设计原则</a>
<ul>
<li><a href="#%e5%8d%95%e4%b8%80%e8%81%8c%e8%b4%a3%e5%8e%9f%e5%88%99srp">单一职责原则SRP</a></li>
<li><a href="#%e9%87%8c%e6%b0%8f%e6%9b%bf%e6%8d%a2%e5%8e%9f%e5%88%99lsp">里氏替换原则LSP</a></li>
<li><a href="#%e4%be%9d%e8%b5%96%e5%8f%8d%e8%bd%ac%e5%8e%9f%e5%88%99dip">依赖反转原则DIP</a></li>
<li><a href="#%e6%8e%a5%e5%8f%a3%e9%9a%94%e7%a6%bb%e5%8e%9f%e5%88%99isp">接口隔离原则ISP</a></li>
<li><a href="#%e5%90%88%e6%88%90%e8%81%9a%e5%90%88%e5%a4%8d%e7%94%a8%e5%8e%9f%e5%88%99carp">合成/聚合复用原则CARP</a></li>
<li><a href="#%e6%9c%80%e5%b0%91%e7%9f%a5%e8%af%86%e5%8e%9f%e5%88%99lod">最少知识原则LoD</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#%e8%bd%af%e4%bb%b6%e8%ae%be%e8%ae%a1%e7%9a%84%e5%85%b3%e9%94%aeissue">软件设计的关键issue</a>
<ul>
<li><a href="#%e5%b9%b6%e5%8f%91%e9%97%ae%e9%a2%98">并发问题</a></li>
<li><a href="#%e4%ba%8b%e4%bb%b6%e7%9a%84%e6%8e%a7%e5%88%b6%e5%92%8c%e5%a4%84%e7%90%86">事件的控制和处理</a></li>
<li><a href="#data-persistence">data persistence</a></li>
<li><a href="#distribution-of-components">distribution of components</a></li>
<li><a href="#error-and-exception-handling-and-fault">Error and Exception Handling and fault</a></li>
<li><a href="#interaction-and-presentation">Interaction and presentation</a></li>
<li><a href="#security">Security</a></li>
</ul>
</li>
<li><a href="#%e8%bd%af%e4%bb%b6%e7%bb%93%e6%9e%84%e5%92%8c%e6%9e%b6%e6%9e%84">软件结构和架构</a>
<ul>
<li><a href="#viewpoint">viewpoint</a></li>
<li><a href="#%e6%9e%b6%e6%9e%84%e9%a3%8e%e6%a0%bc">架构风格</a></li>
</ul>
</li>
<li><a href="#%e8%ae%be%e8%ae%a1%e6%a8%a1%e5%bc%8f">设计模式</a></li>
<li><a href="#ui%e8%ae%be%e8%ae%a1">UI设计</a>
<ul>
<li><a href="#%e5%9f%ba%e6%9c%ac%e5%8e%9f%e5%88%99">基本原则</a></li>
<li><a href="#%e5%9f%ba%e6%9c%ac%e9%97%ae%e9%a2%98">基本问题</a></li>
<li><a href="#ui%e8%ae%be%e8%ae%a1%e7%b1%bb%e5%9e%8b">UI设计类型</a></li>
<li><a href="#%e6%95%b0%e6%8d%ae%e5%91%88%e7%8e%b0">数据呈现</a></li>
<li><a href="#ui%e8%ae%be%e8%ae%a1%e8%bf%87%e7%a8%8b">UI设计过程</a></li>
<li><a href="#metaphor-and-conceptual-models">metaphor and conceptual models</a></li>
</ul>
</li>
<li><a href="#%e8%bd%af%e4%bb%b6%e8%ae%be%e8%ae%a1%e7%9a%84%e8%b4%a8%e9%87%8f%e5%88%86%e6%9e%90">软件设计的质量分析</a>
<ul>
<li><a href="#%e5%a6%82%e4%bd%95%e5%88%86%e6%9e%90%e8%b4%a8%e9%87%8f">如何分析质量</a></li>
</ul>
</li>
<li><a href="#%e8%bd%af%e4%bb%b6%e8%ae%be%e8%ae%a1%e7%ac%a6%e5%8f%b7">软件设计符号</a>
<ul>
<li><a href="#%e7%bb%93%e6%9e%84%e6%8f%8f%e8%bf%b0">结构描述</a></li>
<li><a href="#%e8%a1%8c%e4%b8%ba%e6%8f%8f%e8%bf%b0">行为描述</a></li>
</ul>
</li>
<li><a href="#%e7%bc%96%e7%a8%8b%e8%8c%83%e5%bc%8f">编程范式</a></li>
</ul>`,r:{minutes:9.35,words:2804},y:"a",t:"软件工程-需求分析"}}],["/posts/SE/SE-note.html",{loader:()=>u(()=>import("./SE-note.html-C_Wg2VXF.js"),__vite__mapDeps([9,1])),meta:{d:16991424e5,l:"2023年11月5日",c:["软件工程"],g:["SE","note"],e:`<!-- TOC -->
<ul>
<li><a href="#%e8%bd%af%e4%bb%b6%e7%9a%84%e5%ae%9a%e4%b9%89">软件的定义</a></li>
<li><a href="#%e8%bd%af%e4%bb%b6%e7%9a%84%e7%89%b9%e7%82%b9">软件的特点</a></li>
<li><a href="#%e8%bd%af%e4%bb%b6%e7%9a%84%e5%88%86%e7%b1%bb">软件的分类</a>
<ul>
<li><a href="#a-namea%e6%8c%89%e7%85%a7%e6%9c%8d%e5%8a%a1%e5%af%b9%e8%b1%a1"></a><a name=""></a>按照服务对象</li>
<li><a href="#a-name-1a%e6%8c%89%e7%85%a7%e5%ae%8c%e6%88%90%e5%8a%9f%e8%83%bd%e7%9a%84%e6%89%80%e5%9c%a8%e5%b1%82%e6%ac%a1"></a><a name="-1"></a>按照完成功能的所在层次</li>
</ul>
</li>
<li><a href="#%e8%bd%af%e4%bb%b6%e5%8d%b1%e6%9c%ba%e7%9a%84%e9%97%ae%e9%a2%98">软件危机的问题</a>
<ul>
<li><a href="#a-name-1a%e4%ba%a7%e7%94%9f%e5%8e%9f%e5%9b%a0"></a><a name="-1"></a>产生原因</li>
</ul>
</li>
<li><a href="#%e8%bd%af%e4%bb%b6%e5%b7%a5%e7%a8%8b">软件工程</a>
<ul>
<li><a href="#a-name-1a%e8%bd%af%e4%bb%b6%e5%b7%a5%e7%a8%8b%e7%9a%84%e5%ae%9a%e4%b9%89"></a><a name="-1"></a>软件工程的定义</li>
<li><a href="#a-name-1a%e8%bd%af%e4%bb%b6%e5%b7%a5%e7%a8%8b%e4%b8%89%e8%a6%81%e7%b4%a0"></a><a name="-1"></a>软件工程三要素</li>
<li><a href="#a-name-1a%e5%ae%9e%e7%8e%b0%e7%9b%ae%e6%a0%87"></a><a name="-1"></a>实现目标
<ul>
<li><a href="#a-name-1a%e7%bb%88%e6%9e%81%e7%9b%ae%e6%a0%87"></a><a name="-1"></a>终极目标</li>
</ul>
</li>
</ul>
</li>
<li><a href="#%e8%bd%af%e4%bb%b6%e5%b7%a5%e7%a8%8b%e7%a0%94%e7%a9%b6%e5%86%85%e5%ae%b9">软件工程研究内容</a>
<ul>
<li><a href="#a-name-1a%e8%bd%af%e4%bb%b6%e5%bc%80%e5%8f%91%e6%8a%80%e6%9c%af"></a><a name="-1"></a>软件开发技术</li>
<li><a href="#a-name-1a%e8%bd%af%e4%bb%b6%e5%b7%a5%e7%a8%8b%e7%ae%a1%e7%90%86"></a><a name="-1"></a>软件工程管理</li>
</ul>
</li>
<li><a href="#%e5%b7%a5%e7%a8%8b%e8%bf%87%e7%a8%8b">工程过程</a>
<ul>
<li><a href="#a-name-1a%e5%b7%a5%e7%a8%8b%e9%a1%b9%e7%9b%ae%e4%b8%89%e4%b8%aa%e5%9f%ba%e6%9c%ac%e7%9b%ae%e6%a0%87"></a><a name="-1"></a>工程项目三个基本目标</li>
<li><a href="#a-namepdcaapdca"></a><a name="PDCA"></a>PDCA</li>
</ul>
</li>
<li><a href="#%e8%bd%af%e4%bb%b6%e5%b7%a5%e7%a8%8b%e8%bf%87%e7%a8%8b">软件工程过程</a></li>
<li><a href="#%e8%bd%af%e4%bb%b6%e7%9a%84%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f">软件的生命周期</a>
<ul>
<li><a href="#a-name-1a%e5%85%ad%e4%b8%aa%e5%9f%ba%e6%9c%ac%e6%ad%a5%e9%aa%a4"></a><a name="-1"></a>六个基本步骤
<ul>
<li><a href="#a-name-1a%e5%88%b6%e8%ae%a2%e8%ae%a1%e5%88%92"></a><a name="-1"></a>制订计划</li>
<li><a href="#a-name-1a%e9%9c%80%e6%b1%82%e5%88%86%e6%9e%90"></a><a name="-1"></a>需求分析</li>
<li><a href="#a-name-1a%e8%bd%af%e4%bb%b6%e8%ae%be%e8%ae%a1"></a><a name="-1"></a>软件设计</li>
<li><a href="#a-name-1a%e7%a8%8b%e5%ba%8f%e7%bc%96%e7%a0%81"></a><a name="-1"></a>程序编码</li>
<li><a href="#a-name-1a%e8%bd%af%e4%bb%b6%e6%b5%8b%e8%af%95"></a><a name="-1"></a>软件测试</li>
<li><a href="#a-name-1a%e8%bf%90%e8%a1%8c%e7%bb%b4%e6%8a%a4"></a><a name="-1"></a>运行维护</li>
</ul>
</li>
</ul>
</li>
<li><a href="#%e8%bd%af%e4%bb%b6%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f%e6%a8%a1%e5%9e%8b">软件生命周期模型</a>
<ul>
<li><a href="#a-name-1a%e8%bd%af%e4%bb%b6%e8%bf%87%e7%a8%8b%e6%a8%a1%e5%9e%8b"></a><a name="-1"></a>软件过程模型</li>
</ul>
</li>
<li><a href="#%e4%bc%a0%e7%bb%9f%e6%a8%a1%e5%9e%8b%e7%a7%8d%e7%b1%bb">传统模型种类</a>
<ul>
<li><a href="#a-name-1a%e6%97%a0%e8%a7%84%e5%88%99%e7%9a%84%e5%b0%8f%e4%bd%9c%e5%9d%8a%e5%bc%8f%e8%bd%af%e4%bb%b6%e5%bc%80%e5%8f%91"></a><a name="-1"></a>无规则的小作坊式软件开发</li>
<li><a href="#a-name-1a%e7%80%91%e5%b8%83%e6%a8%a1%e5%9e%8b"></a><a name="-1"></a>瀑布模型
<ul>
<li><a href="#a-name-1a%e7%80%91%e5%b8%83%e6%a8%a1%e5%9e%8b%e7%9a%84%e7%89%b9%e5%be%81%e7%9a%84%e7%89%b9%e5%be%81"></a><a name="-1"></a>瀑布模型的特征的特征</li>
<li><a href="#a-name-1a%e4%bc%98%e7%82%b9-%e4%bc%98%e7%82%b9"></a><a name="-1"></a>优点 优点</li>
<li><a href="#a-name-1a%e7%bc%ba%e7%82%b9-%e7%bc%ba%e7%82%b9"></a><a name="-1"></a>缺点 缺点</li>
</ul>
</li>
<li><a href="#a-name-1a%e6%bc%94%e5%8c%96%e6%a8%a1%e5%9e%8b"></a><a name="-1"></a>演化模型
<ul>
<li><a href="#a-name-1a%e6%bc%94%e5%8c%96%e6%a8%a1%e5%9e%8b%e7%9a%84%e7%89%b9%e5%be%81"></a><a name="-1"></a>演化模型的特征</li>
<li><a href="#a-name-1a%e4%bc%98%e7%82%b9"></a><a name="-1"></a>优点</li>
<li><a href="#a-name-1a%e7%bc%ba%e7%82%b9"></a><a name="-1"></a>缺点</li>
<li><a href="#a-name-1a%e9%80%82%e7%94%a8%e8%8c%83%e5%9b%b4"></a><a name="-1"></a>适用范围</li>
</ul>
</li>
<li><a href="#a-name-1a%e5%a2%9e%e9%87%8f%e6%a8%a1%e5%9e%8b"></a><a name="-1"></a>增量模型
<ul>
<li><a href="#a-name-1a%e5%a2%9e%e9%87%8f%e6%a8%a1%e5%9e%8b%e7%9a%84%e7%89%b9%e5%be%81"></a><a name="-1"></a>增量模型的特征</li>
<li><a href="#a-name-1a%e4%bc%98%e7%82%b9"></a><a name="-1"></a>优点</li>
<li><a href="#a-name-1a%e7%bc%ba%e7%82%b9"></a><a name="-1"></a>缺点</li>
</ul>
</li>
<li><a href="#a-name-1a%e5%96%b7%e6%b3%89%e6%a8%a1%e5%9e%8b"></a><a name="-1"></a>喷泉模型
<ul>
<li><a href="#a-name-1a%e5%96%b7%e6%b3%89%e6%a8%a1%e5%9e%8b%e7%9a%84%e7%89%b9%e5%be%81"></a><a name="-1"></a>喷泉模型的特征</li>
<li><a href="#a-name-1a%e4%bc%98%e7%82%b9"></a><a name="-1"></a>优点</li>
</ul>
</li>
<li><a href="#a-namevwav%e6%a8%a1%e5%9e%8b%e5%92%8cw%e6%a8%a1%e5%9e%8b"></a><a name="VW"></a>V模型和W模型
<ul>
<li><a href="#a-namevav%e6%a8%a1%e5%9e%8b"></a><a name="V"></a>V模型</li>
<li><a href="#a-namewaw%e6%a8%a1%e5%9e%8b"></a><a name="W"></a>W模型</li>
<li><a href="#a-namevw-1av%e6%a8%a1%e5%9e%8b%e5%92%8cw%e6%a8%a1%e5%9e%8b%e7%9a%84%e7%89%b9%e5%be%81"></a><a name="VW-1"></a>V模型和W模型的特征</li>
</ul>
</li>
<li><a href="#a-name-1a%e8%9e%ba%e6%97%8b%e6%a8%a1%e5%9e%8b"></a><a name="-1"></a>螺旋模型
<ul>
<li><a href="#a-name-1a%e8%9e%ba%e6%97%8b%e6%a8%a1%e5%9e%8b%e7%9a%84%e7%89%b9%e5%be%81"></a><a name="-1"></a>螺旋模型的特征</li>
</ul>
</li>
<li><a href="#a-name-1a%e6%9e%84%e4%bb%b6%e7%bb%84%e8%a3%85%e6%a8%a1%e5%9e%8b"></a><a name="-1"></a>构件组装模型
<ul>
<li><a href="#a-name-1a%e6%9e%84%e4%bb%b6%e7%bb%84%e8%a3%85%e6%a8%a1%e5%9e%8b%e7%9a%84%e7%89%b9%e5%be%81"></a><a name="-1"></a>构件组装模型的特征</li>
<li><a href="#a-name-1a%e4%bc%98%e7%82%b9"></a><a name="-1"></a>优点</li>
<li><a href="#a-name-1a%e7%bc%ba%e7%82%b9"></a><a name="-1"></a>缺点</li>
</ul>
</li>
<li><a href="#a-name-1a%e5%bf%ab%e9%80%9f%e5%ba%94%e7%94%a8%e5%bc%80%e5%8f%91%e6%a8%a1%e5%9e%8b"></a><a name="-1"></a>快速应用开发模型
<ul>
<li><a href="#a-name-1a%e7%89%b9%e7%82%b9"></a><a name="-1"></a>特点</li>
<li><a href="#a-name-1a%e7%bc%ba%e7%82%b9"></a><a name="-1"></a>缺点</li>
</ul>
</li>
<li><a href="#a-name-1a%e5%8e%9f%e5%9e%8b%e6%96%b9%e6%b3%95"></a><a name="-1"></a>原型方法
<ul>
<li><a href="#a-name-1a%e5%8e%9f%e5%9e%8b%e6%96%b9%e6%b3%95%e7%9a%84%e5%ae%9a%e4%b9%89"></a><a name="-1"></a>原型方法的定义
<ul>
<li><a href="#a-name-1a%e5%ae%9a%e4%b9%89"></a><a name="-1"></a>定义</li>
<li><a href="#a-name-1a%e7%a7%8d%e7%b1%bb"></a><a name="-1"></a>种类
<ul>
<li><a href="#%e5%ba%9f%e5%bc%83%e7%ad%96%e7%95%a5">废弃策略</a></li>
<li><a href="#%e8%bf%bd%e5%8a%a0%e7%ad%96%e7%95%a5">追加策略</a></li>
</ul>
</li>
<li><a href="#a-name-1a%e4%bc%98%e7%82%b9"></a><a name="-1"></a>优点</li>
<li><a href="#a-name-1a%e9%80%82%e7%94%a8%e8%8c%83%e5%9b%b4%e5%92%8c%e5%b1%80%e9%99%90%e6%80%a7"></a><a name="-1"></a>适用范围和局限性</li>
<li><a href="#a-nameissueaissue"></a><a name="issue"></a>issue</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#%e6%96%b0%e5%9e%8b%e8%bd%af%e4%bb%b6%e7%94%9f%e5%91%bd%e5%91%a8%e6%9c%9f">新型软件生命周期</a>
<ul>
<li><a href="#a-nameruprationalunifiedprocessaruprational-unified-process"></a><a name="RUPRationalUnifiedProcess"></a>RUPRational Unified Process
<ul>
<li><a href="#a-nameruparup%e7%9a%84%e5%9f%ba%e6%9c%ac%e7%bb%93%e6%9e%84"></a><a name="RUP"></a>RUP的基本结构</li>
<li><a href="#a-name-1a%e7%bb%86%e5%8c%96%e9%98%b6%e6%ae%b5"></a><a name="-1"></a>细化阶段</li>
<li><a href="#a-name-1a%e7%a7%bb%e4%ba%a4%e9%98%b6%e6%ae%b5"></a><a name="-1"></a>移交阶段</li>
<li><a href="#a-name-1a%e5%88%9d%e5%a7%8b%e9%98%b6%e6%ae%b5"></a><a name="-1"></a>初始阶段</li>
<li><a href="#a-name-1a%e6%9e%84%e9%80%a0%e9%98%b6%e6%ae%b5"></a><a name="-1"></a>构造阶段</li>
<li><a href="#a-namerup-1arup%e7%9a%84%e7%89%b9%e7%82%b9"></a><a name="RUP-1"></a>RUP的特点</li>
<li><a href="#a-namerup-1arup%e7%9a%84%e6%a0%b8%e5%bf%83%e6%b4%bb%e5%8a%a8"></a><a name="RUP-1"></a>RUP的核心活动
<ul>
<li><a href="#a-name-1a6%e4%b8%aa%e6%a0%b8%e5%bf%83%e8%bf%87%e7%a8%8b%e5%b7%a5%e4%bd%9c%e6%b5%81"></a><a name="-1"></a>6个核心过程工作流</li>
<li><a href="#a-name-1a3%e4%b8%aa%e6%a0%b8%e5%bf%83%e6%94%af%e6%8c%81%e5%b7%a5%e4%bd%9c%e6%b5%81"></a><a name="-1"></a>3个核心支持工作流</li>
</ul>
</li>
</ul>
</li>
<li><a href="#a-name-1a%e6%95%8f%e6%8d%b7%e5%8f%8a%e6%9e%81%e9%99%90%e7%bc%96%e7%a8%8b"></a><a name="-1"></a>敏捷及极限编程
<ul>
<li><a href="#a-name-1a%e6%95%8f%e6%8d%b7%e6%80%9d%e6%83%b3%e7%9a%84%e6%a0%b8%e5%bf%83%e5%8e%9f%e5%88%99"></a><a name="-1"></a>敏捷思想的核心原则</li>
</ul>
</li>
<li><a href="#a-namexpa%e6%9e%81%e9%99%90%e7%bc%96%e7%a8%8b-xp"></a><a name="XP"></a>极限编程 XP</li>
</ul>
</li>
</ul>`,r:{minutes:30.04,words:9011},y:"a",t:"软工考试笔记"}}],["/posts/SE/SE-req.html",{loader:()=>u(()=>import("./SE-req.html-DgmZKcLc.js"),__vite__mapDeps([10,1])),meta:{d:1695168e6,l:"2023年9月20日",c:["软件工程"],g:["需求","项目管理","软件工程"],e:`<!-- vscode-markdown-toc -->
<ul>
<li>
<ol>
<li><a href="">过程模型</a></li>
</ol>
</li>
<li>
<ol start="2">
<li><a href="#-1">过程活动者</a></li>
</ol>
</li>
<li>
<ol start="3">
<li><a href="#-1">需求源</a></li>
</ol>
<ul>
<li>3.1. <a href="#-1">需求的交流</a></li>
<li>3.2. <a href="#-1">需求的优先级</a></li>
</ul>
</li>
<li>
<ol start="4">
<li><a href="#-1">需求抽取的方式</a></li>
</ol>
</li>
<li>
<ol start="5">
<li><a href="#-1">需求分类</a></li>
</ol>
</li>
<li>
<ol start="6">
<li><a href="#-1">概念建模</a></li>
</ol>
<ul>
<li>6.1. <a href="#uml">如何选择合适的UML?</a></li>
</ul>
</li>
<li>
<ol start="7">
<li><a href="#architecturedesignandrequirementsallocation">Architecture Design and Requirements Allocation</a></li>
</ol>
</li>
<li>
<ol start="8">
<li><a href="#-1">需求协商</a></li>
</ol>
</li>
<li>
<ol start="9">
<li><a href="#-1">形式分析</a></li>
</ol>
</li>
<li>
<ol start="10">
<li><a href="#systemdefinitiondocument">System Definition Document</a></li>
</ol>
</li>
<li>
<ol start="11">
<li><a href="#systemrequirementsspecification">System requirements specification</a></li>
</ol>
</li>
<li>
<ol start="12">
<li><a href="#softwarerequirementsspecification">Software requirements specification</a></li>
</ol>
</li>
<li>
<ol start="13">
<li><a href="#-1">需要执行的步骤</a></li>
</ol>
</li>
<li>
<ol start="14">
<li><a href="#-1">需求过程的迭代性质</a></li>
</ol>
</li>
<li>
<ol start="15">
<li><a href="#-1">需求的可追踪性</a></li>
</ol>
</li>
</ul>`,r:{minutes:5.46,words:1638},y:"a",t:"软件工程-需求分析"}}],["/posts/eng/GrammarClub.html",{loader:()=>u(()=>import("./GrammarClub.html-BslvZ7Gc.js"),__vite__mapDeps([11,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["语言学习"],g:["英语","语法"],e:`<h2>第一章 基本句型和补语</h2>
<p>S：主语
V：动词
O：宾语
C：补语</p>
<p><strong>五种基本句型</strong>：</p>
<ol>
<li>SV</li>
<li>SVO</li>
<li>SVC</li>
<li>SVOO</li>
<li>SVOC</li>
</ol>
<p>补语和宾语的区别在于宾语和主语不一定是同一个事物，而补语和主语是同一个事物，补语是对主语的描述、补充</p>
<p>动词中可以解释为“是”的词没有具体的含义，称之为连结动词，又叫<strong>系动词</strong>，这样的词即使去掉也不影响句子含义（中文上），宾补则是用来形容，或者和宾语是同一个体的补语</p>`,r:{minutes:2.31,words:692},y:"a",t:"《语法俱乐部整理》"}}],["/posts/music/2022-1-8.html",{loader:()=>u(()=>import("./2022-1-8.html-DGDbVBRI.js"),__vite__mapDeps([12,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["乐理"],g:["乐理"],e:`<p>参考教材《音乐理论基础》</p>
<h2>第一章</h2>
<p><strong>乐音体系</strong>：固定音高的一系列音的总和</p>
<p><strong>音列</strong>：乐音体系中的音按照上行或下行排成一列</p>
<p><strong>基本音级</strong>：七个基本音</p>
<p><strong>变化音级</strong>：以七个基本音升降变化得到</p>
<p>中央C对应的分组为<strong>小字一组</strong></p>
<p><strong>题目</strong>：</p>
<p>)</p>
<ol>
<li>振动</li>
<li>音高之间的差距是固定的，构成乐音体系</li>
<li>两种，乐音，噪音，由于声波的规律性而不同</li>
<li>人的听感不同，乐音用得多，噪音用得少，但是用处很多</li>
<li>由不同的正弦波叠加而成</li>
<li>音程固定的一系列音的总和；由乐音体系的音按上行下行排列而成；各个音</li>
<li>七个基本音，CDEFGAB</li>
<li>升降音</li>
<li>之间间隔八个基本音</li>
<li>中央C小字一组</li>
<li>音域是乐器能达到的音的部分，音区是音域的分区</li>
</ol>`,r:{minutes:2.03,words:610},y:"a",t:"乐理再学习（一）"}}],["/posts/music/guitae-1.html",{loader:()=>u(()=>import("./guitae-1.html-CdzfVuhp.js"),__vite__mapDeps([13,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["乐理"],g:["乐理"],e:`<p>电吉他可以说是我最喜欢的乐器之一，但是在不会弹电吉他的情况下，使用纯粹的手动编写模拟的电吉他是相对困难的，本文会记录我使用电吉他音源的过程中一步步的改善</p>
`,r:{minutes:.31,words:94},y:"a",t:"电吉他入门记录（一）"}}],["/posts/essay/2022-1-19.html",{loader:()=>u(()=>import("./2022-1-19.html-CjAxFXfZ.js"),__vite__mapDeps([14,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["随笔"],g:["游戏编程","unity","地图生成"],e:`<p>不同的游戏生成地图的方式有所不同，在此只是记录几种不同的生成地图的方式和思路</p>
<h3>地牢型地图</h3>
<p>参考游戏：</p>
<ul>
<li>死亡细胞</li>
<li>传说法师</li>
<li>元气骑士</li>
</ul>
<p>大部分的roguelike类游戏的关卡设计都是使用这种类型的地图生成方式，通过事先设计好的几类模板地图构成小房间，随机构成各类具有相似结构的房间。这样的探索可以给玩家初次的新鲜感，但是作为roguelike游戏，反复的游玩后，重复的关卡设计很容易使玩家疲倦</p>
<p>关于这种地图的实现思路是：</p>
<ol>
<li>在有限的网格中放置好关键房间</li>
<li>用柏林噪音随机漫步生成联通路线</li>
<li>根据路径的开口方向放置随机的房间</li>
</ol>`,r:{minutes:3.35,words:1004},y:"a",t:"关于游戏地图生成的想法"}}],["/posts/essay/2022-1-8.html",{loader:()=>u(()=>import("./2022-1-8.html-D8hwtis3.js"),__vite__mapDeps([15,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["随笔"],g:["Linux","ubuntu","SCIM","输入法"],e:`<p>今日开始学习《深入理解计算机结构体系》这本书，打算把环境换到Linux下，也算是对这个必备系统的一个熟悉。但是在一段时间的使用后我发现，这个ubuntu系统没有自带的中文输入法，怎么办呢，自己装个呗</p>
<p>但是并不熟悉Linux使用的情况下，我遇到了不少问题，解决后也对以后继续学习Linux系统的使用做下了一定的基础</p>
<hr>
<h2>安装SCIM</h2>
<p>这一步涉及到的指令包括 <code>apt install</code>、<code>sudo</code></p>
<p>以后这些指令当然会常用</p>
<ul>
<li>首先卸载SCIM，保证系统上没有安装SCIM
<code>sudo apt-get remove scim</code></li>
<li>然后安装SCIM
<code>sudo apt-get install scim</code></li>
</ul>`,r:{minutes:2.54,words:761},y:"a",t:"在ubuntu上安装SCIM智能拼音输入法"}}],["/posts/essay/Data-Flow-Conclusion.html",{loader:()=>u(()=>import("./Data-Flow-Conclusion.html-bDhk7PDX.js"),__vite__mapDeps([16,1])),meta:{d:16898976e5,l:"2023年7月21日",c:["随笔","编译原理"],g:["数据流分析","compiler","代码优化"],e:`<p>由于是理解和心得是会随着时间的变化而改变的, 本文只是初学时的想法整理</p>
<h2>About program state</h2>
<p>程序状态包括了运行时栈和堆, 寄存器等储存设备, 所有的数据信息的总和构成了程序某一时刻的状态</p>
<p>每一段的intermediate-code statement都会对程序状态产生影响, 我们可以看作一个将状态输入, 输出为新状态的函数:</p>
<div class="language-Mermaid" data-ext="Mermaid" data-title="Mermaid"><pre class="language-Mermaid"><code>graph LR
A((state 1)) --&gt; B[code]
B --&gt; C((state 2))
</code></pre></div>`,r:{minutes:1.51,words:454},y:"a",t:"对数据流分析的一点理解总结"}}],["/posts/essay/afterReadingCleanCode.html",{loader:()=>u(()=>import("./afterReadingCleanCode.html-I59KurGP.js"),__vite__mapDeps([17,1])),meta:{d:16902432e5,l:"2023年7月25日",c:["随笔","读后感"],g:["编码规范","代码能力"],e:`<p><em>Clean Code</em> called 《代码整洁之道》in Chinese give a lot of guidance on how to write readable code.</p>
<p>在此为此书的阅读做出整理</p>
<hr>
<!-- TOC -->
<ul>
<li><a href="#%e7%ac%ac%e4%b8%80%e9%83%a8%e5%88%86">第一部分</a>
<ul>
<li><a href="#%e6%a0%bc%e5%bc%8fformat%e9%83%a8%e5%88%86">格式(format)部分</a>
<ul>
<li><a href="#vertical-formatting">vertical formatting</a></li>
<li><a href="#horizontal-formatting">horizontal formatting</a></li>
</ul>
</li>
<li><a href="#intermission">intermission</a></li>
</ul>
</li>
<li><a href="#%e7%ac%ac%e4%ba%8c%e9%83%a8%e5%88%86">第二部分</a>
<ul>
<li><a href="#%e5%af%b9%e8%b1%a1%e5%92%8c%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84">对象和数据结构</a>
<ul>
<li><a href="#%e6%95%b0%e6%8d%ae%e7%9a%84%e6%8a%bd%e8%b1%a1">数据的抽象</a></li>
<li><a href="#%e5%8f%8d%e5%af%b9%e7%a7%b0%e6%80%a7">反对称性</a></li>
<li><a href="#%e8%bf%aa%e7%b1%b3%e7%89%b9%e5%8e%9f%e5%88%99">迪米特原则</a></li>
<li><a href="#%e5%af%b9%e8%b1%a1%e5%92%8c%e6%95%b0%e6%8d%ae%e7%bb%93%e6%9e%84-1">对象和数据结构</a></li>
</ul>
</li>
<li><a href="#%e9%94%99%e8%af%af%e5%a4%84%e7%90%86">错误处理</a></li>
<li><a href="#%e8%be%b9%e7%95%8cboundary">边界(boundary)</a></li>
<li><a href="#%e5%8d%95%e5%85%83%e6%b5%8b%e8%af%95">单元测试</a>
<ul>
<li><a href="#ttdtest-driven-development">TTD(Test-Driven Development)</a></li>
<li><a href="#clean-test">clean test</a></li>
</ul>
</li>
<li><a href="#class">Class</a>
<ul>
<li><a href="#small-enough">Small Enough!</a></li>
<li><a href="#organizing-for-change">Organizing for Change</a></li>
</ul>
</li>
<li><a href="#system">System</a>
<ul>
<li><a href="#%e4%be%9d%e8%b5%96%e6%b3%a8%e5%85%a5">依赖注入</a></li>
<li><a href="#ioc">Ioc</a></li>
<li><a href="#aop">AOP</a></li>
<li><a href="#test-drive-the-archithecture">Test drive the Archithecture</a></li>
<li><a href="#%e5%81%9a%e5%87%ba%e6%9b%b4%e5%a5%bd%e7%9a%84%e5%86%b3%e5%ae%9a">做出更好的决定</a></li>
<li><a href="#%e7%90%86%e6%80%a7%e5%af%b9%e5%be%85%e6%a0%87%e5%87%86">理性对待<em>标准</em></a></li>
<li><a href="#%e4%bd%bf%e7%94%a8dsldomain-specific-language">使用DSL(Domain Specific Language)</a></li>
</ul>
</li>
<li><a href="#emergence">Emergence</a>
<ul>
<li><a href="#emergent-design">Emergent Design</a></li>
</ul>
</li>
<li><a href="#concurrency">Concurrency</a>
<ul>
<li><a href="#srp-in-conccurrency">SRP in Conccurrency</a></li>
<li><a href="#%e5%87%8f%e5%b0%91%e5%85%b1%e4%ba%ab%e6%95%b0%e6%8d%ae-%e7%bc%a9%e5%b0%8f%e6%95%b0%e6%8d%aescope">减少共享数据, 缩小数据scope</a></li>
<li><a href="#%e5%b0%bd%e9%87%8f%e7%8b%ac%e7%ab%8b">尽量独立</a></li>
<li><a href="#excution-models">Excution Models</a>
<ul>
<li><a href="#produceer-consumer">Produceer-Consumer</a></li>
<li><a href="#readers-writers">Readers-Writers</a></li>
<li><a href="#dining-philosophers">Dining Philosophers</a></li>
</ul>
</li>
<li><a href="#synchronized-method">Synchronized Method</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#%e7%ac%ac%e4%b8%89%e9%83%a8%e5%88%86">第三部分</a></li>
</ul>`,r:{minutes:15.25,words:4575},y:"a",t:"Clean Code阅读笔记"}}],["/posts/essay/Anime.html",{loader:()=>u(()=>import("./Anime.html-BS2YXQsm.js"),__vite__mapDeps([18,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["随笔"],g:["随笔","感想","动画"],e:`<p>稍微记录点不这么技术性的问题</p>
<p>或者说一个过程吧</p>
<!-- more --->
<p>事情还要从我看完一部16年老番说起——《超自然九人组》<br>
非常直白的名字，故事内容无非和超自然都市灵异传说异常的科学化故事有关，整体叙事非常快且有节奏，角色说话语速快，每一个镜头透露出的信息量都够人回想半天，然后一集结束总能让人后脊发麻</p>
<p>然后果然评价崩了，销售量也不乐观，大概就是速度过快，让人记不住很多情节内容，导致一部分观众认为剧情脱节没逻辑，角色塑造也太粗糙，以至于整部番结束得没有实感之类的，以及作品结束时，整个作品的设定背景才算真的浮出水面，使得观众认为整部作品像个前传，后面应该有更多精彩的冲突和故事</p>`,r:{minutes:6.27,words:1882},y:"a",t:"关于看完一部动画后的想法"}}],["/posts/openGL/2022-9-2.html",{loader:()=>u(()=>import("./2022-9-2.html-B4aUXf5t.js"),__vite__mapDeps([19,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["计算机图形"],g:["计算机图形","渲染"],e:`<h2>环境的配置</h2>
<p>OpenGL是一组通用的图形库标准，具体的软硬件实现方式各有不同，一般由显卡内部的固件自带，在不同系统下调用OpenGL核心的方式不同，所以通过第三方库来实现对OpenGL上下文的创建</p>
<h4>步骤</h4>
<ol>
<li>下载源代码，通过Cmake搭建工程，并编译出lib文件</li>
<li>新建工程，并添加头文件引用、lib库引用、链接器配置</li>
</ol>
<h2>关于头文件glad.h</h2>
<p>OpenGL的驱动版本众多，一般在运行时作为动态库储存在内存中，需要通过函数查询其内存地址，glad文件将这一步骤封装好，使得编写程序时不必为函数指针的维护做考虑</p>`,r:{minutes:1.25,words:376},y:"a",t:"OpenGL学习记录（一）"}}],["/posts/AI/CV/CV_coin.html",{loader:()=>u(()=>import("./CV_coin.html-pbgA6-vN.js"),__vite__mapDeps([20,1])),meta:{d:17114976e5,l:"2024年3月27日",c:["CV"],g:["CV","计算机视觉"],e:`<hr>
<h1>Canny算法</h1>
<p>关于canny算法直接使用了CV库的实现, 不做过多阐述, 主要是对上下门限的调整, 需要调整到一个能够合理去除纹理而保留轮廓的程度.</p>
<h1>Hough变换</h1>
<p>简单谈一下直线的霍夫变换.</p>
<p>对于一条直线:</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>y</mi><mo>=</mo><mi>k</mi><mi>x</mi><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">
y = kx + b
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span></span></p>`,r:{minutes:7.88,words:2365},y:"a",t:"硬币检测实验总结"}}],["/posts/AI/ML/EM.html",{loader:()=>u(()=>import("./EM.html-h2HU4rK4.js"),__vite__mapDeps([21,1])),meta:{d:16790976e5,l:"2023年3月18日",c:["机器学习"],g:["机器学习","EM算法"],e:`<p>当我们使用极大似然估计(MLE)来估计参数时, 我们是已知若干样本, 通过求一个参数使得出现这些样本的概率最大, 来计算参数的</p>
<p>如果在这种问题中, 如果我们将满足两个不同分布的类别混在一起, 此时要做最大似然估计, 并且将两类分开, 该怎么做呢?</p>
<p>此时我们有两类分布的参数<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">\\theta_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>θ</mi><mi>b</mi></msub></mrow><annotation encoding="application/x-tex">\\theta_b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, 还有样本属于<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>类样本的概率<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span>, 我们简单用<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>表示三个参数的集合</p>`,r:{minutes:3.53,words:1058},y:"a",t:"EM算法"}}],["/posts/AI/ML/HMM.html",{loader:()=>u(()=>import("./HMM.html-BY7DZFMH.js"),__vite__mapDeps([22,1])),meta:{d:16790112e5,l:"2023年3月17日",c:["机器学习"],g:["math","HMM"],e:`
<h2>马尔可夫链</h2>
<p>说起隐马尔可夫模型, 首先介绍马尔可夫链</p>
<h3>随机过程</h3>
<p><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>是一个随机变量, 当我们在一个时间轴上不同的时间点上时, 这个随机变量的分布不同, 则我们令这个随时间变化的随机变量为<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">X_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>为时间, 我们称其为一个随机过程</p>`,r:{minutes:4.77,words:1430},y:"a",t:"隐马尔可夫模型"}}],["/posts/AI/ML/SVM.html",{loader:()=>u(()=>import("./SVM.html-DbEDaJ-w.js"),__vite__mapDeps([23,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["机器学习"],g:["machine learning","SVM"],e:`
<p>支持向量机是一个二分类的监督学习算法, 它的目标是找到一个超平面, 使得超平面两侧的点到超平面的距离都尽可能的远, 从而使得超平面两侧的点尽可能的分开</p>
<p>一个超平面我们可以用下式来表示:</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>w</mi><mi>T</mi></msup><mi>x</mi><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">
w^Tx + b = 0
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9747em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span></span></p>`,r:{minutes:1.99,words:596},y:"a",t:"支持向量机"}}],["/posts/AI/ML/decision_tree.html",{loader:()=>u(()=>import("./decision_tree.html-DcAiBRwQ.js"),__vite__mapDeps([24,1])),meta:{d:1677888e6,l:"2023年3月4日",c:["机器学习"],g:["mechine learning","decision tree","algorithm"],e:`
<h2>决策树的基本逻辑</h2>
<p>决策树简单来说就是一棵多叉树, 一个测试数据从根节点开始, 每到达一个节点, 该节点对数据的某一个属性进行检测, 并决定该数据属于某一个子树的类型, 直到一个叶子节点, 可以完全确定该数据的类型</p>
<ul>
<li>对于这个测试数据的属性, 如果是离散的属性, 那么这个决策树就是一个分类树, 解决机器学习中的分类问题</li>
<li>如果是连续的属性, 那么这个决策树就是一个回归树, 解决机器学习中的回归问题</li>
</ul>
<h2>决策树的原理</h2>
<h3>信息增益</h3>
<p>在解释信息增益前, 先了解一下简单的信息熵:</p>`,r:{minutes:10.4,words:3119},y:"a",t:"决策树"}}],["/posts/AI/ML/perceptron.html",{loader:()=>u(()=>import("./perceptron.html-CbVjjqgm.js"),__vite__mapDeps([25,1])),meta:{d:16782336e5,l:"2023年3月8日",c:["机器学习"],g:["machine learning","perceptron"],e:`
<p>感知机部分实在简单得没有什么好说的, 先简单介绍一下其原理和学习策略罢</p>
<h2>感知机结构</h2>
<p>感知机可以视作一个单神经元分类的神经网络, 通过输入一个特征向量, 通过一个神经元计算, 得到一个输出结果, mermaid作图如下:</p>
<div class="language-Mermaid" data-ext="Mermaid" data-title="Mermaid"><pre class="language-Mermaid"><code>flowchart LR
    A((x_1))
    B((x_2))
    C((x_3))
    D((...))
    E((x_n))
    A --&gt; F((w))
    B --&gt; F
    C --&gt; F
    D --&gt; F
    E --&gt; F
    F --&gt; G((1 or 0))
</code></pre></div>`,r:{minutes:1.82,words:547},y:"a",t:"感知机"}}],["/posts/AI/NLP/nplReading.html",{loader:()=>u(()=>import("./nplReading.html-oylSBx9V.js"),__vite__mapDeps([26,1])),meta:{d:17113248e5,l:"2024年3月25日",c:["NLP"],g:["nlp","机器学习","自然语言处理"],e:`<p>这是关于第六章的阅读笔记和思考, 仅供个人的思路整理和记录, 不包含教程作用.</p>
<p>这一部分的标题为Vector Semantics and Embeddings, 初步提出的问题的如何解决词的相似性分布问题. 我们大可按照文章的思路来一步步阐述解决方案的演化.</p>
<h1>6.1 Lexical Semantics</h1>
<p>我们把语言学中词语的含义称为Lexical Semantics</p>
<p>以下是一些关键词的记录:</p>
<ul>
<li>lemma(citation form): 词目, 即词的标准形式, 或者说词的来源</li>
<li>wordforms: 词形, 包括了分词, 复数, 时态等变化</li>
<li>word sense: 词义</li>
<li>polysemous: 一词多义</li>
<li>word sense disambiguation: 词义消歧</li>
<li>synonymy: 同义词</li>
</ul>`,r:{minutes:9.41,words:2823},y:"a",t:"NLP课程阅读笔记"}}],["/posts/CS/CSAPP-notes/Chapter2.html",{loader:()=>u(()=>import("./Chapter2.html-CK4UPi4O.js"),__vite__mapDeps([27,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["CSAPP学习笔记"],g:["二进制","编码","计算机系统"],e:`<p>该文是对阅读过程中，认为有必要记录、思考内容的文字记录，并不是系统性的知识整理或者教程，如果有错误的说法可以留言提出</p>
<h3>16进制和2进制</h3>
<p>4位二进制数可以直接对应一个十六进制数来转换</p>
<p>比如：
<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>11000010</mn><msub><mo stretchy="false">)</mo><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><mi>C</mi><mn>2</mn><msub><mo stretchy="false">)</mo><mn>16</mn></msub></mrow><annotation encoding="application/x-tex">(1100 0010)_2 = (C2)_{16}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">11000010</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">2</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>
分别是1100对应的C和0010对应的2</p>`,r:{minutes:13.57,words:4071},y:"a",t:"信息的表示与处理"}}],["/posts/CS/CSAPP-notes/Chapter3.html",{loader:()=>u(()=>import("./Chapter3.html-C3GdE5Pl.js"),__vite__mapDeps([28,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["CSAPP学习笔记"],g:["二进制","编码","计算机系统","汇编"],e:`<h3>处理器状态</h3>
<ul>
<li>程序计数器</li>
<li>寄存器文件</li>
<li>条件码寄存器</li>
<li>向量寄存器</li>
</ul>
<h3>开始第三章前的一点准备</h3>
<p>由于第三章会涉及到很多汇编语言，所以先预设好c语言的编译指令
<code>gcc -Og -S .\\filename</code>这样的</p>
<p><code>gcc -c .\\filename</code>——编译为目标文件</p>
<p><code>objdump -d -s .\\filename</code>——反汇编目标文件</p>
<h3>一些要点</h3>
<ul>
<li><code>x86-64</code>指令长度从1到15个字节不等</li>
<li>一般情况下，反汇编生成的代码和GCC生成的汇编代码后缀有一个‘q’的差别，一般不影响</li>
</ul>`,r:{minutes:24.07,words:7221},y:"a",t:"机器级程序和汇编"}}],["/posts/CS/CSAPP-notes/Chapter4.html",{loader:()=>u(()=>import("./Chapter4.html-cWe4_Dox.js"),__vite__mapDeps([29,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["CSAPP学习笔记"],g:["cpu原理","计算机系统"],e:`<p>这一章比汇编更底层，关于处理器原理</p>
<h2>Y86-64</h2>
<p>为了简便指令编码，本书提出了一种简化的指令集——Y86</p>
<p>)</p>
<p>寄存器相比X84少了一个，条件码只有三种</p>
<p><strong>我们将寄存器集合称为寄存器文件</strong></p>
<p>本身和X86差别不大，只是有些方面有所简化</p>
<p>Y86指令集：
)
)</p>
<h2>逻辑电路</h2>
<p><strong>HCL</strong>：描述电路的程序语言</p>
<p><strong>逻辑门</strong>：与或非门，与非门，或非门</p>
<p><strong>多路复用器</strong>：通过一个s信号控制两个输入a和b的输出结果</p>`,r:{minutes:13.31,words:3992},y:"a",t:"处理器体系结构"}}],["/posts/CS/CSAPP-notes/Chapter5.html",{loader:()=>u(()=>import("./Chapter5.html-_SL74mtc.js"),__vite__mapDeps([30,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["CSAPP学习笔记"],g:["汇编","计算机系统","优化程序性能","编译器优化"],e:`<p>这一节主要是解释编译优化的相关内容，如何编写代码，可以使编译器产生更加良好的优化，从而加快程序的速度</p>
<h3>编译器的优化</h3>
<p>看看以下两段代码的区别：</p>
<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">void</span> <span class="token function">fun1</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token operator">*</span>xp<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token operator">*</span>yp<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">*</span>xp <span class="token operator">+=</span> <span class="token operator">*</span>yp<span class="token punctuation">;</span>
    <span class="token operator">*</span>xp <span class="token operator">+=</span> <span class="token operator">*</span>yp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">fun2</span><span class="token punctuation">(</span><span class="token keyword">long</span> <span class="token operator">*</span>xp<span class="token punctuation">,</span> <span class="token keyword">long</span> <span class="token operator">*</span>yp<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token operator">*</span>xp <span class="token operator">+=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token operator">*</span>yp<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:8.56,words:2569},y:"a",t:"优化程序性能"}}],["/posts/CS/CSAPP-notes/Chapter6.html",{loader:()=>u(()=>import("./Chapter6.html-BabKCJaX.js"),__vite__mapDeps([31,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["CSAPP学习笔记"],g:["operating-system","计算机系统","链接"],e:`<p>这一节学习链接相关内容</p>
<h3>静态链接</h3>
<p>链接器将编译完成的<strong>可重定位目标文件</strong>，通过<strong>符号解析</strong>将其中的内存地址<strong>重定位</strong>在一起，构成可执行程序</p>
<h3>目标文件</h3>
<ul>
<li>可重定位目标文件</li>
<li>可执行目标文件</li>
<li>共享目标文件</li>
</ul>
<p>目标的的翻译为object，所以目标可以理解为一个对象、主体一样的东西</p>
<p>Linux上使用的目标文件为<strong>ELF</strong>格式，其中包含了一个16字节的文件头、若干section，以及节头部表，其中的section包含以下部分：</p>`,r:{minutes:.85,words:254},y:"a",t:"链接"}}],["/posts/CS/CSAPP-notes/Chapter8.html",{loader:()=>u(()=>import("./Chapter8.html-GE6Y-auw.js"),__vite__mapDeps([32,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["CSAPP学习笔记"],g:["operating-system","计算机系统","异常控制流"],e:`<h2>信号</h2>
<p>该部分暂时只记录信号部分，作为比较重要且难懂的一个内容</p>
<p><strong>反思</strong>：
首先，我们先不用纠结信号的具体实现方式，其表示的含义就是一条小信息，用来告诉进程发生了什么事
进程是系统内核向进程发送的信息，就算是其他进程发出的信号也是经过内核再发出的</p>
<h4>发送信号</h4>
<p>内核可以通过改变进程上下文（context）中的某些信息，来表示信号的发送
发送信号有以下两种原因：</p>
<ul>
<li>内核检测到的系统事件</li>
<li>一个进程调用某些函数，显式地要求内核发送信号</li>
</ul>
<h4>处理信号</h4>`,r:{minutes:.93,words:280},y:"a",t:"异常控制流"}}],["/posts/CS/CSAPP-notes/Practice-1.html",{loader:()=>u(()=>import("./Practice-1.html-kEY-i8C6.js"),__vite__mapDeps([33,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["CSAPP学习笔记"],g:["二进制","编码","计算机系统"],e:`<p>以下所有做的题目都来源于Github项目中的实验题目：
<a href="https://github.com/jlu-xiurui/csapp-labs" target="_blank" rel="noopener noreferrer">https://github.com/jlu-xiurui/csapp-labs</a></p>
<h3>BitXor</h3>
<p>只是自己进行学习的记录，不提供任何保证</p>
<div class="language-c" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token comment">/* bitXor - x^y using only ~ and &amp; 
*   Example: bitXor(4, 5) = 1
*   Legal ops: ~ &amp;
*   Max ops: 14
*   Rating: 1
*/</span>
<span class="token keyword">int</span> <span class="token function">bitXor</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span><span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token operator">~</span>a<span class="token operator">&amp;</span><span class="token operator">~</span>b<span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span><span class="token operator">~</span><span class="token punctuation">(</span>a<span class="token operator">&amp;</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:1.34,words:402},y:"a",t:"CSAPP练习一——位运算的各类实现"}}],["/posts/CS/DB/database-1.html",{loader:()=>u(()=>import("./database-1.html-pF3F1vrI.js"),__vite__mapDeps([34,1])),meta:{d:1695168e6,l:"2023年9月20日",c:["数据库原理"],g:["数据库","mysql"],e:`
<p>早些时候我们使用文件来储存和操作数据, 但是对于大量的数据和操作并不理想, 针对其中缺陷, 我们可以映射出数据库需要提供的功能.</p>
<ul>
<li>解决数据冗余和一致性问题</li>
<li>访问数据的困难</li>
<li>数据隔离</li>
<li>完整性问题</li>
<li>原子性问题</li>
<li>并发访问问题</li>
</ul>
<h1>数据视图</h1>
<p>数据视图可以看作对于数据的抽象</p>
<p>首先我们明确一下抽象(abstraction)的定义:</p>
<blockquote>
<p>抽象是对于事物属性中, 我们感兴趣的那一部分共有属性的提取, 使我们可以只专注于感兴趣的特定部分</p>
</blockquote>`,r:{minutes:4.29,words:1286},y:"a",t:"数据库原理(一)总览"}}],["/posts/CS/DB/database-10(CH16).html",{loader:()=>u(()=>import("./database-10(CH16).html-DpwR4kdl.js"),__vite__mapDeps([35,1])),meta:{d:17066592e5,l:"2024年1月31日",c:["database"],g:["database","SQL"],e:`
<h2>expression tree</h2>
<p>We usually display an execution plan as a tree of relational-algebra operators, like:</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Π</mi><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow></msub><mo stretchy="false">(</mo><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>A</mi><mo>=</mo><mn>5</mn></mrow></msub><mo stretchy="false">(</mo><mi>R</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⋈</mo><mo stretchy="false">(</mo><msub><mi>σ</mi><mrow><mi>B</mi><mo>=</mo><mn>6</mn></mrow></msub><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">
\\Pi_{A,B}((\\sigma_{A=5}(R)) \\bowtie (\\sigma_{B=6}(S)))
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord">Π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">((</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span><span class="mrel mtight">=</span><span class="mord mtight">5</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⋈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mrel mtight">=</span><span class="mord mtight">6</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)))</span></span></span></span></span></p>`,r:{minutes:4.61,words:1384},y:"a",t:"Query Optimization (database 16)"}}],["/posts/CS/DB/database-2.html",{loader:()=>u(()=>import("./database-2.html-BzBE6up9.js"),__vite__mapDeps([36,1])),meta:{d:16955136e5,l:"2023年9月24日",c:["数据库原理"],g:["数据库","mysql"],e:`
<p>关系模型可以简单理解为描述数据关系的模型, 一般用一张表来表示, 一个格子中储存数据, 然后通过横纵坐标来确定数据和其他事物的关系</p>
<h2>关系型数据库</h2>
<p>基于关系模型建立的数据库我们称为关系型数据库</p>
<p>对于关系型数据库, 我们有以下基本的概念和元素:</p>
<ul>
<li>表(table): 一张表就是一个二维表格</li>
<li>元组(tuple): 表中的一行</li>
<li>属性(attribute): 表中的一列</li>
</ul>
<p>我们用<strong>relation instance</strong>表示一个表的实例, 我们所说的关系的最小单位可以视作一个表, 因为只有完整的横纵坐标才能构成一组关系</p>`,r:{minutes:3.76,words:1128},y:"a",t:"数据库原理(2)关系模型"}}],["/posts/CS/DB/database-3(CH34).html",{loader:()=>u(()=>import("./database-3(CH34).html-BfKoliFN.js"),__vite__mapDeps([37,1])),meta:{d:16957728e5,l:"2023年9月27日",c:["数据库原理"],g:["数据库","mysql"],e:`<!-- vscode-markdown-toc -->
<ul>
<li>
<ol>
<li><a href="#ddl">DDL</a></li>
</ol>
<ul>
<li>1.1. <a href="#basictype">Basic Type</a></li>
<li>1.2. <a href="#defineaschema">Define a schema</a></li>
<li>1.3. <a href="#integrityconstraints">integrity constraints</a></li>
</ul>
</li>
<li>
<ol start="2">
<li><a href="#dml">DML</a></li>
</ol>
<ul>
<li>2.1. <a href="#table">table操作</a>
<ul>
<li>2.1.1. <a href="">删除表</a></li>
<li>2.1.2. <a href="#-1">修改表</a></li>
</ul>
</li>
<li>2.2. <a href="#-1">查询</a>
<ul>
<li>2.2.1. <a href="#join">join操作</a></li>
<li>2.2.2. <a href="#-1">聚合操作</a></li>
<li>2.2.3. <a href="#-1">子查询</a></li>
<li>2.2.4. <a href="#-1">量化词</a></li>
<li>2.2.5. <a href="#alias">alias</a></li>
<li>2.2.6. <a href="#-1">集合操作和字符串操作</a></li>
</ul>
</li>
<li>2.3. <a href="#-1">修改</a></li>
</ul>
</li>
<li>
<ol start="3">
<li><a href="#-1">其他操作</a></li>
</ol>
<ul>
<li>3.1. <a href="#view">View(视图)</a></li>
<li>3.2. <a href="#transaction">Transaction(事务)</a></li>
<li>3.3. <a href="#integrityconstraints">Integrity constraints</a>
<ul>
<li>3.3.1. <a href="#domainconstraint">domain constraint</a></li>
<li>3.3.2. <a href="#referentialintegrity">referential integrity</a></li>
</ul>
</li>
<li>3.4. <a href="#-1">其他类型</a>
<ul>
<li>3.4.1. <a href="#dataandtime">data and time</a></li>
</ul>
</li>
<li>3.5. <a href="#format">format</a></li>
<li>3.6. <a href="#coalesce">coalesce</a></li>
<li>3.7. <a href="#decode">decode</a></li>
<li>3.8. <a href="#-1">用户定义类型</a></li>
<li>3.9. <a href="#key">自动生成唯一key</a></li>
<li>3.10. <a href="#createtable1liketable2">create table1 like table2</a></li>
<li>3.11. <a href="#index">index</a></li>
<li>3.12. <a href="#authorization">Authorization(权限)</a></li>
<li>3.13. <a href="#role">Role</a></li>
</ul>
</li>
</ul>`,r:{minutes:9.97,words:2992},y:"a",t:"数据库原理(34)SQL"}}],["/posts/CS/DB/database-4.html",{loader:()=>u(()=>import("./database-4.html-Dsecywwa.js"),__vite__mapDeps([38,1])),meta:{d:16974144e5,l:"2023年10月16日",c:["database"],g:["database","SQL"],e:`<p>I don't want to learn and talk much about this part, because this part usually has a different support in different database software.</p>
<p>So I will just describe what the SQL should be able to do, and explain some basic principle of it.</p>
<h1>Accessing SQL from a Program language</h1>
<p>We need to identify the queries or the modification of the database from the program language. Thers are mainly two reasons for it.</p>`,r:{minutes:3.79,words:1137},y:"a",t:"Advanced SQL:Database Concept(5)"}}],["/posts/CS/DB/database-5.html",{loader:()=>u(()=>import("./database-5.html-CIxbOPPc.js"),__vite__mapDeps([39,1])),meta:{d:17032032e5,l:"2023年12月22日",c:["database"],g:["database","ER-model","ER-diagram"],e:`<p>Due to I learned this topic long ago, some of the content I will just describe it briefly.</p>
<!-- vscode-markdown-toc -->
<ul>
<li>
<ol>
<li><a href="#initialphase">initial phase</a></li>
</ol>
<ul>
<li>1.1. <a href="#next">next</a></li>
<li>1.2. <a href="#conbination">conbination</a></li>
<li>1.3. <a href="#transfer">transfer</a></li>
</ul>
</li>
<li>
<ol start="2">
<li><a href="#validatethefunctionalrequirements">validate the functional requirements</a></li>
</ol>
</li>
<li>
<ol start="3">
<li><a href="#final">final</a></li>
</ol>
<ul>
<li>3.1. <a href="#logicaldesignphase">logical design phase</a></li>
<li>3.2. <a href="#physicaldesignphase">physical design phase</a></li>
</ul>
</li>
<li>
<ol start="4">
<li><a href="#basicmethod">Basic Method</a></li>
</ol>
</li>
<li>
<ol start="5">
<li><a href="#additionalmethod">Additional Method</a></li>
</ol>
</li>
<li>
<ol start="6">
<li><a href="#onetomany">one to many</a></li>
</ol>
</li>
<li>
<ol start="7">
<li><a href="#manytomany">many to many</a></li>
</ol>
</li>
<li>
<ol start="8">
<li><a href="#weakentityset">weak entity set</a></li>
</ol>
</li>
<li>
<ol start="9">
<li><a href="#removetheredundancyattributesinentitysets">Remove the Redundancy Attributes in Entity sets</a></li>
</ol>
</li>
</ul>`,r:{minutes:4.64,words:1392},y:"a",t:"Database Design Using the ER Model(6)"}}],["/posts/CS/DB/database-6.html",{loader:()=>u(()=>import("./database-6.html-BW_LO7Ul.js"),__vite__mapDeps([40,1])),meta:{d:17032896e5,l:"2023年12月23日",c:["database"],g:["database","schema"],e:`<!-- TOC -->
<ul>
<li><a href="#relation-database-design">Relation Database Design</a>
<ul>
<li><a href="#features-of-the-good-relation-designs">Features of the Good relation Designs</a>
<ul>
<li><a href="#decomposition">Decomposition</a></li>
<li><a href="#normalization-theory">Normalization Theory</a>
<ul>
<li><a href="#superkey">Superkey</a></li>
<li><a href="#functional-dependency">functional dependency</a></li>
<li><a href="#closure">Closure</a></li>
<li><a href="#lossless-decomposition-with-functional-dependencies">Lossless Decomposition with Functional Dependencies</a></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><a href="#normal-forms">Normal Forms</a>
<ul>
<li><a href="#boyce-codd-normal-form">Boyce-Codd Normal Form</a></li>
<li><a href="#dependency-preservation">Dependency Preservation</a></li>
<li><a href="#update-anomalies">Update Anomalies</a>
<ul>
<li><a href="#insertion-anomaly">Insertion Anomaly</a></li>
</ul>
</li>
<li><a href="#thrid-normal-form">Thrid Normal Form</a></li>
<li><a href="#comparision-of-3nf-and-bcnf">Comparision of 3NF and BCNF</a></li>
</ul>
</li>
<li><a href="#functional-theory">Functional Theory</a>
<ul>
<li><a href="#algorithm-to-caculate-the-closure">Algorithm to Caculate the Closure</a></li>
<li><a href="#canonical-cover">canonical cover</a>
<ul>
<li><a href="#extraneous">Extraneous</a></li>
<li><a href="#canonical-cover-1">Canonical Cover</a></li>
<li><a href="#algorithm-to-caculate-the-canonical-cover">Algorithm to Caculate the Canonical Cover</a></li>
</ul>
</li>
<li><a href="#dependency-preservation-1">Dependency Preservation</a>
<ul>
<li><a href="#algorithm-to-validate-the-dependency-preservation">Algorithm to Validate the Dependency Preservation</a>
<ul>
<li><a href="#algorithm-1">Algorithm 1</a></li>
<li><a href="#algorithm-2">Algorithm 2</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#multi-valued-dependency">multi-valued dependency</a></li>
</ul>
</li>
</ul>`,r:{minutes:6.75,words:2024},y:"a",t:"Relation Database Design(CH 7)"}}],["/posts/CS/DB/database-7(CH13).html",{loader:()=>u(()=>import("./database-7(CH13).html-B1Rg-9QA.js"),__vite__mapDeps([41,1])),meta:{d:1703376e6,l:"2023年12月24日",c:["database"],g:["database","storage"],e:`<p>Disk and SSD are both block devices, which means they support random access. However random access is time-consuming, so there is some organization and optimization to make the access faster.</p>
<h1>13.1 Database storage Architecture</h1>
<p>This is the base architecture of the database storage. And nowadays, the memory is large enough to store the whole database in the memory. We call it a <strong>main-memory database</strong>.</p>`,r:{minutes:2.4,words:721},y:"a",t:"Database Storage architecture"}}],["/posts/CS/DB/database-8(CH14).html",{loader:()=>u(()=>import("./database-8(CH14).html-BytBQ0Yh.js"),__vite__mapDeps([42,1])),meta:{d:17041536e5,l:"2024年1月2日",c:["database"],g:["database","index"],e:`<p>[toc]</p>
<h1>Basic Concepts</h1>
<p>Indexing is an efficient way to find the certain record in the database. It is like the index of a book. We can find the certain record by the index.</p>
<p>There are two kinds of indices:</p>
<ul>
<li>Ordered indices</li>
<li>Hash indices</li>
</ul>
<p>An attribute which is used for indexing is called a <strong>search key</strong>.</p>`,r:{minutes:2.96,words:889},y:"a",t:"Indexing (database 14)"}}],["/posts/CS/DB/database-9(CH15).html",{loader:()=>u(()=>import("./database-9(CH15).html-CrPRDEaG.js"),__vite__mapDeps([43,1])),meta:{d:17064864e5,l:"2024年1月29日",c:["database"],g:["database","SQL"],e:`<p>The query processing contains the following steps:</p>
<ul>
<li>parsing and translation</li>
<li>optimization</li>
<li>evaluation</li>
</ul>
<p>The execution plan consists of <strong>evaluation</strong> primitive**.</p>
<h1>measures of query cost</h1>
<ul>
<li>disk accesses</li>
<li>CPU time to execute a query</li>
<li>the cost of communication in distributed database systems</li>
</ul>`,r:{minutes:2.96,words:887},y:"a",t:"Query Processing (database 15)"}}],["/posts/CS/PC_oranization/CH_1.html",{loader:()=>u(()=>import("./CH_1.html-DwUHPXZP.js"),__vite__mapDeps([44,1])),meta:{d:17070912e5,l:"2024年2月5日",c:["计算机组成原理"],g:["计算机组成原理","考研"],r:{minutes:.1,words:29},y:"a",t:"总线"}}],["/posts/CS/PC_oranization/MESI.html",{loader:()=>u(()=>import("./MESI.html-7nqwb0B1.js"),__vite__mapDeps([45,1])),meta:{d:1694736e6,l:"2023年9月15日",c:["computer organization"],g:["operating-system","OS","缓存","计组原理"],e:`<p>此处记录一个硬件中解决cache coherence(缓存一致性)的机制: MESI</p>
<h1>缓存行</h1>
<p>缓存行是缓存中的最小单位, 一般为64字节, 也就是16个int</p>
<h1>MESI</h1>
<ul>
<li>modified</li>
<li>exclusive</li>
<li>shared</li>
<li>invalid</li>
</ul>
<p>这四个单词代表了缓存行的四种状态</p>
<h2>modified</h2>
<p>状态M表示数据只存在于当前的缓存行中, 并且已经被修改过</p>
<h2>exclusive</h2>
<p>状态E表示数据被当前缓存行独占, 但是没有修改过</p>`,r:{minutes:1.48,words:445},y:"a",t:"MESI机制"}}],["/posts/CS/PC_oranization/encode_calculate.html",{loader:()=>u(()=>import("./encode_calculate.html-DRW5uxBM.js"),__vite__mapDeps([46,1])),meta:{d:17101152e5,l:"2024年3月11日",c:["computer organization"],g:["computer","organization","machine","code"],e:`
<p>我们平时使用和表示的数字称为 <strong>真值</strong>.</p>
<p>真值一个重要特点是带有符号, 不管是正数还是负数:</p>
<ul>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo><mn>1.1101</mn></mrow><annotation encoding="application/x-tex">-1.1101</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">−</span><span class="mord">1.1101</span></span></span></span></li>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo><mn>101.110</mn></mrow><annotation encoding="application/x-tex">+101.110</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">+</span><span class="mord">101.110</span></span></span></span></li>
</ul>`,r:{minutes:5.99,words:1796},y:"a",t:"数值的编码与计算(计组)"}}],["/posts/CS/compiler/CH1-note.html",{loader:()=>u(()=>import("./CH1-note.html-BBbDqx8d.js"),__vite__mapDeps([47,1])),meta:{d:16810848e5,l:"2023年4月10日",c:["compiler"],g:["compiler"],e:`<h2>一些关键词的记录</h2>
<h3>name, identifier, variable</h3>
<ul>
<li>name
名字关联的是一个实体, 例如变量, 函数, 类型, 常量等, 并且会根据环境(environment)的不同而有不同的内存位置</li>
<li>identifier
标识符, 是名字的一个子集
相对于标识符, 名字还包括了表达式, 比如成员变量的表示<code>a.b</code></li>
<li>variable
变量表示内存中的一个位置, 一个变量可以有多个名字</li>
</ul>
<h3>environment, state</h3>
<ul>
<li>environment
环境是一个映射, 用来表示名字和变量(内存位置)之间的关系</li>
<li>state
状态是一个映射, 用来表示变量和值之间的关系</li>
</ul>`,r:{minutes:1.24,words:372},y:"a",t:"编译原理-引言"}}],["/posts/CS/compiler/CH2-note.html",{loader:()=>u(()=>import("./CH2-note.html-BimRTs6t.js"),__vite__mapDeps([48,1])),meta:{d:16810848e5,l:"2023年4月10日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`<h2>一些关键词及含义的记录</h2>
<h3>left-associative, right-associative</h3>
<ul>
<li>
<p>left-associative
如果一个运算符的结果是从左到右结合的, 则为left-associative, 比如加减乘除都是left-associative的</p>
</li>
<li>
<p>right-associative
如果一个运算符的结果是从右到左结合的, 则为right-associative, 比如幂运算和赋值就是right-associative的</p>
</li>
</ul>
<h3>ambiguity</h3>`,r:{minutes:1.21,words:363},y:"a",t:"编译原理-A-Simple-directed-translator"}}],["/posts/CS/compiler/CH3-note.html",{loader:()=>u(()=>import("./CH3-note.html-hUoEEOD2.js"),__vite__mapDeps([49,1])),meta:{d:16823808e5,l:"2023年4月25日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`<h2>依然还是关键词的记录</h2>
<h3>Lexeme, Token, Pattern</h3>
<ul>
<li>Token:
&lt;id, "a"&gt;
&lt;num, 10&gt;
像这样已经完成解析, 包含了若干属性的单元我们称为Token</li>
<li>Pattern:
模式, 用来匹配一个串的, 比较常见的匹配包括了正则匹配</li>
<li>Lexeme:
最小的语句单元, 我们可以认为一个模式所能匹配的最小单元为一个Lexeme(词素)
<code>int a = 10</code></li>
</ul>
<p>在这里面, <code>int</code> <code>a</code> <code>=</code> <code>10</code> 都是词素, 匹配了每一个词素的规则(一般是正则表达式)称为模式, 模式匹配的结果<code>&lt;id, 'a'&gt;</code>称为Token</p>`,r:{minutes:2.2,words:659},y:"a",t:"编译原理-词法解析"}}],["/posts/CS/compiler/CH4-Bottom-Up-Parse.html",{loader:()=>u(()=>import("./CH4-Bottom-Up-Parse.html-Ki4cAxuY.js"),__vite__mapDeps([50,1])),meta:{d:16825536e5,l:"2023年4月27日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`<h2>几个关键词</h2>
<h3>shift-reduce parser</h3>
<p>移入-归约解析器, 具体步骤也是维护一个栈, 依次将输入推入栈中, 然后当栈中解析到<strong>句柄(Handle)</strong> 时, 进行归约操作</p>
<h3>Handle</h3>
<p>句柄, 是解析树中最左父子关系的全部叶节点</p>
<p>为了描述清楚这个概念, 我们先解释<strong>短语(Phrase)<strong>和</strong>直接短语(Direct Phrase)</strong></p>
<p>这是一棵解析树:</p>
<ul>
<li>
<p>在这个这个解析树表示的句子是<code>id3 + id1 * id2</code>, 其中的任意从左到右的叶子都是一个<strong>短语</strong>, 比如<code>id3 + id1 * id2</code>本身或者<code>id1 * id2</code>
我们也可以用<strong>树结构</strong>来解释: 所有叶节点都是non-terminal的树, 我们称之为一个<strong>短语</strong></p>
</li>
<li>
<p>其中, 只拥有<strong>父子节点关系</strong>的短语我们称为直接短语, 比如<code>* id2</code>是一个直接短语, <code>id3</code>是一个直接短语, <code>id1</code>所在的子树由于和<code>* id2</code>之间有<code>T</code>节点, 产生了gap, 所以不是直接短语</p>
</li>
<li>
<p>在这些直接短语中, 最左边的直接短语被称为<strong>句柄(Handle)</strong> , 所以上图的句柄为<code>id3</code></p>
</li>
</ul>`,r:{minutes:4.83,words:1448},y:"a",t:"编译原理-自底向上解析"}}],["/posts/CS/compiler/CH4-Top-Down-Parse.html",{loader:()=>u(()=>import("./CH4-Top-Down-Parse.html-Bt93uh_f.js"),__vite__mapDeps([51,1])),meta:{d:16825536e5,l:"2023年4月27日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`
<h2>基本概念</h2>
<p>所谓自顶向下解析, 就是从语法树的最上层开始, 向下推导出目标的语言</p>
<p>比如我们有以下语法:</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>S</mi><mo>→</mo><mi>E</mi><mspace linebreak="newline"></mspace><mi>E</mi><mo>→</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mspace linebreak="newline"></mspace><msup><mi>E</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><mo>+</mo><mi>T</mi><msup><mi>E</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi><mspace linebreak="newline"></mspace><mi>T</mi><mo>→</mo><mi>F</mi><msup><mi>T</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mspace linebreak="newline"></mspace><msup><mi>T</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>→</mo><mo>∗</mo><mi>F</mi><msup><mi>T</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mi mathvariant="normal">∣</mi><mi>ϵ</mi><mspace linebreak="newline"></mspace><mi>F</mi><mo>→</mo><mo stretchy="false">(</mo><mi>E</mi><mo stretchy="false">)</mo><mi mathvariant="normal">∣</mi><mi>i</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">
S \\rightarrow E\\\\
E \\rightarrow TE'\\\\
E' \\rightarrow +TE' | \\epsilon\\\\
T \\rightarrow FT'\\\\
T' \\rightarrow *FT' | \\epsilon\\\\
F \\rightarrow (E) | id
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mord">+</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">ϵ</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.8019em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0519em;vertical-align:-0.25em;"></span><span class="mord">∗</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">ϵ</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span><span class="mord">∣</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span></span></span></span></span></p>`,r:{minutes:3.3,words:990},y:"a",t:"编译原理-自顶向下解析"}}],["/posts/CS/compiler/CH4-note.html",{loader:()=>u(()=>import("./CH4-note.html-BLZl78TV.js"),__vite__mapDeps([52,1])),meta:{d:16825536e5,l:"2023年4月27日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`<h2>关键词记录解释</h2>
<h3>Bottom-up-parse, Top-down-parse</h3>
<ul>
<li>
<p>Bottom-up-parse
自底向上的解析, 从最小的语法单元开始解析, 直到解析到最大的语法单元, 使用右线性文法的语言适合使用Bottom-up-parse</p>
</li>
<li>
<p>Top-down-parse
自顶向下的解析, 从最大的语法单元开始解析, 直到解析到最小的语法单元, 使用左线性文法的语言适合使用Top-down-parse, 需要避免左递归</p>
</li>
</ul>
<h3>Error type</h3>
<ul>
<li>Lexical error
词法错误, 例如<code>int a = 10;</code>中的<code>int</code>写成了<code>intt</code></li>
<li>Syntactic error
语法错误, 例如<code>case</code>缺少对应的<code>switch</code>, <code>else</code>缺少对应的<code>if</code></li>
<li>Semantic error
语义错误, 例如需要返回<code>int</code>类型的函数返回了<code>string</code>类型的值, 并且没有支持的隐式转换(implicit conversion)</li>
<li>Logical error
逻辑错误, 例如<code>a = a + 1</code>写成了<code>a = a - 1</code>或者<code>a == 10</code>写成了<code>a = 10</code>, 这些错误并不会导致程序无法运行, 但是会使得程序偏离预期的结果</li>
</ul>`,r:{minutes:2.54,words:761},y:"a",t:"编译原理-语法解析"}}],["/posts/CS/compiler/CH4-yacc-and-lex.html",{loader:()=>u(()=>import("./CH4-yacc-and-lex.html-sJAKMMLq.js"),__vite__mapDeps([53,1])),meta:{d:1683072e6,l:"2023年5月3日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`
<ul>
<li>Yacc: parser的生成器</li>
<li>Lex: scanner的生成器</li>
</ul>
<p>在Ubuntu环境下安装对应的<code>bsion</code>和<code>flex</code></p>
<h1>基本格式</h1>
<h2>Flex</h2>
<div class="language-lex" data-ext="lex" data-title="lex"><pre class="language-lex"><code>%{
#include "y.tab.h"
letter [a-zA-Z]
digit [0-9]
word {letter}({letter}|{digit})*
%}

%%
[0-9]+          { yylval = atoi(yytext); return T_NUM; }
[-/+*()\\n]      { return yytext[0]; }
[ \\t\\n]         ;
.               { yyerror("Unknown character"); }
%%

int yywrap(void) { 
    return 1;
}
</code></pre></div>`,r:{minutes:2.76,words:828},y:"a",t:"Yacc和Lex的基本使用"}}],["/posts/CS/compiler/CH5-SDD.html",{loader:()=>u(()=>import("./CH5-SDD.html-DC7HZzqH.js"),__vite__mapDeps([54,1])),meta:{d:16841088e5,l:"2023年5月15日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`<p>关键词记录与解释</p>
<hr>
<h2>synthesized and inherited attributes</h2>
<ul>
<li>
<p>synthesized attributes:
综合属性
由产生式的右部向左部传递的属性, 体现在解析树上, 该属性需要从下向上传递计算</p>
</li>
<li>
<p>inherited attributes:
继承属性
由产生式的左部向右部传递的属性, 体现在解析树上, 该属性需要从上向下传递计算</p>
</li>
</ul>
<p>需要注意的是, 继承属性除了允许父节点的属性对其进行计算外, 还允许<strong>兄弟节点</strong>进行计算</p>`,r:{minutes:3.15,words:946},y:"a",t:"语法制导翻译"}}],["/posts/CS/compiler/CH6-IR-Generation.html",{loader:()=>u(()=>import("./CH6-IR-Generation.html-CZ6Z72WB.js"),__vite__mapDeps([55,1])),meta:{d:16849728e5,l:"2023年5月25日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`<h2>Three-Address Code</h2>
<p>三地址码, 包含若干种形式:</p>
<ul>
<li><code>x = y op z</code></li>
<li><code>x = y</code></li>
<li><code>x = op y</code></li>
<li><code>x = *y</code></li>
<li><code>*x = y</code></li>
<li><code>x = &amp;y</code></li>
<li><code>goto L</code></li>
<li><code>if x goto L</code></li>
<li><code>ifFalse x goto L</code></li>
<li><code>param x</code></li>
<li><code>x = call y</code></li>
<li><code>x = y [z]</code></li>
</ul>`,r:{minutes:3.84,words:1151},y:"a",t:"中间代码生成"}}],["/posts/CS/compiler/CH7-Environment.html",{loader:()=>u(()=>import("./CH7-Environment.html-DwqDzOLM.js"),__vite__mapDeps([56,1])),meta:{d:16877376e5,l:"2023年6月26日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`<h3>stack and heap</h3>
<p>堆栈, 无需解释</p>
<h3>activation record</h3>
<p>活动记录表, 过程调用中保存的堆栈信息, 我们称为活动记录表, 也称为栈帧</p>
<p>书中描述的完整结构如下:</p>
<table>
<thead>
<tr>
<th style="text-align:center">Bottom</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">Actual parameters</td>
</tr>
<tr>
<td style="text-align:center">Returned value</td>
</tr>
<tr>
<td style="text-align:center">Control link</td>
</tr>
<tr>
<td style="text-align:center">Access link</td>
</tr>
<tr>
<td style="text-align:center">Saved machine status</td>
</tr>
<tr>
<td style="text-align:center">Local datas</td>
</tr>
<tr>
<td style="text-align:center">Temporaries</td>
</tr>
</tbody>
</table>`,r:{minutes:3.49,words:1048},y:"a",t:"运行时环境"}}],["/posts/CS/compiler/CH8-CodeGeneration.html",{loader:()=>u(()=>import("./CH8-CodeGeneration.html-BA6s8EzD.js"),__vite__mapDeps([57,1])),meta:{d:16880832e5,l:"2023年6月30日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`<p>本文不具有教程科普的性质, 只是个人学习过程中的理解记录</p>
<hr>
<p>在得到中间代码以后, 我们可以优化中间代码, 并生成目标代码(一般为汇编代码), 最后通过汇编器生成目标程序</p>
<p>而优化中间代码并生成目标代码部分我们称为后端, 是我们编译器的最后一个阶段</p>
<hr>
<p>代码生成(code generation)包含以下几个重要的部分:</p>
<ul>
<li>instruction selection: 选择指令</li>
<li>register allocation: 寄存器分配</li>
<li>register assignment: 赋值</li>
<li>instruction order: 指令排序</li>
</ul>`,r:{minutes:6.65,words:1995},y:"a",t:"代码生成"}}],["/posts/CS/compiler/CH9-MechineDependentOptimism.html",{loader:()=>u(()=>import("./CH9-MechineDependentOptimism.html-C2f5QQCU.js"),__vite__mapDeps([58,1])),meta:{d:16889472e5,l:"2023年7月10日",c:["compiler"],g:["compiler","词法分析","语法分析","语义分析","中间代码生成"],e:`<p>数据流分析是这一章前半部分的重要内容, 包含了数据流分析初步:</p>
<ul>
<li>到达定值分析</li>
<li>活跃变量分析</li>
<li>可用表达式分析</li>
</ul>
<p>然后介绍了数据流分析的抽象框架, 介绍了迭代算法和MOP算法的差异, 然后引入了<strong>不可分配</strong>的数据流分析框架——常量传播</p>
<p>然后是冗余代码消除, 这一部分也主要是数据流分析的应用, 相关的内容会单独放到各个静态分析的笔记中记录.</p>
<hr>
<h1>Loop in the flow graph</h1>
<h2>Dominator(支配节点)</h2>`,r:{minutes:2.61,words:784},y:"a",t:"机器无关优化"}}],["/posts/CS/compiler/TypeCheck-20230815.html",{loader:()=>u(()=>import("./TypeCheck-20230815.html-CzWt8RNF.js"),__vite__mapDeps([59,1])),meta:{d:16920576e5,l:"2023年8月15日",c:["编译原理"],g:["compiler","语法分析","语义分析"],e:`<p>有人说编译原理是程序员的三大浪漫之一 (编译原理, OS, 图形学)</p>
<hr>
<h1>Type Checking</h1>
<blockquote>
<p>一个健壮的类型检查系统不需要动态检测类型错误</p>
</blockquote>
<p>能够在静态阶段就排除掉类型错误, 可以有效避免一些运行时错误以及恶意攻击</p>
<h2>Rules for Type Checking</h2>
<ul>
<li>synthesis(综合)</li>
<li>inference(推导)</li>
</ul>
<h3>Synthesis</h3>
<p>通过综合的方式, 我们可以从表达式树的子节点推导父节点的类型, 最后得到整个表达式的类型</p>`,r:{minutes:7.62,words:2285},y:"a",t:"精读编译原理6.5 - Type Checking"}}],["/posts/CS/compiler/staticProgramAnalysis.html",{loader:()=>u(()=>import("./staticProgramAnalysis.html-BPqlzF8x.js"),__vite__mapDeps([60,1])),meta:{d:16898976e5,l:"2023年7月21日",c:["compiler"],g:["compiler","静态分析","代码优化"],e:`<p>本笔记是基于龙书和南京大学《软件分析》课程的学习笔记, 本文不具有教程科普的性质, 只是个人学习过程中的理解记录</p>
<hr>
<h1>静态程序分析</h1>
<h2>intermideate representation</h2>
<p>不同的中间表示适用于不同的静态分析</p>
<h2>Reaching Definitions Analysis</h2>
<ul>
<li><strong>Reaching Definitions(到达定值)</strong>
我们可以定值理解为任何修改一个变量的操作, 比如赋值, 自加, 函数调用等等
在程序流图中, 任何一个位置我们可以当作<strong>程序点(program point)</strong>, 能够到达这个位置产生作用的定值我们称为<strong>到达定值</strong>
一个定值会<strong>kill(杀死)</strong> 所有之前的其他相同变量的定值</li>
</ul>`,r:{minutes:4.56,words:1367},y:"a",t:"静态程序分析"}}],["/posts/algorithm/Leetcode/2.html",{loader:()=>u(()=>import("./2.html-B92MdaPF.js"),__vite__mapDeps([61,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["LeetCode练习"],g:["语法","特性","c#","Leetcode"],e:`
<p>评注：类似高精度加法的一道题，通过链表结构实现</p>
`,r:{minutes:.58,words:174},y:"a",t:"LeetCode——c#——2"}}],["/posts/algorithm/automata-theory/CH1-language.html",{loader:()=>u(()=>import("./CH1-language.html-BxPHnaOz.js"),__vite__mapDeps([62,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["形式语言与自动机"],g:["形式语言","自动机","语言","离散数学","计算机理论"],e:`
<p>前三个小节为离散数学相关内容，包括关系、集合、树等，不在该课程中学习</p>
<h2>语言</h2>
<ul>
<li>
<p>字母表：
字母表是由字符（character）或符号（symbol）组成的有限集合，我们的课本用符号<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>表示</p>
<ul>
<li>
<p>基本性质</p>
<ul>
<li>整体性：每一个字母都是不可拆分的，计算机理论中我们一般称为<strong>原子性</strong></li>
<li>可分辩性：简而言之，字母表不能是多重集^[多重集是指集合中的元素可以重复出现，比如集合{1,2,2,3}就是一个多重集]</li>
</ul>
</li>
<li>
<p>计算性质</p>
<ul>
<li>字母表相乘：字母表相乘的结果是，将两个计算集合中的字母元素两两按顺序组合，得到的新集合，用符号表示如下：<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="normal">Σ</mi><mn>1</mn></msub><mo>×</mo><msub><mi mathvariant="normal">Σ</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">{</mo><mi>a</mi><mi>b</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mo>∈</mo><msub><mi mathvariant="normal">Σ</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>b</mi><mo>∈</mo><msub><mi mathvariant="normal">Σ</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">
\\Sigma_1 \\times \\Sigma_2 = \\{ab | a \\in \\Sigma_1, b \\in \\Sigma_2\\}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ab</span><span class="mord">∣</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span></p>
</li>
<li>字母表的幂：参考字母表相乘，但是对于幂次我们有以下性质:
<ul>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">Σ</mi><mn>0</mn></msup><mo>=</mo><mo stretchy="false">{</mo><mi>ε</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\\Sigma^0 = \\{\\varepsilon\\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ε</span><span class="mclose">}</span></span></span></span></li>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">Σ</mi><mi>n</mi></msup><mo>=</mo><mi mathvariant="normal">Σ</mi><mo>×</mo><msup><mi mathvariant="normal">Σ</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">\\Sigma^n = \\Sigma \\times \\Sigma^{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord">Σ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></li>
</ul>
</li>
<li>字母表的闭包（closure）^[当一个集合对某个运算闭合时, 我们称该集合满足闭包性质, 否则我们称最小的一个包含该集合的封闭集合为该集合的闭包]
<ul>
<li>正闭包：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">Σ</mi><mo>+</mo></msup><mo>=</mo><mi mathvariant="normal">Σ</mi><mo>∪</mo><msup><mi mathvariant="normal">Σ</mi><mn>2</mn></msup><mo>∪</mo><msup><mi mathvariant="normal">Σ</mi><mn>3</mn></msup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">\\Sigma^+ = \\Sigma \\cup \\Sigma^2 \\cup \\Sigma^3...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord">...</span></span></span></span></li>
<li>克林闭包（Kleene closure）：<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup><mo>=</mo><msup><mi mathvariant="normal">Σ</mi><mo>+</mo></msup><mo>∪</mo><mo stretchy="false">{</mo><mi>ε</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\\Sigma^* = \\Sigma^+ \\cup \\{\\varepsilon\\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ε</span><span class="mclose">}</span></span></span></span>
也就是说克林闭包只是比正闭包多了一个空语言<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ε</span></span></span></span></li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>句子(sentence):
一个句子是由字母表中的字母组成的有限序列, 我们用字母<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>表示, 其符号语言定义如下:</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">∀</mi><mi>x</mi><mo>∈</mo><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup><mtext>,&nbsp;where&nbsp;</mtext><mi mathvariant="normal">Σ</mi><mtext>&nbsp;is&nbsp;a&nbsp;finite&nbsp;alphabet</mtext><mspace linebreak="newline"></mspace><mi>x</mi><mtext>&nbsp;is&nbsp;a&nbsp;sentence</mtext></mrow><annotation encoding="application/x-tex">
\\forall x \\in \\Sigma^* \\text{, where } \\Sigma \\text{ is a finite alphabet}\\\\
x\\text{ is a sentence}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.0391em;"></span><span class="mord">∀</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9331em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mord text"><span class="mord">,&nbsp;where&nbsp;</span></span><span class="mord">Σ</span><span class="mord text"><span class="mord">&nbsp;is&nbsp;a&nbsp;finite&nbsp;alphabet</span></span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:0.6679em;"></span><span class="mord mathnormal">x</span><span class="mord text"><span class="mord">&nbsp;is&nbsp;a&nbsp;sentence</span></span></span></span></span></span></p>
<p>句子还可以称为字(word), 行(line), 串(string)</p>
<ul>
<li>当一个句子为<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">xay</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>, 且满足<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">x \\in \\Sigma^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>∈</mo><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">y \\in \\Sigma^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>∈</mo><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">a \\in \\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>时, 我们称<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">a</span></span></span></span>为句子<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi>a</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">xay</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal">a</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>的一个出现</li>
<li>句子的字母元素的数量我们称为句子的长度, 用符号表示为<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|x|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mord">∣</span></span></span></span></li>
<li>我们有两句子<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>满足<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo>∈</mo><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">x \\in \\Sigma^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>∈</mo><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">y \\in \\Sigma^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, 我们称<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">xy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>为句子<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>和<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>的<strong>并置</strong>, 又叫<strong>连接</strong>,</li>
<li>对于任意并置, 我们具有以下性质:
<ul>
<li>结合律</li>
<li>左消去和右消去律</li>
<li>唯一分解性: 可以由唯一的方式分解为若干字母</li>
<li>单位元素: <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi><mi>x</mi><mo>=</mo><mi>x</mi><mo>=</mo><mi>x</mi><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\\epsilon x = x = x \\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">ϵ</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span><span class="mord mathnormal">ϵ</span></span></span></span></li>
</ul>
</li>
</ul>
</li>
<li>
<p>缀类:</p>
<ul>
<li>前缀</li>
<li>后缀</li>
<li>真前缀</li>
<li>真后缀</li>
<li>公共前缀</li>
<li>公共后缀</li>
<li>最大公共前缀</li>
<li>最大公共后缀</li>
<li>字串</li>
<li>公共子串</li>
<li>最大公共子串</li>
</ul>
</li>
<li>
<p>语言:
对于一个集合<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>, 满足<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>⊆</mo><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">L \\subseteq \\Sigma^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>, 我们称<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>为<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>的一个语言, 其中的元素为该语言的句子</p>
<ul>
<li>语言的乘积:
语言的乘积为两个语言的所有句子的并置的结果所组成的语言, 用符号表示为<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub><mo>×</mo><msub><mi>L</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>∈</mo><msub><mi>L</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>y</mi><mo>∈</mo><msub><mi>L</mi><mn>2</mn></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">L_1 \\times L_2 = \\{xy | x \\in L_1, y \\in L_2\\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">x</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>'</li>
<li>语言和字母表一样, 也有闭包的概念:
<ul>
<li>正闭包: <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>L</mi><mo>+</mo></msup><mo>=</mo><mi>L</mi><mo>∪</mo><msup><mi>L</mi><mn>2</mn></msup><mo>∪</mo><msup><mi>L</mi><mn>3</mn></msup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">L^+ = L \\cup L^2 \\cup L^3...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8141em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord">...</span></span></span></span></li>
<li>克林闭包: <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>L</mi><mo>∗</mo></msup><mo>=</mo><msup><mi>L</mi><mo>+</mo></msup><mo>∪</mo><mo stretchy="false">{</mo><mi>ε</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">L^* = L^+ \\cup \\{\\varepsilon\\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7713em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7713em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∪</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">ε</span><span class="mclose">}</span></span></span></span></li>
</ul>
</li>
</ul>
</li>
</ul>`,r:{minutes:2.62,words:787},y:"a",t:"形式语言与自动机 第一章 语言"}}],["/posts/algorithm/automata-theory/CH2-grammar.html",{loader:()=>u(()=>import("./CH2-grammar.html-vGMo7RFW.js"),__vite__mapDeps([63,1])),meta:{d:16780608e5,l:"2023年3月6日",c:["形式语言与自动机"],g:["形式语言","自动机","语言","离散数学","计算机理论"],e:`
<p><strong>文法的定义</strong>: 一个四元组<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo>=</mo><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>T</mi><mo separator="true">,</mo><mi>P</mi><mo separator="true">,</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G=(V,T,P,S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span>，其中<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>是非终结符的有限集合，<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>是终结符的有限集合，<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>是产生式的有限集合，<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span>是开始符号，且<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>∈</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">S\\in V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>, 我们称<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span>为一个文法</p>`,r:{minutes:3.95,words:1186},y:"a",t:"形式语言与自动机 第二章 文法"}}],["/posts/algorithm/automata-theory/CH3-DFA.html",{loader:()=>u(()=>import("./CH3-DFA.html-UzcbaKMO.js"),__vite__mapDeps([64,1])),meta:{d:16786656e5,l:"2023年3月13日",c:["形式语言与自动机"],g:["形式语言","自动机","语言","离散数学","计算机理论"],e:`
<p>关于这一节, 如果不用严格的证明表述的话还是很好理解的</p>
<h2>什么是自动机, 为什么要有自动机?</h2>
<p>这里所说的自动机可以看作对语言的形式化理解(对字符串进行理解)</p>
<p>我们在很多地方都有用到自动机的理论, 比如数字电路中的时序电路, 我们常用状态转移图来表示一个电路状态根据输入的变化.</p>
<p>自动机理论则是将这种状态, 状态转移, 语言的概念进行抽象, 总结出来的理论</p>
<h3>FA的定义</h3>
<p>一个FA是一个五元组<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>Q</mi><mo separator="true">,</mo><mi mathvariant="normal">Σ</mi><mo separator="true">,</mo><mi>δ</mi><mo separator="true">,</mo><msub><mi>q</mi><mn>0</mn></msub><mo separator="true">,</mo><mi>F</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(Q, \\Sigma, \\delta, q_0, F)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">Q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Σ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mclose">)</span></span></span></span>来定义的, 其中:</p>`,r:{minutes:1.35,words:405},y:"a",t:"有穷状态自动机"}}],["/posts/algorithm/automata-theory/CH45-RL-MyhillNerode.html",{loader:()=>u(()=>import("./CH45-RL-MyhillNerode.html-phxyOLS_.js"),__vite__mapDeps([65,1])),meta:{d:168048e7,l:"2023年4月3日",c:["形式语言与自动机"],g:["形式语言","自动机","语言","离散数学","计算机理论"],e:`
<p>定理规定以下三个命题同时成立:</p>
<ol>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>⊆</mo><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">L \\subseteq \\Sigma^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8193em;vertical-align:-0.136em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⊆</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>是正则语言</li>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>是<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi mathvariant="normal">Σ</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">\\Sigma^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6887em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>上的某一个具有有穷指数的右不变等价关系<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>R</mi></mrow><annotation encoding="application/x-tex">R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>的某些等价类的并</li>
<li><span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>R</mi><mi>L</mi></msub></mrow><annotation encoding="application/x-tex">R_L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0077em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>具有有穷指数</li>
</ol>`,r:{minutes:2.78,words:834},y:"a",t:"形式语言与自动机 Myhill-Nerode定理"}}],["/posts/algorithm/automata-theory/CH6-CFG-reduction.html",{loader:()=>u(()=>import("./CH6-CFG-reduction.html-DB9Mba5K.js"),__vite__mapDeps([66,1])),meta:{d:16809984e5,l:"2023年4月9日",c:["形式语言与自动机"],g:["形式语言","自动机","语言","离散数学","计算机理论"],e:`
<p>上下文无关文法的化简可以分为三个部分:</p>
<ul>
<li>无用符号的消除</li>
<li>空产生式的消除</li>
<li>单一产生式的消除</li>
</ul>
<h2>无用符号的删除</h2>
<p>我们给无用符号以下含义:</p>
<ul>
<li>从初始符号开始, 无法到达的符号都是无用的, 可以删除</li>
<li>从每个终结符开始, 无法归约到的符号都是无用的, 可以删除</li>
</ul>
<p>于是我们去除无用符号的算法可以描述为:</p>
<ol>
<li>将初始符号加入一个集合, 并向后推导符号, 并将推导出的符号加入集合, 迭代直到集合不产生变化</li>
<li>将所有终结符加入一个集合, 并向前推导符号, 并将推导出的符号加入集合, 迭代直到集合不产生变化</li>
<li>不在两个集合中的符号都是无用的, 可以删除</li>
</ol>`,r:{minutes:4.56,words:1369},y:"a",t:"形式语言与自动机 CFG的化简和规范"}}],["/posts/algorithm/data-struct/RBTree.html",{loader:()=>u(()=>import("./RBTree.html-DRWn4xWg.js"),__vite__mapDeps([67,1])),meta:{d:15830964e5,l:"2020年3月2日",c:["算法","数据结构"],g:["数据结构","树","平衡树"],e:`<p>本文红黑树的学习主要来自于Linux操作系统中的<code>rbtree.c</code></p>
<h2>红黑树</h2>
<p>首先红黑树是一种平衡树，通过红黑染色的方式保持平衡</p>
<h3>术语解释</h3>
<ul>
<li><strong>NIL</strong>：NIL节点是一个空节点，我们可以认为它是一个空指针指向的节点，代表这里什么也没有，在红黑树中我们认为一个NIL节点的颜色默认为黑色，虽然并没有一个实际的节点储存这个颜色信息</li>
</ul>
<h3>红黑树必须满足以下四条性质</h3>
<ol>
<li>Every node is either red or black.</li>
<li>All NIL nodes (figure 1) are considered black.</li>
<li>A red node does not have a red child.</li>
<li>Every path from a given node to any of its descendant NIL nodes goes through the same number of black nodes.</li>
</ol>`,r:{minutes:16.35,words:4906},y:"a",t:"红黑树"}}],["/posts/algorithm/discrete-mathematic/master-theorem.html",{loader:()=>u(()=>import("./master-theorem.html-BmMC_0VB.js"),__vite__mapDeps([68,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["算法"],g:["算法","分治","主定理"],e:`<h4>首先我们来看一道算法题</h4>
<hr>
<h1>平面最近点对（加强版）</h1>
<h2>题目背景</h2>
<p><a href="/problem/P7883">P7883</a> 平面最近点对（加强加强版）</p>
<h2>题目描述</h2>
<p>给定平面上 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个点，找出其中的一对点的距离，使得在这 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span> 个点的所有点对中，该距离为所有点对中最小的</p>`,r:{minutes:2.67,words:800},y:"a",t:"分治算法和主定理"}}],["/posts/SE/design-pattern/CoR.html",{loader:()=>u(()=>import("./CoR.html-Crr8gWZX.js"),__vite__mapDeps([69,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>责任链模式</h3>
<p>责任链模式属于表现型模式，注重的是代码逻辑的运行方式和类之间的协调工作方式</p>
<p>Chain of Responsibility，正如其名，责任链模式是通过Handler组成链来处理某些请求的，其思想如下：</p>
<ul>
<li>
<p>假如现在我们要做一个身份验证，以确保正确合法的用户访问我们的服务器，我们需要先验证用户请求的密钥，然后需要验证用户的访问设备、环境等</p>
</li>
<li>
<p>在此之后，我们又添加了在短时间内失败多次的用户验证失败的功能，用来防止暴力破解密码</p>
</li>
<li>
<p>然后我们又添加了cookie验证来缓存用户的数据状态</p>
</li>
</ul>`,r:{minutes:2.69,words:806},y:"a",t:"Chain of Responsibility"}}],["/posts/SE/design-pattern/Facade.html",{loader:()=>u(()=>import("./Facade.html-4T93bzby.js"),__vite__mapDeps([70,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>facade</h3>
<p>facade相对来说比较简单，其思想如下：
当我们有一个复杂的框架、系统时，我们需要通过这个框架实现某个功能，而不需要关系这个框架本身，也不需要用它实现其他功能时，则使用一个类，把这些功能封装为一个简单的类供客户使用</p>
<p>依然使用来自Refactorying·Guru的插图：</p>
<figure><img src="https://refactoring.guru/images/patterns/diagrams/facade/structure.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:1.39,words:416},y:"a",t:"facade pattern"}}],["/posts/SE/design-pattern/State.html",{loader:()=>u(()=>import("./State.html-DS8BlzFi.js"),__vite__mapDeps([71,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>State</h3>
<p>状态模式的思想可以参考状态机（有限状态机）</p>
<p>一个类有一个状态机，并且该类处于不同的状态时的方法的行为也不同，我们可以考虑通过条件分支来实现状态机，但是这样的实现需要对每个类都实现状态机的条件分治，高重复度的部分难以得到复用，代码的维护也相当麻烦</p>
<p>所以我们把每个状态写成一个类，然后只需要在不同的类中实现状态改变的方法，在需要的时候调用状态改变的方法即可</p>
<p>下面我们通过UML图详细说明：</p>
<figure><img src="https://refactoring.guru/images/patterns/diagrams/state/structure-en.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:1.66,words:498},y:"a",t:"State"}}],["/posts/SE/design-pattern/abstract-factory.html",{loader:()=>u(()=>import("./abstract-factory.html-m2XOyuKi.js"),__vite__mapDeps([72,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h2>抽象工厂</h2>
<p>在抽象工厂模式中，给工厂定义了统一接口，不同的工厂提供不同的产品族，同一类、不同族的产品也定义统一的接口</p>
<p>通过这种方式可以得到的效果是：</p>
<ul>
<li>client通过向具体工厂申请，直接获得一个对象，并用产品接口接收，中间不知道产品的具体类，也不知道产品是如何被实例化（instantiate）的</li>
<li>这样就把客户和产品的具体实现分离开了</li>
<li>如果要添加产品的种类的话，所有的具体工厂实现都需要随着抽象工厂的改变而改变具体实现，所以抽象工厂不适合增加产品种类，但是相对的，添加产品族类只需要新定义一个具体工厂即可实现</li>
<li>对于一个产品的内部改变、工厂的实例化逻辑，都不需要client去在意其实现，对于client接口没有改变，所有的逻辑就能正常运作</li>
</ul>`,r:{minutes:1.95,words:585},y:"a",t:"Abstract Factory"}}],["/posts/SE/design-pattern/adapter.html",{loader:()=>u(()=>import("./adapter.html-Dpt2k68V.js"),__vite__mapDeps([73,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<p>到这里，五种基本的创造型模式就结束了
创造型模式注重于创建对象的方式，通过工厂封装创建过程、通过单例只创建同一个对象、通过原型克隆对象等等</p>
<p>接下来是结构型模式，结构将会</p>
<h3>Adapter, also known as Wrapper</h3>
<p>适配器模式用于：当一个业务逻辑的接口和一个类不一致，但是又需要对这个类进行处理时，通过建立一个adapter的中间类来实现接口的对接，故称之为适配器</p>
<p>以这幅图为例子解释
<img src="https://refactoring.guru/images/patterns/diagrams/adapter/structure-object-adapter.png" alt="avator" loading="lazy">
Client希望通过接口与一个Service交互，但是两者接口不一致，所以我们实现一个Client Interface的适配器类，其中通过Composition的方式包括了一个Servive对象，然后再实现method来实现Service和Client的对接
这幅图的业务逻辑应该是Client需要调用Service中的方法从而得到数据，但是没有接口可以直接接收一个Service，所以通过实现一个接口适配器，接收内部数据，并转换为Service方法参数，传参、返回结果</p>`,r:{minutes:2.64,words:791},y:"a",t:"适配器模式"}}],["/posts/SE/design-pattern/bridge.html",{loader:()=>u(()=>import("./bridge.html-DCBGGzbN.js"),__vite__mapDeps([74,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>Bridge</h3>
<p>First, let's have a look of the picture below:</p>
<figure><img src="https://refactoring.guru/images/patterns/diagrams/bridge/structure-en.png?id=827afa4b40008dc29d26fe0f4d41b9cc" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>There are two main element in the bridge pattern:</p>`,r:{minutes:1.99,words:598},y:"a",t:"Bridge"}}],["/posts/SE/design-pattern/builder.html",{loader:()=>u(()=>import("./builder.html-Cz8CU1iG.js"),__vite__mapDeps([75,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>建造者模式</h3>
<p>在建造者模式中，有几个实体存在：director、builder、concreteBuilder</p>
<p>这几个实体相互运作，来“建造”一个产品给client</p>
<p>首先，director是用户直接交互的对象，通过director来“指挥”builder生产产品的component，并用于组装产品</p>
<p>builder是一个接口，director可以用对应的 concrete builder来进行建造
而builder是director的一部分，可以根据用户的需求改变</p>
<hr>
<p>建造者模式是一个相对灵活的模式，我会尝试多写点案例情况以加强理解
下面这个点餐的例子来源于noob note</p>`,r:{minutes:2.57,words:770},y:"a",t:"Builder"}}],["/posts/SE/design-pattern/command.html",{loader:()=>u(()=>import("./command.html-Ck4DNCq9.js"),__vite__mapDeps([76,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>Command</h3>
<p>命令模式的思想很好理解，而且也非常有用：</p>
<p>现在假设我们有一个GUI程序和它的底层业务逻辑，如果我们要让GUI界面中的按钮能够运行一些底层业务逻辑，简单的解决方式是建立一个基本的按钮基类，然后派生出一系列解决不同功能的按钮子类</p>
<p>但是这样的方式会产生大量的子类，而且如果我们想要在其他组件上实现相同的功能的话，就不得不复制按钮类的实现代码</p>
<p>解决这个问题的方式是使用<strong>命令模式</strong>，我们把底层的业务逻辑实现为一系列方法，然后建立一个接口，名为Command，实现该接口的类包含了我们调用底层方法需要的参数、逻辑等</p>`,r:{minutes:2.38,words:713},y:"a",t:"command pattern"}}],["/posts/SE/design-pattern/composite.html",{loader:()=>u(()=>import("./composite.html-CWmQ5ouP.js"),__vite__mapDeps([77,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>Composite</h3>
<p>还是来自Refactorying·Guru网站的UML图
<img src="https://refactoring.guru/images/patterns/diagrams/composite/structure-en.png" alt="" loading="lazy"></p>
<p>Composite pattern contains 4 main members:</p>
<ul>
<li>Component</li>
<li>Composite</li>
<li>Leaf</li>
<li>Client</li>
</ul>
<p>首先介绍一下Composite的思想：
对于一些组成树形结构的对象，由于他们类型不同，在遍历时需要的判断不同的条件</p>`,r:{minutes:1.17,words:351},y:"a",t:"Composite pattern"}}],["/posts/SE/design-pattern/decorator.html",{loader:()=>u(()=>import("./decorator.html-BsalY92M.js"),__vite__mapDeps([78,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>decorator</h3>
<p>首先依旧是来自Refactorying·Guru的图：</p>
<figure><img src="https://refactoring.guru/images/patterns/diagrams/decorator/structure.png?id=8c95d894aecce5315cc1b12093a7ea0c" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>
<p>decorator又称作wrapper（包装模式），非常直观就能看出这个设计模式的思想：通过聚合（aggregation）和组合（composition）来扩展一个类的功能</p>`,r:{minutes:1.6,words:479},y:"a",t:"decorator pattern"}}],["/posts/SE/design-pattern/factoryMethod.html",{loader:()=>u(()=>import("./factoryMethod.html-CUmUFe_u.js"),__vite__mapDeps([79,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>工厂方法模式</h3>
<p>在工厂方法模式中，我们主要考虑的就是“方法”</p>
<p>我们之前已经了解过了抽象工厂，通过实现工厂和产品的接口来将产品和client分割开来，而这里的工厂方法模式是从具体的视角来看待抽象工厂</p>
<p>我们在抽象工厂中考虑的工厂的方法全部都是抽象的，产品对应的方法也全部都是抽象的，但是实际上工厂会有一些具体的方法不需要每个工厂单独实现</p>
<p>我们的创造产品的代码就和其他的代码区别开来了，每个不同的工厂单独实现创造产品的模式就是工厂方法模式，这也正是对应其命名，工厂中分别定义的是方法</p>
<p>工厂方法常常和抽象工厂结合使用，我认为他们都是工厂模式的一部分，只是考虑的方式和视角不一样，对此就不对工厂方法模式做更多的例子了</p>`,r:{minutes:3.57,words:1071},y:"a",t:"Abstract Factory"}}],["/posts/SE/design-pattern/flyweight.html",{loader:()=>u(()=>import("./flyweight.html-wN-xZh2N.js"),__vite__mapDeps([80,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>flyweight</h3>
<p>享元模式的思想如下：</p>
<p>当我们需要创建大量对象时，比如游戏中的子弹，每个对象都需要储存一些数据，比如：</p>
<div class="language-plantuml" data-ext="plantuml" data-title="plantuml"><pre class="language-plantuml"><code><span class="token delimiter punctuation">@startuml</span>
<span class="token keyword">hide</span> Particle method
<span class="token keyword">class</span> Particle<span class="token punctuation">{</span>
    color
    speed
    vector
    coord
    sprite
<span class="token punctuation">}</span>
<span class="token delimiter punctuation">@enduml</span>
</code></pre></div>`,r:{minutes:3.18,words:954},y:"a",t:"flyweight pattern"}}],["/posts/SE/design-pattern/iterator.html",{loader:()=>u(()=>import("./iterator.html-BuLnH0oI.js"),__vite__mapDeps([81,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>Iterator</h3>
<p>迭代器是相当熟悉的东西，在C++中，我们使用迭代器来遍历容器或者获得容器中的指定位置</p>
<p>这里的迭代器模式思想和平时我们遇到的迭代器差不多，用于在一个复杂的数据结构中遍历、获得指定元素</p>
<p>比如现在我们有一颗树，我们需要给这棵树广度优先遍历和深度优先遍历，然后又加上了遍历叶节点等等各种遍历方式，但我们并不想要在这个数据结构中加入诸多这样的方法，因为我们并不一定所有的方法都会使用，而且我们的数据结构更重要的是储存数据，而不是实现各类算法</p>
<p>所以我们把这些各种遍历算法提取出来，通过一个统一的接口实现，使得任何适用的类可以通过外界的Iterator来遍历元素，实现代码复用以及算法和数据结构的解耦(decouple)</p>`,r:{minutes:2.07,words:621},y:"a",t:"Iterator pattern"}}],["/posts/SE/design-pattern/learnFromJAVA.html",{loader:()=>u(()=>import("./learnFromJAVA.html-wwL25mTZ.js"),__vite__mapDeps([82,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],r:{minutes:.1,words:31},y:"a",t:"从JAVA标准库中了解设计模式"}}],["/posts/SE/design-pattern/mediator.html",{loader:()=>u(()=>import("./mediator.html-DSn2hbZ3.js"),__vite__mapDeps([83,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>mediator</h3>
<p>中介者模式简单来说就是在各个交互的类之间加上一个中间件，使得各个组件之间的交流通过中间件来控制，各个组件只能和中间件通信，对于每个组件来说其他组件都是未知的，这样使得组件之间实现了解耦，组件的代码得以在其他地方得到复用</p>
<p>比如我们现在要组成一个窗口，窗口内的按钮和label之间会相互影响，那么我们建立一个窗口类，这个窗口类可以接收所有按钮和label的请求，并处理请求，寻找合适的其他对象进行请求和通信</p>
<p>下面来看一下来自refactoring.guru的类结构图：</p>
<figure><img src="https://refactoring.guru/images/patterns/diagrams/mediator/structure.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:2.42,words:725},y:"a",t:"mediator"}}],["/posts/SE/design-pattern/memento.html",{loader:()=>u(()=>import("./memento.html-BXLMXPGP.js"),__vite__mapDeps([84,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>memento</h3>
<p>备忘录模式是用于储存类状态的设计模式</p>
<p>现在假设我们需要实现程序中“撤回”的操作，也就是说我们需要对程序的历史状态做一个记录，然后在用户做出“undo”指令的时候回溯到某个历史状态</p>
<p>我们如果直接用一个外部类来储存这些状态的话，对于<code>private</code>级别的状态是无法访问的，所以我们需要让类的内部自行储存他的状态</p>
<p>下面我们来看来自refactoring.guru的类结构图：
<img src="https://refactoring.guru/images/patterns/diagrams/memento/structure1.png?id=4b4a42363a005b617d4df06689787385" alt="" loading="lazy"></p>`,r:{minutes:1.92,words:576},y:"a",t:"memento"}}],["/posts/SE/design-pattern/observer.html",{loader:()=>u(()=>import("./observer.html-B8vSN54J.js"),__vite__mapDeps([85,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>Observer</h3>
<p>观察者模式和发布订阅模式有一定的相似之处，但是两者并不完全相同</p>
<p>下面介绍一下观察者模式的思想：
当一个类的某些状态发生改变时，我们希望一些其它类能够知道，并执行相应的行为，回想一下我们可以使用中介者模式来实现这个功能，只要对特定的组件的行为设定为对其他组件进行通知即可</p>
<p>但是实际上这个模式可以简化掉中介者，而是由要通知其他类的<strong>发布类</strong>来负责记录有哪些<strong>观察类</strong>，然后向这些观察者传递某些参数，或者发布类本身，来告知某些事件的发生</p>
<p>下面来看一下refactoring.guru的类结构图：</p>`,r:{minutes:2.15,words:646},y:"a",t:"memento"}}],["/posts/SE/design-pattern/principle.html",{loader:()=>u(()=>import("./principle.html-DRoAMfnp.js"),__vite__mapDeps([86,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h4>1.6 How design pattern solve design problems</h4>
<p>there are some tips taken down:</p>
<ul>
<li><strong>request</strong> is the <strong>only</strong> way to get an object to excute an operation, and <strong>operation</strong> is the only way to change the <strong>internal data</strong>.
we call this  <strong>encapsulated</strong>.</li>
</ul>`,r:{minutes:2.22,words:665},y:"a",t:"设计模式"}}],["/posts/SE/design-pattern/prototype.html",{loader:()=>u(()=>import("./prototype.html-I_8l5KYR.js"),__vite__mapDeps([87,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>原型模式</h3>
<p>我们先来看一看之前的abstract factory和factory method</p>
<figure><img src="https://www.tutorialspoint.com/design_pattern/images/abstractfactory_pattern_uml_diagram.jpg" alt="avator" tabindex="0" loading="lazy"><figcaption>avator</figcaption></figure>
<p>在这个抽象工厂中，为了得到一个Shape或者RoundedShape，需要两种不同的工厂
如果我们现在拥有四个具体产品的每一个object，那么我们就可以舍弃工厂，而定义一个Prototype的接口，通过把这四个具体产品实现Prototype的接口，来给与他们自拷贝的能力
这样一来，我们可以通过一个拷贝来获得Object，而不是工厂，而我们的类的数量就减少了（工厂类全部舍弃了）</p>`,r:{minutes:1.22,words:365},y:"a",t:"原型模式"}}],["/posts/SE/design-pattern/proxy.html",{loader:()=>u(()=>import("./proxy.html-BrUOsTSG.js"),__vite__mapDeps([88,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>代理模式</h3>
<p>说起代理就容易让人想起网络上的代理，简单来说，就是在一个数据接收方之前加入一个第三方服务器先接收数据，然后转发给原本的接收方</p>
<p>设计模式上的代理模式也是一样的思想：在某个类提供的服务前加入一个类，这个类有着和原本的类相同的接口，但是实际上是原本类的聚合（aggregate），代理类可以在访问原本类的服务之前或之后进行某些处理</p>
<p>来自refactoring.guru的类图：</p>
<figure><img src="https://refactoring.guru/images/patterns/diagrams/proxy/structure.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:1.34,words:401},y:"a",t:"Proxy pattern"}}],["/posts/SE/design-pattern/singleton.html",{loader:()=>u(()=>import("./singleton.html-Bqc1MhH1.js"),__vite__mapDeps([89,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>单例模式</h3>
<p>单例模式没什么值得多说的，记住几个原则和使用方法</p>
<ul>
<li>
<p>保证object只有一个</p>
</li>
<li>
<p>我们可以定义一个单例接口，然后实现一堆单例类，在不同的环境使用不同的单例类，但是必须保证每个环境只有一个这样的单例类，我们通过构建一个registry来管理注册这些不同的单例类</p>
</li>
<li>
<p>单例类可以用来优化全局变量，减少命名空间的使用</p>
</li>
</ul>
`,r:{minutes:.52,words:156},y:"a",t:"单例模式"}}],["/posts/SE/design-pattern/strategy.html",{loader:()=>u(()=>import("./strategy.html-CiYHsLK5.js"),__vite__mapDeps([90,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>Strategy</h3>
<p>策略模式是与算法的选择有关的设计模式
现在假设我们有一个地图导航程序，我们通过输入起点和终点，能够得到一条线路，我们通过不同的算法可以得到最短线路、步行线路、经过景点的线路等等</p>
<p>为了实现代码复用和维护方便，我们把不同的算法封装为类，满足一个接口，让程序通过接口调用不同的算法，这样的思想就是策略模式</p>
<p>下面是来自refactoring的UML图：</p>
<figure><img src="https://refactoring.guru/images/patterns/diagrams/strategy/structure.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>`,r:{minutes:1.4,words:420},y:"a",t:"Strategy"}}],["/posts/SE/design-pattern/template.html",{loader:()=>u(()=>import("./template.html-NW5g6x3T.js"),__vite__mapDeps([91,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>Template</h3>
<p>模板模式和我们平时用的template也有思想相似之处</p>
<p>现在假设我们有一个处理文档的程序，需要先读取文档，然后将其进行处理，最后输出结果。我们读取的文档可能是不同的格式，比如PDF、DOC、TXT等，那么我们的程序在读取文档和输出阶段就会有不同方法，但是对内容的处理是相同的行为</p>
<p>我们可以将这个程序的算法拆为几个部分：读取文档、内容处理、结果输出，既然内容处理都是相同的，就把内容处理的方法实现，作为父类，派生出多个实现了不同文档读取和输出的类，实现了对单个步骤不同的程序的代码复用</p>
<p>下面是来自refactoring的UML图：</p>`,r:{minutes:2.3,words:690},y:"a",t:"Template"}}],["/posts/SE/design-pattern/visitor.html",{loader:()=>u(()=>import("./visitor.html-CFjEZREy.js"),__vite__mapDeps([92,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["设计模式"],g:["design-pattern","面向对象"],e:`<h3>Visitor</h3>
<p>访问者模式</p>
<p>在讨论这个模式之前，我们先讨论一下double dispatch（双分派）</p>
<p>当一个函数存在多个重载时，编译器会怎么选择函数的重载？
如果这些重载的参数毫无关系，编译器自然是选择符合要求的重载</p>
<p>但是如果接收的参数是一个接口（父类）以及一系列他的子类，编译器会怎么选择呢？</p>
<p>我们看一下下面两种代码（动态绑定和静态绑定）：</p>
<div class="language-java" data-ext="java" data-title="java"><pre class="language-java"><code>method <span class="token function">drawShape</span><span class="token punctuation">(</span>shape<span class="token operator">:</span> <span class="token class-name">Shape</span><span class="token punctuation">)</span> is
    shape<span class="token punctuation">.</span><span class="token function">draw</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:3.49,words:1047},y:"a",t:"Visitor"}}],["/posts/math/probability-theory/importance-of-probability-distibution.html",{loader:()=>u(()=>import("./importance-of-probability-distibution.html-DxxgMmSs.js"),__vite__mapDeps([93,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["课程复习"],g:["数学","概率论"],e:`<h3><p style="text-align: center;">概率密度为什么重要</p></h3>
<p style="text-align: center;">DNULL_P</p>
<h4>概率密度函数的定义</h4>
<p>在概率论中，概率密度函数是一个函数，用于在表示一个随机变量接近一个给定样本（函数上一个点）的相对可能性。换句话说，概率密度是随机变量出现在一个无穷小区间的可能性，这么一来就涉及到微积分的问题，概率密度函数是累积分布函数的微分，而通常累计分布函数表示为:</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>F</mi><mi>x</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo>≤</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">
F_x(x) = P( X \\le x )
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span></span></p>`,r:{minutes:3.68,words:1103},y:"a",t:"概率论期中论文"}}],["/posts/math/probability-theory/probability-theory.html",{loader:()=>u(()=>import("./probability-theory.html-Drc9tZgd.js"),__vite__mapDeps([94,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["课程复习"],g:["数学","概率论"],e:`
<ul>
<li>
<p>随机试验：可以在相同条件下重复进行，每次试验的可能结果不止一个，能明确所有可能的结果，不能确定每次的结果，记为 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span></p>
</li>
<li>
<p>样本空间：所有可能结果的集合，记为 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi></mrow><annotation encoding="application/x-tex">S</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span></span></span></span></p>
</li>
<li>
<p>样本点：其中一个可能结果，记为 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p>随机事件、基本事件、必然事件是样本空间的子集、单个样本点、样本空间自身的集合</p>
</li>
<li>
<p>这些事件可以通过集合运算来计算（合取析取）</p>
</li>
<li>
<p>频率：进行 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>次试验，事件 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>发生次数为 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">n_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，称 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>A</mi></msub></mrow><annotation encoding="application/x-tex">n_A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为频数，<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><msub><mi>n</mi><mi>A</mi></msub><mi>n</mi></mfrac></mrow><annotation encoding="application/x-tex">\\frac{n_A}{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0567em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7117em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4103em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>为频率，记为 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>n</mi></msub><mo stretchy="false">(</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f_n(A)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span></p>
</li>
<li>
<p>概率：概率是 <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>接近无穷时的一个近似值，是一个事件固有的属性，而频率是观测得到的数值</p>
</li>
<li>
<p>事件的概率的运算遵守集合间运算的规则，需要考虑容斥原理等</p>
</li>
</ul>`,r:{minutes:28.72,words:8616},y:"a",t:"概率论期末复习"}}],["/posts/math/signal/convolution.html",{loader:()=>u(()=>import("./convolution.html-yoVmC6Q4.js"),__vite__mapDeps([95,1])),meta:{d:16780608e5,l:"2023年3月6日",c:["数学基础"],g:["math","convolution"],e:`
<h2>定义</h2>
<p>卷积的定义式如下:</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>∗</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo stretchy="false">(</mo><mi>f</mi><mo>∗</mo><mi>g</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>f</mi><mo stretchy="false">(</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>g</mi><mo stretchy="false">(</mo><mi>x</mi><mo>−</mo><mi>τ</mi><mo stretchy="false">)</mo><mi>d</mi><mi>τ</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
\\begin{aligned}
f(x) * g(x) &amp; = (f*g)(x)\\\\
&amp; = \\int_{-\\infty}^{\\infty}f(\\tau)g(x-\\tau)d\\tau\\\\
\\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.1846em;vertical-align:-1.8423em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3423em;"><span style="top:-4.9166em;"><span class="pstrut" style="height:3.4143em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-2.8423em;"><span class="pstrut" style="height:3.4143em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8423em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3423em;"><span style="top:-4.9166em;"><span class="pstrut" style="height:3.4143em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-2.8423em;"><span class="pstrut" style="height:3.4143em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="mclose">)</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8423em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>`,r:{minutes:2.83,words:848},y:"a",t:"数学基础-卷积"}}],["/posts/math/signal/signal.html",{loader:()=>u(()=>import("./signal.html-CiGx3VNn.js"),__vite__mapDeps([96,1])),meta:{d:16780608e5,l:"2023年3月6日",c:["信号与系统"],g:["signal","system","special function"],e:`<h2>矩形函数</h2>
<p>矩形函数的定义式如下:</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>rect</mtext><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mo>∈</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo separator="true">,</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mn>1</mn><mn>2</mn></mfrac><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>t</mi><mo>=</mo><mo stretchy="false">{</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo separator="true">,</mo><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>0</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>otherwise</mtext></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
\\begin{aligned}
  \\text{rect}(t) &amp;= \\begin{cases}
    1, &amp; t \\in (-\\frac{1}{2}, \\frac{1}{2}) \\\\
    \\frac{1}{2} , &amp; t =\\{\\frac{1}{2},-\\frac{1}{2}\\} \\\\
    0, &amp; \\text{otherwise}
  \\end{cases}
\\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.62em;vertical-align:-2.06em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.56em;"><span style="top:-4.56em;"><span class="pstrut" style="height:4.41em;"></span><span class="mord"><span class="mord text"><span class="mord">rect</span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.06em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.56em;"><span style="top:-4.56em;"><span class="pstrut" style="height:4.41em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewBox="0 0 888.89 316" preserveAspectRatio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"></path></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span><span class="mpunct">,</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">}</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">otherwise</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.91em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.06em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>`,r:{minutes:1.43,words:428},y:"a",t:"信号与系统(一)特殊函数"}}],["/posts/math/signal/signal_2.html",{loader:()=>u(()=>import("./signal_2.html-C4qDbjvI.js"),__vite__mapDeps([97,1])),meta:{d:16782336e5,l:"2023年3月8日",c:["信号与系统"],g:["signal","system","fourier transform"],e:`<h2>四类信号变换</h2>
<h3>CFT, CFS, DTFT, DFS</h3>
<ul>
<li>
<p>CFT: Continuous Fourier Transform
连续傅里叶变换</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>j</mi><mi mathvariant="normal">Ω</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>x</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi mathvariant="normal">Ω</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mi>X</mi><mo stretchy="false">(</mo><mi>j</mi><mi mathvariant="normal">Ω</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mi>j</mi><mi mathvariant="normal">Ω</mi><mi>t</mi></mrow></msup><mi>d</mi><mi mathvariant="normal">Ω</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
\\begin{aligned}
X(j\\Omega) &amp;= \\int_{-\\infty}^{\\infty}x(t)e^{-j\\Omega t}dt\\\\
x(t) &amp;= \\int_{-\\infty}^{\\infty}X(j\\Omega)e^{j\\Omega t}d\\Omega
\\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.3691em;vertical-align:-2.4346em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9346em;"><span style="top:-4.9346em;"><span class="pstrut" style="height:3.4143em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">Ω</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.4143em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4346em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9346em;"><span style="top:-4.9346em;"><span class="pstrut" style="height:3.4143em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">Ω</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.4143em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">Ω</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">Ω</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord">Ω</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4346em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>连续非周期信号 - 连续非周期频域</p>
</li>
<li>
<p>CFS: Continuous Fourier Series
连续傅里叶级数</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>X</mi><mo stretchy="false">(</mo><mi>j</mi><mi>n</mi><mi mathvariant="normal">Ω</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>T</mi></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></msubsup><mover accent="true"><mi>x</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>n</mi><mi mathvariant="normal">Ω</mi><mi>t</mi></mrow></msup><mi>d</mi><mi>t</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mover accent="true"><mi>x</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>X</mi><mo stretchy="false">(</mo><mi>n</mi><mi mathvariant="normal">Ω</mi><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>n</mi><mi mathvariant="normal">Ω</mi><mi>t</mi></mrow></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
\\begin{aligned}
X(jn\\Omega) &amp;= \\frac{1}{T}\\int_{-\\infty}^{\\infty}\\tilde{x}(t)e^{-jn\\Omega t}dt\\\\
\\tilde{x}(t) &amp;= \\sum_{n=-\\infty}^{\\infty}X(n\\Omega)e^{jn\\Omega t}
\\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.9443em;vertical-align:-2.7222em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2222em;"><span style="top:-5.4593em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">jn</span><span class="mord">Ω</span><span class="mclose">)</span></span></span><span style="top:-2.5376em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7222em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2222em;"><span style="top:-5.4593em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">t</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">jn</span><span class="mord mtight">Ω</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span></span></span><span style="top:-2.5376em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3083em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord">Ω</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">jn</span><span class="mord mtight">Ω</span><span class="mord mathnormal mtight">t</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7222em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>连续周期信号 - 离散非周期频域</p>
</li>
<li>
<p>DTFT: Discrete Time Fourier Transform
离散时间傅里叶变换</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>X</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi mathvariant="normal">Ω</mi></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mo>−</mo><mi mathvariant="normal">∞</mi></mrow><mi mathvariant="normal">∞</mi></munderover><mi>x</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>j</mi><mi>n</mi><mi mathvariant="normal">Ω</mi></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>x</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi></mrow></mfrac><msubsup><mo>∫</mo><mrow><mo>−</mo><mi>π</mi></mrow><mi>π</mi></msubsup><mi>X</mi><mo stretchy="false">(</mo><msup><mi>e</mi><mrow><mi>j</mi><mi mathvariant="normal">Ω</mi></mrow></msup><mo stretchy="false">)</mo><msup><mi>e</mi><mrow><mi>j</mi><mi>n</mi><mi mathvariant="normal">Ω</mi></mrow></msup><mi>d</mi><mi mathvariant="normal">Ω</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
\\begin{aligned}
X(e^{j\\Omega}) &amp;= \\sum_{n=-\\infty}^{\\infty}x[n]e^{-jn\\Omega}\\\\
x[n] &amp;= \\frac{1}{2\\pi}\\int_{-\\pi}^{\\pi}X(e^{j\\Omega})e^{jn\\Omega}d\\Omega
\\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.9443em;vertical-align:-2.7222em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2222em;"><span style="top:-5.2222em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">Ω</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.1995em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7222em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2222em;"><span style="top:-5.2222em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">−</span><span class="mord mtight">∞</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3083em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight">jn</span><span class="mord mtight">Ω</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.1995em;"><span class="pstrut" style="height:3.6514em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol large-op" style="margin-right:0.44445em;position:relative;top:-0.0011em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4143em;"><span style="top:-1.7881em;margin-left:-0.4445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span><span style="top:-3.8129em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9703em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mord mtight">Ω</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">jn</span><span class="mord mtight">Ω</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord">Ω</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7222em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>离散非周期信号 - 离散非周期频域</p>
</li>
<li>
<p>DFS: Discrete Fourier Series
离散傅里叶级数</p>
<p v-pre="" class="katex-block"><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mover accent="true"><mi>X</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mi>x</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo><msubsup><mi>W</mi><mi>N</mi><mrow><mi>n</mi><mi>k</mi></mrow></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mover accent="true"><mi>x</mi><mo>~</mo></mover><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>0</mn></mrow><mrow><mi>N</mi><mo>−</mo><mn>1</mn></mrow></munderover><mover accent="true"><mi>X</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo><msubsup><mi>W</mi><mi>N</mi><mrow><mo>−</mo><mi>n</mi><mi>k</mi></mrow></msubsup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">
\\begin{aligned}
\\tilde{X}(k) &amp;= \\sum_{n=0}^{N-1}x[n]W_N^{nk}\\\\
\\tilde{x}[n] &amp;= \\frac{1}{N}\\sum_{k=0}^{N-1}\\tilde{X}(k)W_N^{-nk}
\\end{aligned}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.8259em;vertical-align:-3.1629em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6629em;"><span style="top:-5.6629em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span><span style="top:-2.2675em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">x</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1629em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6629em;"><span style="top:-5.6629em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2671em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.453em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">nk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.2675em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">0</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-2.4163em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">nk</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2837em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1629em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>离散周期信号 - 离散周期频域</p>
</li>
</ul>`,r:{minutes:2.35,words:704},y:"a",t:"信号与系统(二)傅里叶变换"}}],["/posts/network/ctf-note/linux-usage.html",{loader:()=>u(()=>import("./linux-usage.html-BtRmPoAF.js"),__vite__mapDeps([98,1])),meta:{d:16805664e5,l:"2023年4月4日",c:["CFT题目随笔"],g:["CTF","linux"],e:`<p>CFT的题包含的知识面相当广泛, 多做一做能学到不少东西, 所以在一天最后的时间里, 不妨看几道CTF题, 拓展拓展能力</p>
<hr>
<h2>Basic Linux Lab</h2>
<p>这道题目要求登录指定的linux服务器并找到flag, 给出了服务器域名和端口, 所以我们使用ssh指令登录服务器:</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">ssh</span> <span class="token parameter variable">-pxxxxx</span> root@xxx.xxx.xxx.xxx
</code></pre></div>`,r:{minutes:1.25,words:375},y:"a",t:"闲人的ctf记录"}}],["/posts/network/ctf-note/upload-attack.html",{loader:()=>u(()=>import("./upload-attack.html-Dw7VYhD7.js"),__vite__mapDeps([99,1])),meta:{d:16806528e5,l:"2023年4月5日",c:["CFT题目随笔"],g:["CTF","upload","文件上传攻击"],e:`<p>upload一共包含了20个pass</p>
<p>每个pass要上传一个文件以攻击服务器
比如题目提供的server框架是php环境的, 所以我们可以通过提交一个php文件来攻击服务器</p>
<p>比如我写了如下php代码</p>
<div class="language-php" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">&lt;!-- 输出当前目录全部文件和文件夹 --&gt;</span>
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token function">opendir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">readdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$file</span><span class="token operator">.</span><span class="token string single-quoted-string">'&lt;br&gt;'</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">closedir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>

<span class="token comment">&lt;!-- 输出根文件夹下的flag --&gt;</span>

<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token function">opendir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">readdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">==</span> <span class="token string single-quoted-string">'flag'</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'/flag'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">closedir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre></div>`,r:{minutes:1.97,words:590},y:"a",t:"闲人的ctf记录"}}],["/posts/network/self-studying-notes/2022-10-25.html",{loader:()=>u(()=>import("./2022-10-25.html-CKUDqQY4.js"),__vite__mapDeps([100,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["反思"],g:["Computer-Network"],e:`<h3>IP任播</h3>
<p>首先<strong>任播</strong>的寻址策略为，在一群的接收节点中，只有一个可以得到接收</p>
<p>可以想象成主机向各个节点执行<strong>广播</strong>，当有一个节点接收到主机的信息时，其他节点就无法再接收主机的信息，即在一群可能的接收节点只有一个接收节点</p>
<h3>BGP协议</h3>
<h4>内部和外部</h4>
<p>跨越AS的BGP链接称为外部BGP，相同AS中的两台路由器之间的BGP称为内部BGP</p>
<h4>BGP是什么</h4>
<p>BGP是AS之间的路由选择协议，在路由器之间通过TCP链接交换进行AS间的路由选择的必要信息（称为BGP attribute）：</p>`,r:{minutes:2.64,words:792},y:"a",t:"关于IP任播、BGP选择以及应用"}}],["/posts/network/self-studying-notes/2022-10-30.html",{loader:()=>u(()=>import("./2022-10-30.html-9mNoENh1.js"),__vite__mapDeps([101,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["反思","笔记","翻译"],g:["Computer-Network"],e:`<p>关于SNMP这一节的内容在第七版上的内容已经过时了，第八版采用的英文版原书，所以在此对原文进行中文的思路整理</p>
<h3>5.7.1 network management framework</h3>
<p>网络管理框架中包含以下要素：</p>
<ul>
<li>
<p>managing server
是一个应用，由网络管理员参与对整个网络的信息和指令进行收集、运行、分析、调度</p>
</li>
<li>
<p>managed device
被管理网络中的设备，包括host,router,middlebox,modern,switch</p>
</li>
<li>
<p>Date
包括configuration data and operational data
前者是人为配置的managed device的状态(state)，后者是其操作运行时才能获得的信息，比如运行OSPF时获得的邻居的信息等
device statistic
随着运行而更新的数据，比如设备接收的包的数量，丢弃的包的数量
managed device中的数据在manage server中也会有备份</p>
</li>
<li>
<p>network management agent
网络管理代理是运行在managed device中的应用，manage server通过与代理连接交流来控制managed device的本地行为</p>
</li>
<li>
<p>network management protocol
网络管理协议用于在managing server和managed device之间进行通信，中间通过agent代理</p>
</li>
</ul>`,r:{minutes:8.14,words:2442},y:"a",t:"SNMP与网络管理"}}],["/posts/network/self-studying-notes/2022-10-9.html",{loader:()=>u(()=>import("./2022-10-9.html-Ct9V7A3R.js"),__vite__mapDeps([102,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["反思"],g:["Computer-Network"],e:`<h2>可靠数据传输</h2>
<p>运输层在不可靠的网络层IP协议的基础上搭建了一个可靠的传输协议，但是其中的实现原理有些许复杂，在此做一下记录</p>
<h3>流水线</h3>
<p>流水线是后续的多种重传机制的基础，假如每个报文段在被接收方收到之后，返回一个ACK响应，再传输下一个报文段，在两次传输报文段之间的等待时间是不可忽视的长
参考cpu的指令处理流水线，网络数据分组的传输也使用了流水线机制，一次性传输多个分组，并且根据后续的响应做出重传</p>
<h3>流水线的基本重传方式</h3>
<p>首先，流水线的实现中有一个“滑动窗口”，没错，就和单调队列例题中的滑动窗口是同一个东西，窗口在分成报文段的报文上滑动，每个段就是一个分组，窗口的长度就是当前可以容纳的已经发送但是未接收到确认响应的分组数量，我们用<strong>base</strong>标记窗口的起始位置，表示未接受到的编号最小的分组的序号，用<strong>nextseqnum</strong>标记可用的“流水线空位”的起始位置</p>`,r:{minutes:6.72,words:2017},y:"a",t:"计算机网络第三章的一点思路整理"}}],["/posts/network/self-studying-notes/2022-11-5.html",{loader:()=>u(()=>import("./2022-11-5.html-NqSAP5LA.js"),__vite__mapDeps([103,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["反思","笔记","翻译"],g:["Computer-Network"],e:`<p>只是阅读时用于辅助记忆的笔记翻译，所以很多地方略过未翻译，请勿当作翻译参考</p>
<h2>Retrospective: A Day in the Life of a Web Page Request</h2>
<h2>回顾：一次网页请求的历程</h2>
<p><code>Now that we’ve covered the link layer in this chapter, and the network, transport and application layers in earlier chapters, our journey down the protocol stack is complete!</code></p>`,r:{minutes:15.55,words:4666},y:"a",t:"6.7节阅读与翻译"}}],["/posts/network/self-studying-notes/2023-4-21.html",{loader:()=>u(()=>import("./2023-4-21.html-BCOL6L76.js"),__vite__mapDeps([104,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["反思"],g:["Computer-Network"],e:`<p>半年过去了, 学校开始了计算机网络课程, 在重温并完成实验的过程中, 对一些细节和原理有了一些新的理解, 在此记录一下</p>
<h2>TCP的全双工传输</h2>
<hr>
<p>首先, TCP协议是双全工传输, 也就是说, 数据可以在两个方向上进行传输</p>
<p>然后在抓包时, 对这种传输方式有了直观的反应:</p>
<figure><figcaption></figcaption></figure>
<p>这是一段服务器接收文件的抓包, 服务器接收到报文返回ACK的编号增长是可以理解的, 但是传输文件的报文也有ACK的编号, 并且一直为1, 这是才反应过来, 在TCP中的ACK是传输文件捎带的, 只是为了让接收的一方知道自己发送的报文被接收到哪个序号了</p>`,r:{minutes:1.7,words:509},y:"a",t:"重温TCP细节"}}],["/posts/network/self-studying-notes/notes.html",{loader:()=>u(()=>import("./notes.html-CmX2Fo-p.js"),__vite__mapDeps([105,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["反思"],g:["C计算机网络"],e:`<h3>第一章思路整理</h3>
<p>第一次看这本书，刚开始有点没把握好节奏，在几个地方产生了一些误解，现在重新将本章的内容梳理一下，意在自我学习</p>
<h4>什么是因特网？</h4>
<p>这一段列举了因特网的组成部分，包括：</p>
<ul>
<li>通信链路(communication link)
通信链路就是连接网络的线路，通过不同的<strong>物理媒介</strong>实现</li>
<li>分组交换机(packet switch)
分组交换机包括<strong>路由器</strong>和<strong>链路层交换机</strong></li>
<li>路由器
负责forwarding的节点</li>
<li>链路层交换机</li>
<li>ISP(因特网服务提供商)</li>
<li>协议
协议是通信的一个双方使用的规则</li>
<li>标准
标准是由机构(institution)制定的统一的标准</li>
</ul>`,r:{minutes:5.01,words:1502},y:"a",t:"计算机网络记录反思"}}],["/posts/network/works-projects/wireShark-1-inro.html",{loader:()=>u(()=>import("./wireShark-1-inro.html-nlz3m3_J.js"),__vite__mapDeps([106,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["练习","计算机网络"],g:["Computer-Network","wireshark"],e:`<p>计网开课了, 复习一下遗忘的东西, 顺便做一下课本后的wireshark实验</p>
<h1>lab1: intro to wireshark</h1>
<ol>
<li>List 3 different protocols that appear in the protocol column in the unfiltered packet-listing window in step 7 above.</li>
</ol>
<ul>
<li>DNS</li>
<li>TCP</li>
<li>UDP</li>
<li>TLSv1.2</li>
<li>SSDP</li>
<li>ICMPv6</li>
</ul>`,r:{minutes:.96,words:288},y:"a",t:"wireshark practice 1"}}],["/posts/network/works-projects/wireShark-2.html",{loader:()=>u(()=>import("./wireShark-2.html-CJcv3jM8.js"),__vite__mapDeps([107,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["练习","计算机网络"],g:["Computer-Network","wireshark","HTTP"],e:`<p>the data is as follows:
<a href="/pdf/wireshark_2_1.pdf">print_data_2_1</a></p>
<ol>
<li>
<p>Is your browser running HTTP version 1.0 or 1.1?  What version of HTTP is the server running?</p>
<p>两者都是<code>HTTP/1.1</code></p>
</li>
<li>
<p>What languages (if any) does your browser indicate that it can accept to the server?
<code>ccept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,en-GB; q=0.6\\r\\n</code>
由上可知优先的语言包括: 中文, 英文
其中zh-CN是中文普通话, 包括繁体和简体, 而zh包括了方言在内的所有中   文</p>
</li>
<li>
<p>What is the IP address of your computer?  Of the <a href="http://gaia.cs.umass.edu" target="_blank" rel="noopener noreferrer">gaia.cs.umass.edu</a> server?</p>
<p>Mine is <code>10.122.242.69</code>
<a href="http://gaia.cs.umass.edu" target="_blank" rel="noopener noreferrer">gaia.cs.umass.edu</a> is <code>128.119.245.12</code></p>
</li>
<li>
<p>What is the status code returned from the server to your browser?</p>
<p><code>200 OK</code></p>
</li>
<li>
<p>When was the HTML file that you are retrieving last modified at the server?</p>
<p><code>Fri, 24 Feb 2023 06:08:02 GMT</code></p>
</li>
<li>
<p>How many bytes of content are being returned to your browser?</p>
<p><code>Content-Length 128</code></p>
</li>
<li>
<p>By inspecting the raw data in the packet content window, do you see any headers within the data that are not displayed in the packet-listing window?  If so, name one.</p>
</li>
</ol>`,r:{minutes:2.81,words:842},y:"a",t:"wireshark practice 2"}}],["/posts/network/works-projects/wireShark-3.html",{loader:()=>u(()=>import("./wireShark-3.html-EeteTaOZ.js"),__vite__mapDeps([108,1])),meta:{d:16790112e5,l:"2023年3月17日",c:["练习","计算机网络"],g:["Computer-Network","wireshark","DNS"],e:`<ol>
<li>Run nslookup to obtain the IP address of a Web server in Asia. What is the IP address of that server?</li>
</ol>
<div class="language-text" data-ext="text" data-title="text"><pre class="language-text"><code>nslookup www.baidu.com
Server:  UnKnown
Address:  10.3.9.44

Non-authoritative answer:
Name:    www.a.shifen.com
Addresses:  39.156.66.14
          39.156.66.18
Aliases:  www.baidu.com
</code></pre></div>`,r:{minutes:2.56,words:767},y:"a",t:"wireshark practice 3 - DNS"}}],["/posts/network/works-projects/wireShark-4-TCP.html",{loader:()=>u(()=>import("./wireShark-4-TCP.html-Wofra0_p.js"),__vite__mapDeps([109,1])),meta:{d:16820352e5,l:"2023年4月21日",c:["练习","计算机网络"],g:["Computer-Network","wireshark","TCP"],e:`<ol>
<li>What is the IP address and TCP port number used by the client computer (source) that is transferring the file to <a href="http://gaia.cs.umass.edu" target="_blank" rel="noopener noreferrer">gaia.cs.umass.edu</a>?  To answer this question, it’s probably easiest to select an HTTP message and explore the details of the TCP packet used to carry this HTTP message, using the “details of the selected packet header window” (refer to Figure 2 in the “Getting Started with Wireshark” Lab if you’re uncertain about the Wireshark windows.</li>
</ol>`,r:{minutes:2.13,words:638},y:"a",t:"wireshark practice 4 - TCP"}}],["/posts/network/works-projects/wireShark-5-DHCP.html",{loader:()=>u(()=>import("./wireShark-5-DHCP.html-D118FuXx.js"),__vite__mapDeps([110,1])),meta:{d:16909344e5,l:"2023年8月2日",c:["练习","计算机网络"],g:["Computer-Network","wireshark","DNS"],e:`<ol>
<li>
<p>Are DHCP messages sent over UDP or TCP?</p>
<p><code>All DHCP messages are sent over UDP.</code></p>
</li>
<li>
<p>Draw a timing datagram illustrating the sequence of the first four-packet Discover/Offer/Request/ACK DHCP  exchange between the client and server. For each packet, indicated the source and destination port numbers. Are the port numbers the same as in the example given in this lab assignment?</p>
<div class="language-Mermaid" data-ext="Mermaid" data-title="Mermaid"><pre class="language-Mermaid"><code>sequenceDiagram
    participant Client
    participant Server
    Client-&gt;&gt;Server: DHCP Discover(67)
    Server-&gt;&gt;Client: DHCP Offer(68)
    Client-&gt;&gt;Server: DHCP Request(67)
    Server-&gt;&gt;Client: DHCP ACK(68)
</code></pre></div></li>
<li>
<p>What is the link-layer (e.g., Ethernet) address of your host?</p>
</li>
<li>
<p>What values in the DHCP discover message differentiate this message from the DHCP request message?</p>
</li>
<li>
<p>What is the value of the Transaction-ID in each of the first four (Discover/Offer/Request/ACK) DHCP messages?  What are the values of the Transaction-ID in the second set (Request/ACK) set of DHCP messages?  What is the purpose of the Transaction-ID field?</p>
</li>
<li>
<p>A host uses DHCP to obtain an IP address, among other things. But a host’s IP address is not confirmed until the end of the four-message exchange!  If the IP address is not set until the end of the four-message exchange, then what values are used in the IP datagrams in the four-message exchange?  For each of the four DHCP messages (Discover/Offer/Request/ACK DHCP), indicate the source and destination IP addresses that are carried in the encapsulating IP datagram.</p>
</li>
<li>
<p>What is the IP address of your DHCP server?</p>
</li>
<li>
<p>What IP address is the DHCP server offering to your host in the DHCP Offer message?  Indicate which DHCP message contains the offered DHCP address.</p>
</li>
<li>
<p>In the example screenshot in this assignment, there is no relay agent between the host and the DHCP server. What values in the trace indicate the absence of a relay agent?  Is there a relay agent in your experiment? If so what is the IP address of the agent?</p>
</li>
<li>
<p>Explain the purpose of the router and subnet mask lines in the DHCP offer message.</p>
</li>
<li>
<p>In the DHCP trace file noted in footnote 2, the DHCP server offers a specific IP address to the client (see also question 8. above).  In the client’s response to the first server OFFER message, does the client accept this IP address?  Where in the client’s RESPONSE is the client’s requested address?</p>
</li>
<li>
<p>Explain the purpose of the lease time. How long is the lease time in your experiment?</p>
</li>
<li>
<p>What is the purpose of the DHCP release message?  Does the DHCP server issue an acknowledgment of receipt of the client’s DHCP request?  What would happen if the client’s DHCP release message is lost?</p>
</li>
<li>
<p>Clear the bootp filter from your Wireshark window. Were any ARP packets sent or received during the DHCP packet-exchange period? If so, explain the purpose of those ARP packets.</p>
</li>
</ol>`,r:{minutes:1.71,words:513},y:"a",t:"wireshark practice 3 - DNS"}}],["/posts/operating-system/osc/OSC_2.html",{loader:()=>u(()=>import("./OSC_2.html-CcTuy56J.js"),__vite__mapDeps([111,1])),meta:{d:16967232e5,l:"2023年10月8日",c:["OS"],g:["OS","process","thread"],e:`<!-- vscode-markdown-toc -->
<ul>
<li>
<ol>
<li><a href="#processstate">Process state</a></li>
</ol>
</li>
<li>
<ol start="2">
<li><a href="#queue">Queue</a></li>
</ol>
</li>
<li>
<ol start="3">
<li><a href="#sharedmemory">Shared memory</a></li>
</ol>
</li>
<li>
<ol start="4">
<li><a href="#messagepassing">Message passing</a></li>
</ol>
<ul>
<li>4.1. <a href="#directorindirect">Direct or indirect</a></li>
<li>4.2. <a href="#synchronizesorasynchronizes">Synchronizes or asynchronizes</a></li>
<li>4.3. <a href="#automaticorexplicitbuffering">Automatic or explicit buffering</a></li>
<li>4.4. <a href="#somemessagepassingipcmethod">Some message passing IPC method</a>
<ul>
<li>4.4.1. <a href="#pipes">pipes</a></li>
</ul>
</li>
</ul>
</li>
<li>
<ol start="5">
<li><a href="#thebenefitofmultithread">The benefit of multithread</a></li>
</ol>
</li>
<li>
<ol start="6">
<li><a href="#twokindofdispatch">two kind of dispatch</a></li>
</ol>
</li>
<li>
<ol start="7">
<li><a href="#challenge">challenge</a></li>
</ol>
</li>
<li>
<ol start="8">
<li><a href="#threadmodel">Thread model</a></li>
</ol>
</li>
<li>
<ol start="9">
<li><a href="#somethread-basedtool">Some thread-based tool</a></li>
</ol>
<ul>
<li>9.1. <a href="#threadpools">Thread Pools</a></li>
<li>9.2. <a href="#forkjoin">Fork join</a></li>
<li>9.3. <a href="#openmp">OpenMP</a></li>
<li>9.4. <a href="#grandcentraldispatch">Grand Central Dispatch</a></li>
</ul>
</li>
<li>
<ol start="10">
<li><a href="#someissueswiththemultithread">Some issues with the multithread</a></li>
</ol>
</li>
<li>
<ol start="11">
<li><a href="#threadcancellation">Thread cancellation</a></li>
</ol>
</li>
</ul>`,r:{minutes:7.39,words:2217},y:"a",t:"process and thread (OSC_2)"}}],["/posts/operating-system/osc/OSC_3.html",{loader:()=>u(()=>import("./OSC_3.html-BhEOCAHW.js"),__vite__mapDeps([112,1])),meta:{d:16968096e5,l:"2023年10月9日",c:["OS"],g:["Operating system","CPU Scheduling"],e:`<!-- vscode-markdown-toc -->
<ul>
<li>
<ol>
<li><a href="#criteriaforscheduling">Criteria for Scheduling</a></li>
</ol>
</li>
<li>
<ol start="2">
<li><a href="#ordinaryscheduling">ordinary scheduling</a></li>
</ol>
<ul>
<li>2.1. <a href="#fcfsfirstcomefirstserved">FCFS (first come first served)</a></li>
<li>2.2. <a href="#sjftheshortestjobfirst">SJF (the shortest job first)</a></li>
<li>2.3. <a href="#round-robinscheduling">Round-Robin Scheduling</a></li>
<li>2.4. <a href="#priorityscheduling">Priority Scheduling</a></li>
<li>2.5. <a href="#multilevelqueuescheduling">Multilevel Queue Scheduling</a></li>
<li>2.6. <a href="#multilevelfeedbackqueuescheduling">Multilevel Feedback Queue Scheduling</a></li>
</ul>
</li>
<li>
<ol start="3">
<li><a href="#whydoweneedthetwohardwarethreads">Why do we need the two hardware threads?</a></li>
</ol>
</li>
<li>
<ol start="4">
<li><a href="#loadingbalance">Loading Balance</a></li>
</ol>
<ul>
<li>4.1. <a href="#pushandpullmigration">Push and Pull Migration</a></li>
<li>4.2. <a href="#processoraffinity">Processor affinity</a></li>
</ul>
</li>
<li>
<ol start="5">
<li><a href="#comparison">comparison</a></li>
</ol>
</li>
<li>
<ol start="6">
<li><a href="#heterogeneousmultiprocessorshmp">heterogeneous multiprocessors(HMP)</a></li>
</ol>
</li>
<li>
<ol start="7">
<li><a href="#responsetime">Response Time</a></li>
</ol>
</li>
<li>
<ol start="8">
<li><a href="#ratemonotonicscheduling">Rate Monotonic Scheduling</a></li>
</ol>
</li>
<li>
<ol start="9">
<li><a href="#earliestdeadlinefirstscheduling">Earliest Deadline First Scheduling</a></li>
</ol>
</li>
<li>
<ol start="10">
<li><a href="#proportionalsharescheduling">Proportional Share Scheduling</a></li>
</ol>
</li>
</ul>`,r:{minutes:5.93,words:1778},y:"a",t:"CPU Scheduling(OSC_3)"}}],["/posts/operating-system/osc/OSC_4.html",{loader:()=>u(()=>import("./OSC_4.html-Bjf2KRDw.js"),__vite__mapDeps([113,1])),meta:{d:1706832e6,l:"2024年2月2日",c:["OS"],g:["OS","deadlock","synchronization"],e:`
<h2>The Critical-Section Problem</h2>
<p>There are four sections in the critical section problem:</p>
<ul>
<li>entry section</li>
<li>critical section</li>
<li>exit section</li>
<li>remainder section</li>
</ul>
<div class="language-c" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token keyword">while</span><span class="token punctuation">(</span>true<span class="token punctuation">)</span><span class="token punctuation">{</span>
    entry section
        critical section
    exit section
        remainder section
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.82,words:845},y:"a",t:"process synchronization(OSC_4)"}}],["/posts/operating-system/osc/OSC_5.html",{loader:()=>u(()=>import("./OSC_5.html-CO_kui3l.js"),__vite__mapDeps([114,1])),meta:{d:1706832e6,l:"2024年2月2日",c:["OS"],g:["OS","synchronization","deadlock"],e:`<!-- TOC -->
<ul>
<li><a href="#deadlock">Deadlock</a></li>
<li><a href="#deadlock-handling">Deadlock handling</a>
<ul>
<li><a href="#deadlock-prevention">Deadlock Prevention</a>
<ul>
<li><a href="#mutual-exclusion">mutual exclusion</a></li>
<li><a href="#hold-and-wait">Hold and wait</a></li>
<li><a href="#no-preemption">No preemption</a></li>
<li><a href="#circular-wait">Circular Wait</a></li>
</ul>
</li>
<li><a href="#deadlock-avoidance">Deadlock Avoidance</a>
<ul>
<li><a href="#resource-allocation-graph-algorithm">Resource-Allocation-Graph Algorithm</a></li>
<li><a href="#bankers-algorithm">Banker's Algorithm</a>
<ul>
<li><a href="#safe-state">safe state</a></li>
<li><a href="#bankers-algorithm-1">banker's algorithm</a></li>
</ul>
</li>
</ul>
</li>
<li><a href="#deadlock-detection">Deadlock Detection</a></li>
<li><a href="#recovery-from-deadlock">recovery from deadlock</a></li>
</ul>
</li>
</ul>`,r:{minutes:2.56,words:768},y:"a",t:"Deadlock(OSC_5)"}}],["/posts/operating-system/osc/OSC_6.html",{loader:()=>u(()=>import("./OSC_6.html-JsuWNmi-.js"),__vite__mapDeps([115,1])),meta:{d:17069184e5,l:"2024年2月3日",c:["OS"],g:["OS","memory-management"],e:`<p>Considering I have a good understanding of the basic concepts of OS memory management, in this section I will skip some content.</p>
<h1>Background</h1>
<h2>Basic Hardware</h2>
<p>Early days, we use the physical memory address directly. And we use the <strong>base register</strong> to store the base address of the process, and the <strong>limit register</strong> to store the size of the process.</p>`,r:{minutes:2.83,words:849},y:"a",t:"Memory Management"}}],["/posts/operating-system/osc/OSC_7.html",{loader:()=>u(()=>import("./OSC_7.html-CFNrDfu2.js"),__vite__mapDeps([116,1])),meta:{d:17070048e5,l:"2024年2月4日",c:["OS"],g:["OS","storage-management"],e:`<p>This chaperter is mainly about the storage devices.</p>
<p>I will just skim it with some key points.</p>
<h1>Overview</h1>
<h2>Hard Disk Drives</h2>
<p>HDD is the most common storage device.</p>
<figure><figcaption>Alt text</figcaption></figure>
<p>A picture is enough to explain the structure of HDD.</p>`,r:{minutes:.7,words:211},y:"a",t:"Storage Management"}}],["/posts/operating-system/oslab/6.828-2018-lab1.html",{loader:()=>u(()=>import("./6.828-2018-lab1.html-Ddh7HWqD.js"),__vite__mapDeps([117,1])),meta:{d:17064864e5,l:"2024年1月29日",c:["OS"],g:["operating-system"],e:`
<p>基本环境:</p>
<ul>
<li>ubuntu-22.04.1</li>
<li>GCC-11.4.0</li>
</ul>
<h2>安装推荐版本QUME</h2>
<ul>
<li>安装python2</li>
<li>安装libglib2.0</li>
<li>安装pixman</li>
<li>安装libfdt1</li>
</ul>
<h3>编译QEMU</h3>
<p>遇到编译错误, 使用不存在的reference "minor" 和 "major"
经过网络搜索, 在报错文件中添加<code>sys/sysmacros.h</code>头文件即可, 该头文件中包含的minor和major看起来和设备号什么的有关</p>`,r:{minutes:16.71,words:5014},y:"a",t:"6.828-2018 lab(1)"}}],["/posts/operating-system/oslab/6.828-2018-lab2.html",{loader:()=>u(()=>import("./6.828-2018-lab2.html-C9nWDCh1.js"),__vite__mapDeps([118,1])),meta:{d:17064864e5,l:"2024年1月29日",c:["OS"],g:["operating-system"],e:`
<p>环境没有变化, 通过git更新了项目的依赖文件</p>
<h1>编写前准备</h1>
<p>这一节没有详尽的指导了, 我们需要自己去阅读源码中的注释来查明需要完成的任务</p>
<p>首先我们重新看一下内核代码的section:</p>
<div class="language-c" data-ext="c" data-title="c"><pre class="language-c"><code>Sections<span class="token operator">:</span>
Idx Name          Size      VMA       LMA       File off  Algn
  <span class="token number">0</span> <span class="token punctuation">.</span>text         <span class="token number">00002091</span>  f0100000  <span class="token number">00100000</span>  <span class="token number">00001000</span>  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">4</span>
                  CONTENTS<span class="token punctuation">,</span> ALLOC<span class="token punctuation">,</span> LOAD<span class="token punctuation">,</span> READONLY<span class="token punctuation">,</span> CODE
  <span class="token number">1</span> <span class="token punctuation">.</span>rodata       <span class="token number">0000093</span>c  f01020a0  <span class="token number">001020</span>a0  <span class="token number">000030</span>a0  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">5</span>
                  CONTENTS<span class="token punctuation">,</span> ALLOC<span class="token punctuation">,</span> LOAD<span class="token punctuation">,</span> READONLY<span class="token punctuation">,</span> DATA
  <span class="token number">2</span> <span class="token punctuation">.</span>stab         <span class="token number">000045e5</span>  f01029dc  <span class="token number">001029</span>dc  <span class="token number">000039</span>dc  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">2</span>
                  CONTENTS<span class="token punctuation">,</span> ALLOC<span class="token punctuation">,</span> LOAD<span class="token punctuation">,</span> READONLY<span class="token punctuation">,</span> DATA
  <span class="token number">3</span> <span class="token punctuation">.</span>stabstr      <span class="token number">00001</span>ad3  f0106fc1  <span class="token number">00106f</span>c1  <span class="token number">00007f</span>c1  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">0</span>
                  CONTENTS<span class="token punctuation">,</span> ALLOC<span class="token punctuation">,</span> LOAD<span class="token punctuation">,</span> READONLY<span class="token punctuation">,</span> DATA
  <span class="token number">4</span> <span class="token punctuation">.</span>data         <span class="token number">00009300</span>  f0109000  <span class="token number">00109000</span>  <span class="token number">0000</span>a000  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">12</span>
                  CONTENTS<span class="token punctuation">,</span> ALLOC<span class="token punctuation">,</span> LOAD<span class="token punctuation">,</span> DATA
  <span class="token number">5</span> <span class="token punctuation">.</span>got          <span class="token number">00000008</span>  f0112300  <span class="token number">00112300</span>  <span class="token number">00013300</span>  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">2</span>
                  CONTENTS<span class="token punctuation">,</span> ALLOC<span class="token punctuation">,</span> LOAD<span class="token punctuation">,</span> DATA
  <span class="token number">6</span> <span class="token punctuation">.</span>got<span class="token punctuation">.</span>plt      <span class="token number">0000000</span>c  f0112308  <span class="token number">00112308</span>  <span class="token number">00013308</span>  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">2</span>
                  CONTENTS<span class="token punctuation">,</span> ALLOC<span class="token punctuation">,</span> LOAD<span class="token punctuation">,</span> DATA
  <span class="token number">7</span> <span class="token punctuation">.</span>data<span class="token punctuation">.</span>rel<span class="token punctuation">.</span>local <span class="token number">00001000</span>  f0113000  <span class="token number">00113000</span>  <span class="token number">00014000</span>  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">12</span>
                  CONTENTS<span class="token punctuation">,</span> ALLOC<span class="token punctuation">,</span> LOAD<span class="token punctuation">,</span> DATA
  <span class="token number">8</span> <span class="token punctuation">.</span>data<span class="token punctuation">.</span>rel<span class="token punctuation">.</span>ro<span class="token punctuation">.</span>local <span class="token number">00000060</span>  f0114000  <span class="token number">00114000</span>  <span class="token number">00015000</span>  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">5</span>
                  CONTENTS<span class="token punctuation">,</span> ALLOC<span class="token punctuation">,</span> LOAD<span class="token punctuation">,</span> DATA
  <span class="token number">9</span> <span class="token punctuation">.</span>bss          <span class="token number">00000681</span>  f0114060  <span class="token number">00114060</span>  <span class="token number">00015060</span>  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">5</span>
                  CONTENTS<span class="token punctuation">,</span> ALLOC<span class="token punctuation">,</span> LOAD<span class="token punctuation">,</span> DATA
 <span class="token number">10</span> <span class="token punctuation">.</span>comment      <span class="token number">0000002</span>b  <span class="token number">00000000</span>  <span class="token number">00000000</span>  <span class="token number">000156e1</span>  <span class="token number">2</span><span class="token operator">*</span><span class="token operator">*</span><span class="token number">0</span>
                  CONTENTS<span class="token punctuation">,</span> READONLY
</code></pre></div>`,r:{minutes:10.96,words:3287},y:"a",t:"6.828-2018 lab(2)"}}],["/posts/operating-system/ostep/CH1-2-Memoryspace.html",{loader:()=>u(()=>import("./CH1-2-Memoryspace.html-CJYk39cp.js"),__vite__mapDeps([119,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","内存空间","内存虚拟化","内存地址"],e:`
<ul>
<li>
<p>早期计算机的内存空间
早期计算机只需要运行一个程序，所以内存结构为：</p>
<ul>
<li>头部为操作系统所用的内存</li>
<li>后半部分为单个程序所用的部分</li>
</ul>
</li>
<li>
<p>多程序计算机的内存空间
此时的内存空间如下：</p>
<ul>
<li>操作系统依然占据头部</li>
<li>多个进程占用剩下的部分，并且每个进程有一个区域的划分</li>
<li>会有多出来的区域未被进程使用</li>
</ul>
</li>
<li>
<p>内存地址
为了方便程序员访问内存中指定的地址，我们使用内存地址对内存进行访问，但是值得注意的是，内存地址分为逻辑地址和物理地址，逻辑地址是程序员访问内存的地址，而物理地址是内存中实际的地址，两个地址之间是映射关系，需要通过地址转换来实现，具体的实现细节分页等原理在CSAPP中内存部分提及</p>
</li>
<li>
<p>进程的内存
书上构建了一个简单的模型：</p>
<ul>
<li>进程的内存头部为Progarm code</li>
<li>然后紧跟着是堆（Heap）部分，其大小向下增加（地址变大）</li>
<li>内存底部是栈（Stack）部分，其大小向上增加（地址变小）</li>
</ul>
</li>
<li>
<p>内存虚拟化
为了能让不同的进程拥有独立安全的内存空间，并且能够方便的连续访问，我们对物理内存进行了虚拟化，交由OS进行控制管理
内存虚拟化需要考虑以下的问题：</p>
<ul>
<li>
<p>透明性
透明性的意思是指，进程并不知道自己所用的内存空间是虚拟化的，只需要单独考虑自己空间的使用即可，而操作系统负责将进程认为的“物理地址”转化为真正的物理内存的地址</p>
</li>
<li>
<p>高效性
为了让OS能够在管理查询内存时的高效性，我们会用到一些需要硬件支持的技术，比如TLB等</p>
</li>
<li>
<p>保护性
为了保证进程的安全性，我们需要对进程的内存空间进行保护，比如只读，只写等，以及如何让进程访问内存的权限进行控制</p>
</li>
</ul>
</li>
<li>
<p>进程的内存分类</p>
<ul>
<li>堆（Heap）
堆是进程中动态分配的内存空间</li>
<li>栈（Stack）
栈在程序的编译阶段就已经完成了分配，由编译器来处理分配的大小顺序等
具体的栈的原理在CSAPP中已经详细学过，如果有更多的内容再单独记录</li>
</ul>
</li>
</ul>`,r:{minutes:8.75,words:2625},y:"a",t:"内存空间"}}],["/posts/operating-system/ostep/CH1-CPUSchedualing.html",{loader:()=>u(()=>import("./CH1-CPUSchedualing.html-RS8K0bwL.js"),__vite__mapDeps([120,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","cpu","进程调度"],e:`
<p>在多线程程序广泛使用之前，cpu的调度主要是针对进程间的调度，我们这里讨论的cpu调度方法也主要是针对进程的，关于进程调度和线程调度的区别我们在最后再讨论</p>
<p>我们将根据书上的介绍一步步记录各个调度方式</p>
<h2>FIFO</h2>
<p>FIFO（First In First Out）先进先出调度方式，首先我们有一个队列，先进入的进程先从队头出来，并由cpu进行计算处理，这样的方式就是FIFO，讲究一个先来先做原则</p>
<h2>SJF</h2>
<p>SJF（Shortest Job First）最短作业优先调度方式，当我们的任务同时到达时该怎么做？我们需要先引入一个调度算法的性能指标：<strong>turnaround</strong></p>`,r:{minutes:4.8,words:1440},y:"a",t:"CPU进程调度"}}],["/posts/operating-system/ostep/CH1-MLFQ.html",{loader:()=>u(()=>import("./CH1-MLFQ.html-7SnExESs.js"),__vite__mapDeps([121,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","多级反馈队列","调度算法"],e:`
<p>多级反馈队列正如之前说的一样，有多个队列，不同队列有不同优先级，相应的进程被分配到不同的队列中，高优先级的队列中的进程优先执行，并且一个队列中的进程之间采用之前介绍过的调度算法进行调度</p>
<p>书中采用的是Round Robin调度，所以现在我们有以下规则：</p>
<ul>
<li><strong>rule1</strong>：优先级高的队列中的进程先运行</li>
<li><strong>rule2</strong>：优先级相同的队列中的进程采用Round Robin调度同时进行</li>
</ul>
<p>此外，一个进程的优先级不是固定的，而是动态调整的，OS可以根据进程的历史行为对进程类型进行一定程度的估计，然后根据估计结果调整进程的优先级，这样可以使得进程的优先级更加合理</p>`,r:{minutes:4.03,words:1210},y:"a",t:"多级反馈队列"}}],["/posts/operating-system/ostep/CH1-Segmentation.html",{loader:()=>u(()=>import("./CH1-Segmentation.html-DtKatwlI.js"),__vite__mapDeps([122,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","内存管理","段式内存管理","段式内存"],e:`
<h2>段</h2>
<p>进程的虚拟内存空间是这样的(简化版):</p>
<table>
<thead>
<tr>
<th style="text-align:center">代码段</th>
<th style="text-align:center">堆</th>
<th style="text-align:center">空闲内存</th>
<th style="text-align:center">栈</th>
</tr>
</thead>
</table>
<p>其中的空闲内存不能占用物理内存空间, 所以我们考虑把进程的内存分成<strong>段</strong>(segment), 进程的内存将在物理内存中以段为单位分布</p>`,r:{minutes:1.52,words:457},y:"a",t:"段式内存管理"}}],["/posts/operating-system/ostep/CH1-directExecution.html",{loader:()=>u(()=>import("./CH1-directExecution.html-CwD2exvO.js"),__vite__mapDeps([123,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","直接运行程序","进程","内存"],e:`<p>这一部分主要分为两个主题：</p>
<ul>
<li>如何限制进程对设备的访问更改，又能让进程一定程度上调用设备</li>
<li>如何在多个进程之间切换</li>
</ul>
<h3>Restricted Operations</h3>
<h4>引入权限分层</h4>
<p>为了限制进程对内存或者其他设备的访问、更改等，OS引入了两个不同的模式：</p>
<ul>
<li>user mode</li>
<li>kernel mode</li>
</ul>
<p>在user mode中，程序只能执行有限的指令、访问有限的空间，如果程序试图访问一个非法的内存位置，那么OS将会中断程序</p>`,r:{minutes:5.11,words:1534},y:"a",t:"直接运行程序"}}],["/posts/operating-system/ostep/CH1-free-memory-management.html",{loader:()=>u(()=>import("./CH1-free-memory-management.html-Dr3bm9dO.js"),__vite__mapDeps([124,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","空闲内存","空闲链表","碎片","内存管理","内存分配"],e:`
<p>关于这一段我还是相对熟悉的, 在做数据结构的大作业时选择了一个空闲链表的实现, 这一段的记录也会相对简洁</p>
<h2>内存碎片</h2>
<ul>
<li>内部碎片(internal fragmentation): 内部碎片是由于最小分配的内存块大小大于实际分配大小所导致的内存碎片, 例如, 一个进程需要分配 10 个字节的内存, 但是内存管理器只能分配 16 个字节的内存块, 这样就会产生 6 个字节的内部碎片</li>
<li>外部碎片(external fragmentation): 当我们分配的内存空间不是最小分配单元时, 我们可以通过分割一个内存块来分配需要的内存空间, 而剩下的部分会形成一个新的空闲空间, 被称为外部碎片</li>
</ul>`,r:{minutes:6.17,words:1850},y:"a",t:"空闲内存的管理"}}],["/posts/operating-system/ostep/CH1-memoryTransflate.html",{loader:()=>u(()=>import("./CH1-memoryTransflate.html-CsyD0lUO.js"),__vite__mapDeps([125,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","内存空间","地址翻译"],e:`<p>这一章讲的比较浅显，我会结合CSAPP更详细地记录相关的过程原理</p>
<h3>地址翻译是什么</h3>
<p>地址翻译就是将我们已知的虚拟地址，通过MMU（Memory Management Unit）和CPU的协助转换为物理地址的过程</p>
<h3>需要的专业名词</h3>
<ul>
<li>页（page）：内存中的一个连续的区域，是OS进行内存管理的最小单位</li>
<li>虚拟页（VP）：虚拟内存的一个连续的区域，对应于页</li>
<li>物理页（PP）：类比虚拟页</li>
<li>页表（page table）：一个表，储存在物理内存中，记录了虚拟页到物理页的映射关系</li>
<li>页表条目（PTE）：页表中的一项，记录了虚拟页到物理页的映射关系</li>
<li>基址寄存器（base register）：存储的进程起始地址</li>
</ul>`,r:{minutes:1.93,words:578},y:"a",t:"地址翻译"}}],["/posts/operating-system/ostep/CH1-paging.html",{loader:()=>u(()=>import("./CH1-paging.html-BIRTIMCj.js"),__vite__mapDeps([126,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","分页"],e:`
<p>之前我们已经对分页有了一个大概的概念, 现在我们详细描述一下分页过程以及中间产生的一些问题:</p>
<h2>分页储存下的地址翻译</h2>
<p>我们在地址翻译的相关内容中已经描述了分页时的地址翻译过程:</p>
<ul>
<li>查询页表, 获取物理地址</li>
<li>查询物理地址, 获取数据</li>
</ul>
<p>其中, 页表是储存在物理内存中由操作系统管理的 (书中说操作系统能够对自身进行虚拟化, 所以页表实际上也要经过从虚拟地址到物理地址的转换), 所以这个地方需要查询两次物理内存才能的到最后要得到的数据</p>
<p>这个过程会花耗大量的时间, 所以OS引入了一个硬件来加速这个过程, 我们称之为TLB(Translation Lookaside Buffer), 也就是翻译旁路缓冲器, 其本质就是一个缓存机制而已, 通过将频繁查询的PTE储存在一个高速缓存中, 供MMU快速查询数据的物理地址</p>`,r:{minutes:8.69,words:2606},y:"a",t:"分页"}}],["/posts/operating-system/ostep/CH1-processAPI.html",{loader:()=>u(()=>import("./CH1-processAPI.html-qAgdEnFv.js"),__vite__mapDeps([127,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","进程","API","UNIX"],e:`<p>这一段被作为间章，介绍了几种UNIX系统使用的进程相关的系统调用</p>
<hr>
<h3>fork()</h3>
<p>首先我们有一段使用 <code>fork()</code>函数的代码：</p>
<div class="language-c" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h&gt;</span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"hello world (pid:%d)\\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> rc <span class="token operator">=</span> <span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>rc <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// fork failed</span>
        <span class="token function">fprintf</span><span class="token punctuation">(</span><span class="token constant">stderr</span><span class="token punctuation">,</span> <span class="token string">"fork failed\\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">exit</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>rc <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// child (new process)</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"hello, I am child (pid:%d)\\n"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        <span class="token comment">// parent goes down this path (main)ss</span>
        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"hello, I am parent of %d (pid:%d)\\n"</span><span class="token punctuation">,</span>
               rc<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">getpid</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:5.72,words:1715},y:"a",t:"进程的API"}}],["/posts/operating-system/ostep/CH1-processes.html",{loader:()=>u(()=>import("./CH1-processes.html-DHyizy9I.js"),__vite__mapDeps([128,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","进程","Virtualization","上下文切换"],e:`<p>第一章第一节是进程相关内容，我们在CSAPP中已有过些许了解
另外本文是我学习的记录，具有局部性，其中的描述并不一定正确完整，只是跟随书的思路把关键点记录下来</p>
<h2>进程</h2>
<p>进程就是一个运行的程序，而现在我们希望计算机能够同时运行多个程序，我们希望计算机在运行浏览器时播放音乐等等，所以我们需要之前提及的CPU虚拟化技术</p>
<p>也就是说，我们在进程之间不停地切换，来制造程序同时运行的假象，这样做当然会降低每个进程的平均速度，产生更大的性能消耗
为了实现CPU虚拟化，我们需要从底层机制和高级机制两个方面来考虑：</p>
<ul>
<li>底层机制包括上下文切换（context switching），通过这种机制来实现进程的切换，并且保证切换回原进程后能够以之前的状态继续运行</li>
<li>高级机制是OS对底层机制的智能操作，举个例子：OS需要一种策略来判断一个时刻执行哪个进程才是更高效的选择，通过记录进程的历史信息、进程类型等信息来对进程进行评估，并决定切换到哪个进程</li>
</ul>`,r:{minutes:5.06,words:1519},y:"a",t:"进程"}}],["/posts/operating-system/ostep/CH1-proportionalShare.html",{loader:()=>u(()=>import("./CH1-proportionalShare.html-xQmwVUJi.js"),__vite__mapDeps([129,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统","分比例调度","彩票调度","Stride Scheduling"],e:`
<p>分比例调度就是每个进程都获得一个比例，所占比例越大的进程越容易被调度运行</p>
<h2>Lottery Scheduling（彩票调度）</h2>
<p>Lottery调度的关键在于票据（tickets）,每个进程被分配了一定数量的票据，然后我们利用随机数，随机抽取一张票，拥有这个ticket的进程就能被调度运行，按照概率论（probability theory）的理论，当随机次数足够多时，每个进程被调度的概率接近于其tickets数量所占的比例</p>
<p>具体实现方式如下：</p>
<ul>
<li>首先我们用一个链表，每个节点上储存的是每个进程的进程信息，其中包括了进程的tickets数量</li>
<li>然后我们利用生成器随机生成一个票数以内的数字</li>
<li>接着我们遍历链表，将每个进程的tickets数量加起来，当加起来的数量大于随机生成的数字时，就确定了这个进程被调度运行</li>
</ul>`,r:{minutes:6.54,words:1961},y:"a",t:"分比例调度"}}],["/posts/operating-system/ostep/CH1-realVM.html",{loader:()=>u(()=>import("./CH1-realVM.html-BdX3o1Q5.js"),__vite__mapDeps([130,1])),meta:{d:167832e7,l:"2023年3月9日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","Three-Easy-Pieces","linux","VAX/VMS"],e:`<p>这一章讲了在VAX/VMS和Linux中的真实虚拟化机制, 关于Linux的详细机制我们后续还有更多值得学习的东西, 我们在这里只记录其中使用的一些优化机制</p>
<h1>VAX/VMS</h1>
<p>由于VAX/VMS系统的页大小过小, 导致page table过大, 所以为了减小PT的大小, VAX/VMS采用了以下的机制:</p>
<h2>使用段机制</h2>
<p>段机制在之前说过了, 为了减少页表大小, 通过段页式内存管理来实现</p>
<h2>系统区域</h2>
<p>每个进程有三个区域(段), 分别是<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">P_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">P_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, <span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">S_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>, 前两个区域分别是代码段+栈和堆, PT映射到进程对应的物理内存区域, 而<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">S_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>区域是系统区域, 存放了OS的代码和数据, 包括Trap Table等内核态需要的数据, 这个区域是所有进程共享的, 映射到同一片物理内存之中</p>`,r:{minutes:6.13,words:1840},y:"a",t:"两个OS中的真实虚拟化机制"}}],["/posts/operating-system/ostep/CH2-Concurrency-datastruct.html",{loader:()=>u(()=>import("./CH2-Concurrency-datastruct.html-CNbT_iy5.js"),__vite__mapDeps([131,1])),meta:{d:1712936892e3,c:["操作系统"],g:["operating-system","concurrency","data-structure"],e:`
<h2>多线程计数器(counter)</h2>
<p>我们在之前的例子中我们有多线程计数器的实现, 只需要在对变量累加前后加上锁即可</p>
<p>但是加锁和解锁的操作对这个简单的加数来说, 造成了很大的额外开销, 即便在多线程的摊销下所花的时间并没有增加</p>
<p>为此有一种 <strong>approximate counter(近似计数器)</strong> 的方法:</p>
<p>每个cpu都有一个计数器, 每个线程在各自的cpu上计数, 每过一段时间就会把自己的计数器的值加到一个全局共享的计数器上, 然后把自己的计数器清空, 如果想要在这个过程中读取计数器的值, 就需要将所有的计数器累加起来, 不过cpu在各自的局部计数器上不需要频繁的加锁解锁了, 只需要在累加到全局计数器的时候加锁即可</p>`,r:{minutes:1.57,words:470},y:"a",t:"多线程数据结构"}}],["/posts/operating-system/ostep/CH2-Concurrency.html",{loader:()=>u(()=>import("./CH2-Concurrency.html-C9cm60WS.js"),__vite__mapDeps([132,1])),meta:{d:16785792e5,l:"2023年3月12日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","concurrency"],e:`
<p>我们在之前对进程有了一个相对详细的介绍, 接下来要介绍的是线程和并发</p>
<p>现在假设这么一个场景, 我们有一个程序正在运行, 然后它产生了一个中断, 并且调用了IO操作
如果按照之前的想法, 我们的进程将会堵塞, 然后OS会切换到另一个进程, 但是如果我们不想要切换到其它进程 (没有其他进程或者该进程需要快速完成), 我们就该在进程执行IO的时候, 做一些其他的不需要IO的工作</p>
<p>如何在一个进程中安排这些工作, 使得它们能够并发执行呢?</p>
<p>我们引入了<strong>线程(thread)</strong> 的概念, 线程可以认为是进程的一个子任务, 一个进程可以有多个线程, 所有的线程共享进程的内存空间</p>`,r:{minutes:11.85,words:3555},y:"a",t:"多线程并发"}}],["/posts/operating-system/ostep/CH2-Condition-Varible.html",{loader:()=>u(()=>import("./CH2-Condition-Varible.html-DV4tBmX4.js"),__vite__mapDeps([133,1])),meta:{d:1684368e6,l:"2023年5月18日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","concurrency"],e:`
<p>在介绍条件变量前, 我们先来对多线程的资源共享问题做一个形象化的解释:</p>
<p>每一个线程就是一个工人, 每个资源就是一个加工产品, 当一个工人对一个产品进行加工时, 其他工人是不能对其进行加工的, 所以需要所谓<strong>锁</strong>来告诉其他线程: "这个资源正在被使用"</p>
<p>这个需要锁住的资源不一定是某个文件, 而是critical section(临界区)</p>
<p>于是互斥锁为我们实现了这个功能</p>
<p>现在我们要考虑的新问题是:</p>
<p><code>如果这个产品的加工必须按照某个顺序进行, 应该如何实现?</code></p>
<p>这个时候我们就要用到条件变量了</p>`,r:{minutes:1.9,words:569},y:"a",t:"Condition Varible"}}],["/posts/operating-system/ostep/CH2-Samephore.html",{loader:()=>u(()=>import("./CH2-Samephore.html-DDpF3-jJ.js"),__vite__mapDeps([134,1])),meta:{d:1684368e6,l:"2023年5月18日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","concurrency"],e:`<p>信号量是我最喜欢的计算机科学家之一: Edsger Dijkstra 发明的一种同步机制, 用于解决多线程的同步问题</p>
<hr>
<p>信号量可以看作互斥锁的超集, 互斥锁只有两种状态: 锁住和未锁住, 而信号量可以有多种状态, 用于解决更复杂的同步问题</p>
<h2>信号量的定义</h2>
<p>我们实现互斥锁时, 用一个变量储存0或1来表示锁的状态, 当锁为0时则说明锁住了</p>
<p>而信号量在此基础上, 可以有0, 1, 2, 3, ...等多种状态, 每当一个线程获取锁时, 信号量的值减一, 当信号量的值为0 (或小于0) 时, 说明锁住了, 此时其他线程获取锁时, 会阻塞</p>`,r:{minutes:1.94,words:582},y:"a",t:"信号量"}}],["/posts/operating-system/ostep/CH2-some-error.html",{loader:()=>u(()=>import("./CH2-some-error.html-DrtcOfjd.js"),__vite__mapDeps([135,1])),meta:{d:1684368e6,l:"2023年5月18日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","concurrency"],e:`<p>OSTEP上将多线程错误主要分为两类, 一类是死锁错误, 一类是非死锁错误</p>
<h2>死锁错误</h2>
<p>死锁错误在多线程错误中占据了大多数</p>
<p>引发死锁需要同时满足以下四个条件:</p>
<ul>
<li>线程之间互斥访问资源</li>
<li>线程在访问资源时, 自己拥有其他资源</li>
<li>线程拥有的资源不能被强制剥夺</li>
<li>线程需要的资源是满足以上三个条件的线程已经拥有的资源</li>
</ul>
<p>也就是说, 只要解决以上四个条件之一都无法发生死锁错误</p>
<p>一般而言, 线程之间互斥是必须的, 我们可以从其他三个条件入手</p>`,r:{minutes:2.04,words:612},y:"a",t:"一些常见的多线程错误"}}],["/posts/operating-system/ostep/CH3-fileSystem.html",{loader:()=>u(()=>import("./CH3-fileSystem.html-CmSwA-_C.js"),__vite__mapDeps([136,1])),meta:{d:16846272e5,l:"2023年5月21日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","concurrency"],e:`<p>文件系统中的主要要素在一篇Linux的文件指令中已经提及差不多了, 主要就是<code>inode</code>的查询和维护, <code>block</code>的分配和对应</p>
<p>下面主要介绍一些文件系统中会用到的实现方案</p>
<hr>
<h1>一个简单的文件系统结构</h1>
<table>
<thead>
<tr>
<th style="text-align:center">bitmap</th>
<th style="text-align:center">inode</th>
<th style="text-align:center">data</th>
</tr>
</thead>
</table>`,r:{minutes:7.31,words:2194},y:"a",t:"文件系统的实现"}}],["/posts/operating-system/ostep/CH3-linuxFileCommand.html",{loader:()=>u(()=>import("./CH3-linuxFileCommand.html-BuGOq6Js.js"),__vite__mapDeps([137,1])),meta:{d:16845408e5,l:"2023年5月20日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","file-system"],e:`
<ul>
<li>文件</li>
<li>文件夹</li>
<li>软连接</li>
</ul>
<p>我们可以通过stat命令查看文件的详细信息</p>
<div class="language-bash" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">stat</span> calc
  File: calc
  Size: <span class="token number">4096</span>            Blocks: <span class="token number">0</span>          IO Block: <span class="token number">4096</span>   directory
Device: 50h/80d Inode: <span class="token number">14918173766102459</span>  Links: <span class="token number">1</span>
Access: <span class="token punctuation">(</span>0777/drwxrwxrwx<span class="token punctuation">)</span>  Uid: <span class="token punctuation">(</span> <span class="token number">1000</span>/   dnull<span class="token punctuation">)</span>   Gid: <span class="token punctuation">(</span> <span class="token number">1000</span>/   dnull<span class="token punctuation">)</span>
Access: <span class="token number">2023</span>-05-20 <span class="token number">13</span>:08:53.499645400 +0800
Modify: <span class="token number">2023</span>-05-03 <span class="token number">20</span>:31:58.232250800 +0800
Change: <span class="token number">2023</span>-05-03 <span class="token number">20</span>:31:58.232250800 +0800
 Birth: -
</code></pre></div>`,r:{minutes:7.59,words:2278},y:"a",t:"Linux文件命令"}}],["/posts/operating-system/ostep/OSC_1.html",{loader:()=>u(()=>import("./OSC_1.html-ByeQdUQn.js"),__vite__mapDeps([138,1])),meta:{d:16945632e5,l:"2023年9月13日",c:["操作系统"],g:["operating-system","OS"],e:`<p>本文结合之前哦ostep的知识, 和Operating System Concepts PART ONE的阅读, 对OS的整体做一个概括性的总结整理</p>
<h1>操作系统</h1>
<h2>Architecture</h2>
<p>首先我们明确一下OS在计算机中扮演的角色: 计算机是用户和硬件之间的中间层, 目的是简化用户和硬件的交互过程</p>
<p>由于本文目的主要是剖析整个操作系统的架构, 设计原则和目的, 所以我们先总览一下操作系统的一般架构</p>
<h2>servive</h2>
<p>指导架构的原则使服务的需求, 一个操作系统需要提供以下服务:</p>
<h3>for user</h3>`,r:{minutes:3.47,words:1042},y:"a",t:"os-learning-overview"}}],["/posts/operating-system/ostep/leading-chapter.html",{loader:()=>u(()=>import("./leading-chapter.html-BgTqNPxx.js"),__vite__mapDeps([139,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["操作系统","Three-Easy-Pieces"],g:["operating-system","计算机系统"],e:`<p>The document I am learning is <em>Operating Systems: Three Easy Pieces</em>, and there is the address <a href="https://pages.cs.wisc.edu/~remzi/OSTEP/" target="_blank" rel="noopener noreferrer">https://pages.cs.wisc.edu/~remzi/OSTEP/</a>.</p>
<p>This is a online free ebook, and someone recommended it to me.</p>`,r:{minutes:4.98,words:1494},y:"a",t:"Operating System Chapter 1"}}],["/posts/program-language/CPP-notes/CPPofCPP.html",{loader:()=>u(()=>import("./CPPofCPP.html-9crtCfGo.js"),__vite__mapDeps([140,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++","面向对象"],e:`<p>记录点碎片就好了</p>
<!-- more --->
<h3>拷贝构造函数</h3>
<p>拷贝构造函数传递的参数必须为引用</p>
<p>如果是传参，在使用初始化时，会需要接受一个对象初始化一个新对象，其中间过程就需要把对象拷贝一次，而拷贝又需要再拷贝，就会导致一个无限循环</p>
<p><strong>在函数返回、参数传递的过程中都有对象的拷贝</strong></p>
<h3>析构函数</h3>
<p>析构函数在对象销毁之前调用，此时对象还没有销毁，对象的销毁发生在隐含的析构阶段</p>
<h3>三五原则</h3>
<ul>
<li>如果一个类需要一个析构函数，那么往往需要构造和拷贝函数</li>
<li>如果一个类需要拷贝函数，往往需要拷贝赋值运算符</li>
</ul>`,r:{minutes:6.6,words:1980},y:"a",t:"C++面向对象相关的碎片知识"}}],["/posts/program-language/CPP-notes/DynamicMemery.html",{loader:()=>u(()=>import("./DynamicMemery.html-kEd4B9on.js"),__vite__mapDeps([141,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++","动态内存","智能指针","浅拷贝","深拷贝"],e:`<p>关于C++Primer的学习只是补充我所缺少的碎片化知识，而不是系统化的整理或者项目记录什么的</p>
<h2>智能指针</h2>
<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">auto</span> ptr_1 <span class="token operator">=</span> <span class="token generic-function"><span class="token function">make_shared</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    shared_ptr<span class="token operator">&lt;</span><span class="token keyword">int</span><span class="token operator">&gt;</span> <span class="token function">ptr</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//use inner "new" to initial a ptr</span>

    cout <span class="token operator">&lt;&lt;</span> <span class="token operator">*</span>ptr_1 <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:4.31,words:1292},y:"a",t:"C++的动态内存和智能指针"}}],["/posts/program-language/CPP-notes/IOfile.html",{loader:()=>u(()=>import("./IOfile.html-BQSOmup5.js"),__vite__mapDeps([142,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++","文件操作","IO","文件"],e:`<h3>几种C++中对文件操作的方式</h3>
<!-- more --->
<p>C++包含了三种类对文件进行读写：</p>
<ul>
<li>ifstream</li>
<li>ofstream</li>
<li>fstream</li>
</ul>
<p>其中前两个都是<code>fstream</code>的子类</p>
<h3>open()</h3>
<p>成员函数<code>open(name,mode,access)</code>包含三个参数:</p>
<ul>
<li>name包含文件路径</li>
<li>mode包含打开方式，预制参数包含<code>ios::in</code> <code>ios::out</code> <code>ios::app</code></li>
<li>属性取值包括：
<ul>
<li>0——普通文件，打开访问</li>
<li>1——只读文件</li>
<li>2——隐含文件</li>
<li>4——系统文件</li>
</ul>
</li>
</ul>`,r:{minutes:.68,words:203},y:"a",t:"C++的文件操作"}}],["/posts/program-language/CPP-notes/Lambda.html",{loader:()=>u(()=>import("./Lambda.html-BhYDQ_H6.js"),__vite__mapDeps([143,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++","Lambda表达式","面向对象"],e:`<p>Lambda表达式真的是我从来没有接触过的一类语法，于C++11中补充</p>
<!-- more --->
<h2>Lambda表达式</h2>
<p>C++中存在一类可调用对象，可以通过调用运算符 <code>()</code>来进行调用<br>
函数就是一种最常见的可调用对象</p>
<p>有时候我们编写函数时会遇到这么一种情况：</p>
<p>我需要在一个函数中调用另一个函数实现具体的功能，调用的函数需要使用到父函数的局部变量，此时如果我把这个变量作为参数传递过去就使得函数的原型过于冗杂了，而我又不可能为了一个函数的变量使用而去定义一个全局变量，此时，我们可以使用Lambda表达式来优化代码</p>`,r:{minutes:3.72,words:1115},y:"a",t:"C++的Lambda表达式"}}],["/posts/program-language/CPP-notes/OPPofCPP.html",{loader:()=>u(()=>import("./OPPofCPP.html-BdSluQEt.js"),__vite__mapDeps([144,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++","C++学习记录"],e:`<p>与OPP有关的碎片知识记录</p>
<!-- more --->
<h2>类内外定义函数</h2>
<ul>
<li>类的内部定义的函数隐式地定义为内联函数(inline)</li>
<li>类地外部定义地函数没啥特别</li>
</ul>
<h2>默认构造函数</h2>
<ul>
<li>
<p>可以给构造函数赋值为<code>default</code>，代表默认构造函数<br>
顺带一提，默认构造函数的合成是编译器完成的工作，当不存在构造函数时，编译器会帮你生成默认构造函数
<code>Person() = default;</code></p>
</li>
<li>
<p>存在任意一个构造函数后，则取消默认构造函数</p>
</li>
<li>
</li>
</ul>`,r:{minutes:6.09,words:1826},y:"a",t:"C++中的类的一些碎片知识"}}],["/posts/program-language/CPP-notes/SomeOfCPP.html",{loader:()=>u(()=>import("./SomeOfCPP.html-C0rn5bPO.js"),__vite__mapDeps([145,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++"],e:`<p>一些不便于归结到系统知识中的碎片知识。</p>
<!-- more --->
<h2>顶层const和底层const的区别</h2>
<p>具体内容略过，但是和接下来几个修饰符有关。</p>
<h2>constexpr修饰符</h2>
<ul>
<li>
<p>加上此修饰符后，认为此变量为常量表达式，在编译阶段即可计算出结果，并且作为常量使用。因此要求右值也是常量表达式。</p>
</li>
<li>
<h3>constexpr函数</h3>
<p>返回值类型为字面值，要求函数有且只有一个<code>return</code>并且</p>
</li>
<li>
<h3>constexpr和const</h3>
<p><code>constexpr</code>是字面值常量，在编译阶段计算出结果而不能改变，要求其表达式也能在编译阶段计算出结果<br>
<code>const</code>是标记一个对象为只读，其定义可以在任何时刻</p>
</li>
</ul>`,r:{minutes:7.17,words:2151},y:"a",t:"C++中的一些碎片知识"}}],["/posts/program-language/CPP-notes/SomeOfContainer.html",{loader:()=>u(()=>import("./SomeOfContainer.html-BSa66Pyl.js"),__vite__mapDeps([146,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++","容器","STL","顺序容器","关联容器","无序容器"],e:`<p>容器的使用很频繁，只补充一些碎片化的知识</p>
<!-- more --->
<p>容器分为顺序容器、关联容器、无序容器
同一类型的容器具有一些相同的操作，这方便于我们进行记忆</p>
<h2>顺序容器</h2>
<ul>
<li><code>vector</code></li>
<li><code>deque</code></li>
<li><code>list</code></li>
<li><code>forword_list</code></li>
<li><code>array</code></li>
<li><code>string</code></li>
</ul>
<h3>迭代器</h3>`,r:{minutes:4.87,words:1461},y:"a",t:"C++的容器的碎片知识"}}],["/posts/program-language/CPP-notes/SomeOfoi.html",{loader:()=>u(()=>import("./SomeOfoi.html-DG5SqRFT.js"),__vite__mapDeps([147,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++","OI"],e:`<p>关于标准库，大概远不止我们常用的那些容器，C++中还有很多的类值得深究<br>
本文只是记录学习（复习）过程中的碎片化知识，不是系统性知识整理</p>
<!-- more --->
<h2>wchar_t</h2>
<p>字符类型，一种扩展储存方式，一般用于储存Unicode字符</p>
<h2>istream,ostream,iostream</h2>
<p>三种流的控制类，<code>cin</code>，<code>cout</code>，<code>cerr</code>等都是其对象</p>
<h2>ifstream,ofstream,fstream</h2>
<p>文件的读写流</p>`,r:{minutes:2.83,words:849},y:"a",t:"C++的OI对象的碎片知识"}}],["/posts/program-language/CPP-notes/heritedOfCpp.html",{loader:()=>u(()=>import("./heritedOfCpp.html-DBuefuUe.js"),__vite__mapDeps([148,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++","继承","面向对象"],e:`<p>碎片化记录依旧</p>
<!-- more --->
<h3>基类的静态成员在派生类中也共享一个</h3>
<h3>派生类的声明不包含基类列表</h3>
<h3>基类必须是定义了的类，不能只有声明</h3>
<ul>
<li>直接基类</li>
<li>间接基类</li>
</ul>
<h3>final关键字</h3>
<p><code>class A final{};</code></p>
<p>这样的类无法作为基类被继承</p>
<h3>几种类型转换规则</h3>
<ul>
<li>普通类型可以向 <code>const</code>和引用类型转换</li>
<li>引用类型可以向 <code>const</code> 转换，但是 <code>const</code> 不能向引用转换<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> <span class="token operator">&amp;</span> b <span class="token operator">=</span> d<span class="token punctuation">;</span>
<span class="token keyword">const</span> <span class="token keyword">int</span> a <span class="token operator">=</span> b<span class="token punctuation">;</span><span class="token comment">//right</span>

<span class="token keyword">int</span> <span class="token operator">&amp;</span> e <span class="token operator">=</span> a<span class="token punctuation">;</span><span class="token comment">//error</span>
</code></pre></div></li>
<li>基类无法向派生类转换</li>
<li>基类和派生类对象间直接转换<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">class</span> <span class="token class-name">A</span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
   <span class="token keyword">int</span> a<span class="token punctuation">;</span>
   <span class="token function">A</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> a <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">B</span> <span class="token operator">:</span> <span class="token base-clause"><span class="token keyword">public</span> <span class="token class-name">A</span></span>
<span class="token punctuation">{</span>
<span class="token keyword">public</span><span class="token operator">:</span>
   <span class="token keyword">int</span> b<span class="token punctuation">;</span>
   <span class="token function">B</span><span class="token punctuation">(</span><span class="token punctuation">)</span> 
   <span class="token punctuation">{</span>
       b <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
   B b<span class="token punctuation">;</span>
   A a <span class="token operator">=</span> b<span class="token punctuation">;</span><span class="token comment">//members in b has been cut off to construct an "A" object</span>

   A<span class="token operator">*</span> ptr <span class="token operator">=</span> b<span class="token punctuation">;</span><span class="token comment">//this way, we can deal "b" as an "A"</span>
             <span class="token comment">//class without changing "b" itself</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
</ul>`,r:{minutes:6.48,words:1943},y:"a",t:"C++的继承"}}],["/posts/program-language/CPP-notes/overloadAssignment.html",{loader:()=>u(()=>import("./overloadAssignment.html-B2t992ZT.js"),__vite__mapDeps([149,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++"],e:`<p>关于一些重载运算符和类型转换的内容</p>
<!-- more --->
<ul>
<li>重载运算符约定：重载运算符必须是类成员函数，或者参数列表至少含有一个类类型</li>
<li>递增递减函数添加一个 <code>int</code>实参，表示后置运算符</li>
<li>输入输出运算符要注意流对象状态的控制</li>
<li>函数对象——可调用的类对象</li>
<li>lambda表达式也是一种函数对象，捕获的变量作为成员变量传入，不含默认构造函数析构函数，默认拷贝控制函数由捕获的数据成员决定</li>
</ul>
<h3>标准库定义的函数对象</h3>
<p>首先，这些函数对象都会执行对应的运算符操作</p>`,r:{minutes:2.87,words:862},y:"a",t:"C++的重载运算符"}}],["/posts/program-language/CPP-notes/preCompleteCMD.html",{loader:()=>u(()=>import("./preCompleteCMD.html-BB0aJnMm.js"),__vite__mapDeps([150,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++","预处理指令","预处理宏"],e:`<p>挺庞大的一节内容，所以整理为一篇博客<br>
注意：记录的是笔者学习中产生的碎片化知识，而不是系统性的整理</p>
<!-- more --->
<h2>#define宏定义</h2>
<ul>
<li>用于预处理阶段替换源码，增加代码可读性<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">ll</span> <span class="token expression"><span class="token keyword">long</span> <span class="token keyword">long</span></span></span>
<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ll a <span class="token operator">=</span> <span class="token number">123</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div></li>
</ul>`,r:{minutes:1.24,words:373},y:"a",t:"C++中的预处理指令"}}],["/posts/program-language/CPP-notes/template.html",{loader:()=>u(()=>import("./template.html-DAtC3nr-.js"),__vite__mapDeps([151,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C++学习记录"],g:["C++","模板","编译","分布式编译"],e:`<p>关于模板的相关内容，但事实上这部分的内容会比较简单</p>
<!-- more --->
<h3>模板不支持分布式编译</h3>
<p>由于模板是在实例化出其中一个版本的对象时才会编译对应的类，所以通过头文件连接不同的源文件时，其他源文件中的模板不能直接在另一个源文件中使用，因为没有创建实例</p>
<ul>
<li>
<p>类模板的成员函数在使用时才会实例化，所以就算是创造类模板的对象，也不能正常使用分布式编译。此外，这一特性使得类模板对象可以正常创建，但是对应的成员函数可能无法正常调用</p>
</li>
<li>
<p>类模板内的代码可以省略对应类的模板参数，直接使用模板名：</p>
</li>
<li>
<p>如果类模板包含一个友元成员，则友元成员可以访问所有模板的实例；</p>
</li>
</ul>`,r:{minutes:5.38,words:1614},y:"a",t:"C++的模板"}}],["/posts/program-language/Csharp/Array.html",{loader:()=>u(()=>import("./Array.html-BtV2oCe-.js"),__vite__mapDeps([152,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C#学习记录"],g:["c#","数组"],e:`
<p>C++</p>
<ul>
<li>阵，是一个数集</li>
</ul>
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">,</span><span class="token punctuation">,</span><span class="token punctuation">]</span></span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
                <span class="token punctuation">{</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">;</span><span class="token comment">//此时的a的行列在定义时就决定了</span>
</code></pre></div>`,r:{minutes:.5,words:149},y:"a",t:"c#中的数组"}}],["/posts/program-language/Csharp/NullableTypeModifier.html",{loader:()=>u(()=>import("./NullableTypeModifier.html-BzeG4nkq.js"),__vite__mapDeps([153,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C#学习记录"],g:["语法","特性","c#"],e:`<p>在我有限的代码经验里还没有见识过<strong>可空类型修饰符</strong><br>
但是直觉告诉我：它一定很重要</p>
`,r:{minutes:.52,words:156},y:"a",t:"C#中的可空类型修饰符"}}],["/posts/program-language/Csharp/SomeofCsharp.html",{loader:()=>u(()=>import("./SomeofCsharp.html-DnOsymQD.js"),__vite__mapDeps([154,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C#学习记录"],g:["c#"],e:`
<div class="language-csharp" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span></span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name"><span class="token keyword">int</span></span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    a<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">forezch</span><span class="token punctuation">(</span><span class="token class-name"><span class="token keyword">int</span></span> element <span class="token keyword">in</span> a<span class="token punctuation">)</span><span class="token punctuation">{</span>
    Console<span class="token punctuation">.</span><span class="token function">Writeline</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:1.03,words:308},y:"a",t:"c#的一些碎片"}}],["/posts/program-language/Csharp/TwoKingofConversion.html",{loader:()=>u(()=>import("./TwoKingofConversion.html-BBp8xLDV.js"),__vite__mapDeps([155,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["C#学习记录"],g:["语法","特性","c#"],e:`
<h2>隐性转换</h2>
<ul>
<li>换，即小容量转化为大容量，子类转化为父类</li>
</ul>
`,r:{minutes:.57,words:170},y:"a",t:"C#的显性和隐性转换"}}],["/posts/program-language/golang-basic/basic-1.html",{loader:()=>u(()=>import("./basic-1.html-Ci4wcdsM.js"),__vite__mapDeps([156,1])),meta:{d:16902432e5,l:"2023年7月25日",c:["golang"],g:["golang","编程语言"],e:`
<h2>并发比较二叉树元素是否相同</h2>
<h3>题目描述</h3>
<p>这道题中我们使用<code>tree.New(x)</code>来生成一个有十个元素<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mn>2</mn><mi>x</mi><mo separator="true">,</mo><mn>3</mn><mi>x</mi><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mn>10</mn><mi>x</mi></mrow><annotation encoding="application/x-tex">x, 2x, 3x, ..., 10x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">...</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">10</span><span class="mord mathnormal">x</span></span></span></span>的具有随机结构的二叉树, 我们需要实现<code>Walk</code>函数来遍历一个二叉树, 并通过<code>Same</code>函数来比较两个二叉树是否相同, 我们使用Go语言的并发特性和<code>channel</code>来实现这个功能</p>`,r:{minutes:2.54,words:763},y:"a",t:"Golang基础练习"}}],["/posts/program-language/golang-basic/projectManage.html",{loader:()=>u(()=>import("./projectManage.html-C7NenY2f.js"),__vite__mapDeps([157,1])),meta:{d:1690416e6,l:"2023年7月27日",c:["golang"],g:["golang","编程语言"],e:`<p>本文只是个人学习的知识整理和记录, 不含有教程性质, 仅供参考</p>
<h1>Golang的项目管理基础</h1>
<p>[toc]</p>
<p>这里要讨论的内容主要包括:</p>
<ul>
<li>golang的依赖管理</li>
<li>golang的模块</li>
<li>golang的package</li>
<li>golang的workspace</li>
</ul>
<p>我们层层递进介绍每一个级别的管理在做什么</p>
<h2>文件</h2>
<p>golang的源码文件格式为<code>xxx.go</code>, 每个文件都必须归属于一个package, 这个package我们在程序的第一行声明, 例如:</p>`,r:{minutes:2.6,words:781},y:"a",t:"Golang的项目管理基础"}}],["/posts/program-language/rust-basic/rust_basic_231027.html",{loader:()=>u(()=>import("./rust_basic_231027.html-CV4ambsj.js"),__vite__mapDeps([158,1])),meta:{d:16983648e5,l:"2023年10月27日",c:["rust"],g:["rust","language","basic"],e:`
<p>关于rust的基础部分花耗了五天左右的时间, 关于rust的类型检查和所有权花费了不少时间, 反倒是生命周期这个被认为最特色的部分没有遇到太多麻烦的问题, 很多情况下都可以直接通过消除规则来跳过生命周期的编写.</p>
<p>总之, 我会梳理一些学习过程中的感受和总结.</p>
<hr>
<p>我将rust中个人认为区别于其他语言的四个部分列出来:</p>
<ul>
<li>所有权</li>
<li>生命周期</li>
<li>模式匹配</li>
<li>泛型与特征</li>
</ul>
<p>在此只是简单记录一下学习这四个部分的内容, 要熟悉这个语言只靠这一个项目是不足的, 大部分的实现代码中都直接使用了unsafe代码, 使得所有权和生命周期并没有太多的考虑.</p>`,r:{minutes:5.56,words:1668},y:"a",t:"Rust Basic learning"}}],["/posts/algorithm/oi/learning-note/BST.html",{loader:()=>u(()=>import("./BST.html-D4Pn7gAG.js"),__vite__mapDeps([159,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["平衡树","二叉查找树"],e:`<p>平衡树算是比较进阶一点的数据结构，这里只是对学习简单平衡树的记录</p>
<!-- more --->
<h2>BST——二叉查找树</h2>
<p>书上说，二叉树最重要的两种数据结构的性质有两种：堆性质 和 BST性质</p>
<p>二叉查找树满足以下性质：</p>
<ul>
<li>每个节点都有一个关键值</li>
<li>每个节点的关键值大于其左子节点的关键值</li>
<li>每个节点的关键值小于其右子节点的关键值</li>
</ul>
<p>由于每个节点是顺序插入的，所以我们容易知道，一个节点的左子树的所有节点一定小于该节点，右子树的所有节点一定大于该节点</p>
<h4>后继</h4>`,r:{minutes:4.23,words:1270},y:"a",t:"平衡树初步——Treap"}}],["/posts/algorithm/oi/learning-note/CutPointAndEdge.html",{loader:()=>u(()=>import("./CutPointAndEdge.html-DvxNfIn2.js"),__vite__mapDeps([160,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["割点","Tarjan","图论"],e:`<p>图论基础算法之割边割点，没想到为了调整各种细节还花了我不少时间</p>
<!-- more --->
<h1>无向图中的tarjan</h1>
<h2>算法说明</h2>
<p>图论算法没有图很难说明，在此只做最简单的叙述就好</p>
<p>首先对于一张图进行DFS，由DFS过程引入三个概念：</p>
<ul>
<li>时间截：节点进行DFS的时间顺序编号</li>
<li>搜索树：深搜路径的生成树</li>
<li>追溯值：一个节点不通过父节点能够到达其他节点的最早时间截</li>
</ul>
<p>分别用<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>f</mi><mi>s</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">dfs[n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">df</span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span></span></span></span>、<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">[</mo><mi>n</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">low[n]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal">n</span><span class="mclose">]</span></span></span></span>表示时间截和追溯值</p>`,r:{minutes:5.23,words:1570},y:"a",t:"割边和割点"}}],["/posts/algorithm/oi/learning-note/Dichotomy-OR.html",{loader:()=>u(()=>import("./Dichotomy-OR.html-CDlZeMSw.js"),__vite__mapDeps([161,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["二分"],e:`
<h3>二分查找</h3>
<p>从有序序列中查找某个值的位置
<strong>STL</strong>：lower_bound()、upper_bound</p>
<hr>
<h3>二分答案</h3>
<p>通过判断某个条件是否满足，对一个范围内的答案进行二分</p>
<p><strong>最简单的实例</strong>：
给出一个1~100范围内的随机数，要求你用最少的次数猜中这个数字</p>
<hr>
<p>)</p>
<hr>
<h3>二分查找与二分答案的联系</h3>
<p><strong>二分答案</strong>是某个连续区间内的<strong>二分查找</strong></p>`,r:{minutes:2.01,words:603},y:"a",t:"二分相关算法题"}}],["/posts/algorithm/oi/learning-note/Dichotomy.html",{loader:()=>u(()=>import("./Dichotomy.html-B7kvb2ij.js"),__vite__mapDeps([162,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["二分"],e:`<p>关于二分的精度的问题的记录</p>
<!-- more --->
<p>在进行实数范围的二分时，应该据情况控制二分的精度范围：</p>
<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;utility&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iomanip&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">double</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token keyword">double</span> x<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token number">8.0</span> <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">4.0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">7.0</span> <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">3.0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2.0</span> <span class="token operator">*</span> <span class="token function">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> <span class="token number">2.0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">3.0</span> <span class="token operator">*</span> <span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">6.0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">double</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">double</span> Y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">double</span> l <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">100.0</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>r <span class="token operator">-</span> l <span class="token operator">&gt;</span> <span class="token number">1e-13</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">double</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">cal</span><span class="token punctuation">(</span>mid<span class="token punctuation">)</span> <span class="token operator">&gt;</span> Y<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            r <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token number">1e-14</span><span class="token punctuation">;</span><span class="token comment">//there to control the accuracy</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            l <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1e-14</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> T<span class="token punctuation">;</span>
    cout <span class="token operator">&lt;&lt;</span> fixed <span class="token operator">&lt;&lt;</span> <span class="token function">setprecision</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>cin <span class="token operator">&gt;&gt;</span> T<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> T<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">double</span> Y<span class="token punctuation">;</span>
            cin <span class="token operator">&gt;&gt;</span> Y<span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>Y <span class="token operator">&lt;</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">||</span> Y <span class="token operator">&gt;</span> <span class="token function">cal</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                cout <span class="token operator">&lt;&lt;</span> <span class="token string">"No solution!"</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
                <span class="token keyword">continue</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            cout <span class="token operator">&lt;&lt;</span> <span class="token function">find</span><span class="token punctuation">(</span>Y<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.72,words:216},y:"a",t:"二分及精度问题"}}],["/posts/algorithm/oi/learning-note/DichotomyGraph.html",{loader:()=>u(()=>import("./DichotomyGraph.html-L1Ud8wpw.js"),__vite__mapDeps([163,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["二分图","图论","网络流"],e:`<p>二分图匹配的算法涉及到一部分网络流的知识</p>
<!-- more --->
<h3>二分图的判定</h3>
<p>判定一个图是不是二分图，只需要判定这个图上是否存在奇环即可</p>
<p>判断图上是否存在奇环的方式采用染色法，通过dfs给路径上的点交替染上黑白两色，如果遍历到一个访问过的点，并且颜色和前驱节点相同，则存在一个奇环，该图不是二分图</p>
<h3>二分图的匹配</h3>
<p>从二分图中取出一些边，使得这些边所连接的节点没有重复的，那么这些边就称为二分图的一组匹配</p>
<p>换个说法，为了使二分图的两个集合中的<strong>一些</strong>节点都能唯一与另一个集合中的一个节点连接，所选出的一组边，称为一组匹配</p>`,r:{minutes:2.88,words:864},y:"a",t:"二分图"}}],["/posts/algorithm/oi/learning-note/GameTheory.html",{loader:()=>u(()=>import("./GameTheory.html-3gomR7GO.js"),__vite__mapDeps([164,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["博弈论","nim博弈","巴什博弈","SG函数"],e:`<p>基础博弈论只要记住几个结论公式就好，但是通用的博弈论解决方式还是要用SG函数</p>
<h3>巴什博弈</h3>
<p>有N个物品，双方玩家轮流拿<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mi>M</mi></mrow><annotation encoding="application/x-tex">1-M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>个，拿到最后一个物品的玩家胜利</p>`,r:{minutes:3.03,words:908},y:"a",t:"博弈论"}}],["/posts/algorithm/oi/learning-note/HandWrittenHeap.html",{loader:()=>u(()=>import("./HandWrittenHeap.html-D1TIuK1n.js"),__vite__mapDeps([165,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["二叉堆","模板"],e:`<p>手写了一个堆的类模板，以后遇到需要用堆的情况会直接使用</p>
`,r:{minutes:2.06,words:618},y:"a",t:"手写堆模板"}}],["/posts/algorithm/oi/learning-note/LCA.html",{loader:()=>u(()=>import("./LCA.html-DSKtEwC1.js"),__vite__mapDeps([166,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["LCA","树上倍增","Tarjan"],e:`<p>图论基础算法之一，在此记录树上倍增法和Tarjan算法</p>
<h3>树上倍增法</h3>
<p>在线算法，比较简单实用</p>
<p>具体实现过程依靠倍增思想，通过数组<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>p</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[p][k]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">p</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span></span></span></span>记录p节点的第<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup></mrow><annotation encoding="application/x-tex">2^k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span></span></span></span>辈父节点，而数组<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi></mrow><annotation encoding="application/x-tex">f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span>可以通过树上DP的方式求得</p>`,r:{minutes:4.02,words:1207},y:"a",t:"最近公共祖先"}}],["/posts/algorithm/oi/learning-note/MSSet.html",{loader:()=>u(()=>import("./MSSet.html-zrYTZiSC.js"),__vite__mapDeps([167,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["并查集","集合"],e:`<p>算是比较基础的数据结构，把模板放在这里，并讨论一点扩展</p>
<!-- more --->
<h2>模板：</h2>
<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;map&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstring&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iomanip&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span>
<span class="token comment">//#include "Custom.h"</span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">int</span> father<span class="token punctuation">[</span><span class="token number">10005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">Get</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>father<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">!=</span> x<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> father<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Get</span><span class="token punctuation">(</span>father<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
        <span class="token keyword">return</span> x<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    father<span class="token punctuation">[</span><span class="token function">Get</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Get</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token comment">/* FILE *stream1;
    freopen_s(&amp;stream1, "data.in", "r", stdin);
    freopen_s(&amp;stream1, "a.out", "w", stdout); */</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        father<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> op<span class="token punctuation">;</span>
        <span class="token keyword">int</span> x<span class="token punctuation">,</span> y<span class="token punctuation">;</span>
        cin <span class="token operator">&gt;&gt;</span> op <span class="token operator">&gt;&gt;</span> x <span class="token operator">&gt;&gt;</span> y<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>op <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token function">merge</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>op <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            cout <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">Get</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">Get</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">?</span> <span class="token char">'Y'</span> <span class="token operator">:</span> <span class="token char">'N'</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// fclose(stdin);</span>
    <span class="token comment">// fclose(stdout);</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.53,words:1060},y:"a",t:"并查集"}}],["/posts/algorithm/oi/learning-note/ST-about.html",{loader:()=>u(()=>import("./ST-about.html-RnAXVKnH.js"),__vite__mapDeps([168,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["ST表","区间最大值"],e:`<p>由倍增算法和思想衍生出的一种适用于区间查询的基本数据类型</p>
<!-- more --->
<p>在倍增的思想中，通过成倍的增长来加快某一种过程，而在st表中，通过成倍的增加长度来扩大一个区间的覆盖长度，获得一个更大区间的某一特征。</p>
<p>以区间最大值为例子<br>
现在我用一个二维数组<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mo stretchy="false">[</mo><mi>j</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f[i][j]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mclose">]</span></span></span></span>表示以数列的第i项开头的，长度为<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>j</mi></msup></mrow><annotation encoding="application/x-tex">2^j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8247em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8247em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span></span></span></span></span></span></span>的一个区间中的最大值，然后我们可以得到在<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>l</mi><mo separator="true">,</mo><mi>r</mi><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[l,r]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mclose">]</span></span></span></span>的范围内的最大的2的幂次方为<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>r</mi><mo>−</mo><mi>l</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">log_2(r-l+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7778em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>，同时可以保证这个数字大于<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi>l</mi><mo>+</mo><mi>r</mi></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">\\frac{l+r}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2251em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>。<br>
所以我们可以用</p>`,r:{minutes:1.39,words:417},y:"a",t:"ST表"}}],["/posts/algorithm/oi/learning-note/Segment-Tree.html",{loader:()=>u(()=>import("./Segment-Tree.html-CMHnxtVn.js"),__vite__mapDeps([169,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["线段树","数据结构","区间维护"],e:`<p>综合了多种思想于一体的一种基础数据结构，适用于区间维护问题。</p>
<!-- more --->
<p>对于线段树而言，在实现的思想方面不必多谈，无非就是二分区间，再进行合并。以下仅针对代码的具体实现进行一定的记录。</p>
<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">Segment</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> L<span class="token punctuation">;</span>
    <span class="token keyword">int</span> R<span class="token punctuation">;</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> data<span class="token punctuation">;</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> lazy_tag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span> node<span class="token punctuation">[</span><span class="token number">400005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> origin<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">build</span><span class="token punctuation">(</span><span class="token keyword">int</span> pos<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">==</span> r<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        node<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> origin<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token punctuation">;</span>
        node<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">.</span>L <span class="token operator">=</span> l<span class="token punctuation">;</span>
        node<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">.</span>R <span class="token operator">=</span> r<span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>l <span class="token operator">+</span> r<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pos <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">(</span>pos <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>

    node<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">.</span>L <span class="token operator">=</span> l<span class="token punctuation">;</span>
    node<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">.</span>R <span class="token operator">=</span> r<span class="token punctuation">;</span>
    node<span class="token punctuation">[</span>pos<span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> node<span class="token punctuation">[</span><span class="token punctuation">(</span>pos <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">+</span> node<span class="token punctuation">[</span><span class="token punctuation">(</span>pos <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">spread</span><span class="token punctuation">(</span><span class="token keyword">int</span> p<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    node<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">+=</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>lazy_tag <span class="token operator">*</span> <span class="token punctuation">(</span>node<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>R <span class="token operator">-</span> node<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>L <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    node<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">+=</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>lazy_tag <span class="token operator">*</span> <span class="token punctuation">(</span>node<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>R <span class="token operator">-</span> node<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>L <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    node<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lazy_tag <span class="token operator">+=</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>lazy_tag<span class="token punctuation">;</span>
    node<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>lazy_tag <span class="token operator">+=</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>lazy_tag<span class="token punctuation">;</span>
    node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>lazy_tag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">change</span><span class="token punctuation">(</span><span class="token keyword">int</span> p<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>L <span class="token operator">&amp;&amp;</span> r <span class="token operator">&gt;=</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>R<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">+=</span> <span class="token punctuation">(</span>node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>R <span class="token operator">-</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>L <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> val<span class="token punctuation">;</span>
        node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>lazy_tag <span class="token operator">+=</span> val<span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">spread</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>L <span class="token operator">+</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>R<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&gt;=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">change</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> node<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">+</span> node<span class="token punctuation">[</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">long</span> <span class="token keyword">long</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token keyword">int</span> p<span class="token punctuation">,</span> <span class="token keyword">int</span> l<span class="token punctuation">,</span> <span class="token keyword">int</span> r<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>L <span class="token operator">&amp;&amp;</span> r <span class="token operator">&gt;=</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>R<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">spread</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token punctuation">(</span>node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>L <span class="token operator">+</span> node<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token punctuation">.</span>R<span class="token punctuation">)</span> <span class="token operator">&gt;&gt;</span> <span class="token number">1</span><span class="token punctuation">;</span>
    <span class="token keyword">long</span> <span class="token keyword">long</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>l <span class="token operator">&lt;=</span> mid<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>r <span class="token operator">&gt;=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        sum <span class="token operator">+=</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token punctuation">(</span>p <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        cin <span class="token operator">&gt;&gt;</span> origin<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">build</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> op<span class="token punctuation">;</span>
        cin <span class="token operator">&gt;&gt;</span> op<span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>op <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">int</span> l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> val<span class="token punctuation">;</span>
            cin <span class="token operator">&gt;&gt;</span> l <span class="token operator">&gt;&gt;</span> r <span class="token operator">&gt;&gt;</span> val<span class="token punctuation">;</span>
            <span class="token function">change</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>op <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">int</span> l<span class="token punctuation">,</span> r<span class="token punctuation">;</span>
            cin <span class="token operator">&gt;&gt;</span> l <span class="token operator">&gt;&gt;</span> r<span class="token punctuation">;</span>
            cout <span class="token operator">&lt;&lt;</span> <span class="token function">query</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> l<span class="token punctuation">,</span> r<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> endl<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.87,words:1161},y:"a",t:"线段树"}}],["/posts/algorithm/oi/learning-note/SmallestSpanTree.html",{loader:()=>u(()=>import("./SmallestSpanTree.html-Bmo1RA_s.js"),__vite__mapDeps([170,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["最小生成树","Kruskal","Prim"],e:`<p>一种基本的图论算法，求得联通块中边权和最小的生成树</p>
<!-- more --->
<h3>最小生成树</h3>
<p>联通块中边权和最小的生成树</p>
<h3>Kruskal算法</h3>
<p>基于贪心思想，将所有边按照边权进行排序，如果两个端点不在同一个联通块中，则将两节点归入一个连通块中（用并查集实现），然后将该边统计入答案</p>
<p>遍历完m条边后得到n-1条边，所构成的就是对应图的最小生成树</p>
<p>特别的，如果得到的边数小于n-1条，则说明该图不连通</p>
<p><strong>洛谷模板题代码</strong>：</p>
<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;algorithm&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iterator&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">Edge</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> from<span class="token punctuation">;</span>
    <span class="token keyword">int</span> to<span class="token punctuation">;</span>
    <span class="token keyword">int</span> val<span class="token punctuation">;</span>
    <span class="token keyword">int</span> next<span class="token punctuation">;</span>
    <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&lt;</span><span class="token punctuation">(</span>Edge b<span class="token punctuation">)</span> <span class="token keyword">const</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> val <span class="token operator">&lt;</span> b<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">MF_Set</span>
<span class="token punctuation">{</span>
<span class="token keyword">private</span><span class="token operator">:</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>
    <span class="token keyword">int</span> <span class="token operator">*</span>father <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">5005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">public</span><span class="token operator">:</span>
    <span class="token function">MF_Set</span><span class="token punctuation">(</span><span class="token keyword">int</span> input_1<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        n <span class="token operator">=</span> input_1<span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            father<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">int</span> <span class="token function">findFather</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>father<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">!=</span> a<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> father<span class="token punctuation">[</span>a<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">findFather</span><span class="token punctuation">(</span>father<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> a<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> FatherA <span class="token operator">=</span> <span class="token function">findFather</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> FatherB <span class="token operator">=</span> <span class="token function">findFather</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>FatherA <span class="token operator">!=</span> FatherB<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            father<span class="token punctuation">[</span>FatherA<span class="token punctuation">]</span> <span class="token operator">=</span> FatherB<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">bool</span> <span class="token function">inSameSet</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token function">findFather</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token function">findFather</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">class</span> <span class="token class-name">Solver</span>
<span class="token punctuation">{</span>
<span class="token keyword">private</span><span class="token operator">:</span>
    Edge <span class="token operator">*</span>edges <span class="token operator">=</span> <span class="token keyword">new</span> Edge<span class="token punctuation">[</span><span class="token number">200005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

    <span class="token keyword">int</span> <span class="token operator">*</span>head <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">5005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>

<span class="token keyword">public</span><span class="token operator">:</span>
    <span class="token function">Solver</span><span class="token punctuation">(</span><span class="token keyword">int</span> input_1<span class="token punctuation">,</span> <span class="token keyword">int</span> input_2<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        n <span class="token operator">=</span> input_1<span class="token punctuation">;</span>
        m <span class="token operator">=</span> input_2<span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">int</span> u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> val<span class="token punctuation">;</span>
            cin <span class="token operator">&gt;&gt;</span> u <span class="token operator">&gt;&gt;</span> v <span class="token operator">&gt;&gt;</span> val<span class="token punctuation">;</span>
            <span class="token function">add</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">,</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> u<span class="token punctuation">,</span> <span class="token keyword">int</span> v<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        edges<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>from <span class="token operator">=</span> u<span class="token punctuation">;</span>
        edges<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>to <span class="token operator">=</span> v<span class="token punctuation">;</span>
        edges<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
        edges<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">[</span>u<span class="token punctuation">]</span><span class="token punctuation">;</span>
        head<span class="token punctuation">[</span>u<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">int</span> <span class="token function">Kruskal</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token function">sort</span><span class="token punctuation">(</span>edges<span class="token punctuation">,</span> edges <span class="token operator">+</span> m <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        MF_Set <span class="token function">set</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> times <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">int</span> u <span class="token operator">=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>from<span class="token punctuation">;</span>
            <span class="token keyword">int</span> v <span class="token operator">=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>to<span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>set<span class="token punctuation">.</span><span class="token function">inSameSet</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token punctuation">{</span>
                sum <span class="token operator">+=</span> edges<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>val<span class="token punctuation">;</span>
                times<span class="token operator">++</span><span class="token punctuation">;</span>
                set<span class="token punctuation">.</span><span class="token function">merge</span><span class="token punctuation">(</span>u<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>times <span class="token operator">!=</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            <span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> sum<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>
    Solver <span class="token function">work</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> ans <span class="token operator">=</span> work<span class="token punctuation">.</span><span class="token function">Kruskal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>ans <span class="token operator">!=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> ans<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">else</span>
    <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> <span class="token string">"orz"</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:2.69,words:806},y:"a",t:"最小生成树"}}],["/posts/algorithm/oi/learning-note/Tree-Array.html",{loader:()=>u(()=>import("./Tree-Array.html-BWGY9Xlq.js"),__vite__mapDeps([171,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["树形数组","区间查询","区间维护","前缀和","差分"],e:`<p>最简单的一种用于区间维护的数据结构</p>
<!-- more --->
<p>树状数组的原理过于简明直观，再此不对最基本的点修改和前缀和查询做赘述，主要说明一下<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>w</mi><mi>b</mi><mi>i</mi><mi>t</mi><mo stretchy="false">(</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">lowbit()</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">bi</span><span class="mord mathnormal">t</span><span class="mopen">(</span><span class="mclose">)</span></span></span></span>的实现逻辑。</p>`,r:{minutes:2.48,words:745},y:"a",t:"树形数组"}}],["/posts/algorithm/oi/learning-note/TreeToList.html",{loader:()=>u(()=>import("./TreeToList.html-BBDb2uLN.js"),__vite__mapDeps([172,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["树链剖分","区间维护"],e:`<p>树链剖分，原理不算复杂，但是代码十分难打的一种偏暴力的算法</p>
<!-- more --->
<p>首先就如它的名字一样，树链剖分，把树剖分成链式结构，符合主宾谓结构，看来命名者精通日语......（我在说什么）</p>
<h3>树链剖分主要分为以下步骤：</h3>
<ul>
<li><strong>第一遍对树进行dfs</strong>：
<ul>
<li>记录每个节点的深度</li>
<li>记录每个节点的父节点</li>
<li>记录每个节点的子树大小（含自己）</li>
<li>记录每个节点的重儿子</li>
</ul>
</li>
</ul>
<p>关于重儿子、轻儿子等概念就不解释记录了，我只是在记录自己的学习过程，不是写教程</p>`,r:{minutes:4.16,words:1248},y:"a",t:"树链剖分"}}],["/posts/algorithm/oi/learning-note/dataStruct-S.html",{loader:()=>u(()=>import("./dataStruct-S.html-BMudTS77.js"),__vite__mapDeps([173,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["数据结构","教学资料"],e:`<p><strong>信息学竞赛 = 算法 + 数据结构</strong></p>
<h3>什么是数据结构？</h3>
<p>数据结构是储存数据的方式</p>
<h3>数据结构和算法之间的关系</h3>
<p>按照某种方式储存的数据可以更加方便快速地执行某些算法</p>
<h3>数据结构的简单分类</h3>
<p>线性数据结构</p>
<p>图</p>
<p>树型结构</p>
<h3>一个简单的例子</h3>
<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token keyword">struct</span> <span class="token class-name">Student</span>
<span class="token punctuation">{</span>
    string name<span class="token punctuation">;</span>
    <span class="token keyword">int</span> age<span class="token punctuation">;</span>
    <span class="token keyword">bool</span> gender<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre></div>`,r:{minutes:5.97,words:1792},y:"a",t:"简单数据结构"}}],["/posts/algorithm/oi/learning-note/distant.html",{loader:()=>u(()=>import("./distant.html-B30g_-CP.js"),__vite__mapDeps([174,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["最短路","dijkstra","Bellman-ford","SPFA"],e:`<p>对于最短路的内容有所遗忘，复习的同时，将常用的几种与最短路有关的算法记录下来</p>
<!-- more --->
<h1>堆优化的dijkstra算法</h1>
<p>dijkstra采用贪心思想，对于产生负边权的图，并不会回过头去更新减少费用的路径，但是对于正边权的图是有效的计算方式</p>
<p><strong>代码如下</strong>：</p>
<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;queue&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">edge</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> f<span class="token punctuation">;</span>
    <span class="token keyword">int</span> t<span class="token punctuation">;</span>
    <span class="token keyword">int</span> val<span class="token punctuation">;</span>
    <span class="token keyword">int</span> next<span class="token punctuation">;</span>
<span class="token punctuation">}</span> ed<span class="token punctuation">[</span><span class="token number">200005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> head<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> f<span class="token punctuation">,</span> <span class="token keyword">int</span> t<span class="token punctuation">,</span> <span class="token keyword">int</span> val<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    ed<span class="token punctuation">[</span><span class="token operator">++</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>f <span class="token operator">=</span> f<span class="token punctuation">;</span>
    ed<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>t <span class="token operator">=</span> t<span class="token punctuation">;</span>
    ed<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>val <span class="token operator">=</span> val<span class="token punctuation">;</span>
    ed<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">.</span>next <span class="token operator">=</span> head<span class="token punctuation">[</span>f<span class="token punctuation">]</span><span class="token punctuation">;</span>
    head<span class="token punctuation">[</span>f<span class="token punctuation">]</span> <span class="token operator">=</span> num<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">struct</span> <span class="token class-name">node_</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> dis<span class="token punctuation">;</span>
    <span class="token keyword">int</span> node<span class="token punctuation">;</span>
    <span class="token keyword">bool</span> <span class="token keyword">operator</span> <span class="token operator">&lt;</span> <span class="token punctuation">(</span>node_ a<span class="token punctuation">)</span><span class="token keyword">const</span><span class="token comment">//此处牵涉到stl的内部实现</span>
                                  <span class="token comment">//堆使用&lt;比较</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> dis <span class="token operator">&lt;</span> a<span class="token punctuation">.</span>dis<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token keyword">int</span> dis<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">bool</span> vi<span class="token punctuation">[</span><span class="token number">100005</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">dijkstra</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    priority_queue<span class="token operator">&lt;</span>node_<span class="token operator">&gt;</span> dui<span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">100005</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        dis<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1e9</span> <span class="token operator">+</span> <span class="token number">7</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    dis<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    dui<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node_<span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">while</span> <span class="token punctuation">(</span>dui<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> node <span class="token operator">=</span> dui<span class="token punctuation">.</span><span class="token function">top</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>node<span class="token punctuation">;</span>
        dui<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span> <span class="token punctuation">(</span>vi<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">continue</span><span class="token punctuation">;</span>
        vi<span class="token punctuation">[</span>node<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>

        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> head<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">;</span> i <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">=</span> ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>next<span class="token punctuation">)</span>
        <span class="token punctuation">{</span>
            dis<span class="token punctuation">[</span>ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>t<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span>dis<span class="token punctuation">[</span>ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span> dis<span class="token punctuation">[</span>ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>f<span class="token punctuation">]</span> <span class="token operator">+</span> ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>val<span class="token punctuation">)</span><span class="token punctuation">;</span>
            dui<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node_<span class="token punctuation">{</span>dis<span class="token punctuation">[</span>ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>t<span class="token punctuation">]</span><span class="token punctuation">,</span> ed<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>t<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">,</span> s<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m <span class="token operator">&gt;&gt;</span> s<span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>
        cin <span class="token operator">&gt;&gt;</span> a <span class="token operator">&gt;&gt;</span> b <span class="token operator">&gt;&gt;</span> c<span class="token punctuation">;</span>
        <span class="token function">add</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">dijkstra</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;=</span>n<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        cout<span class="token operator">&lt;&lt;</span>dis<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token char">' '</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:3.23,words:970},y:"a",t:"单源最短路和负环"}}],["/posts/algorithm/oi/learning-note/network-flows.html",{loader:()=>u(()=>import("./network-flows.html-CXfsc0LC.js"),__vite__mapDeps([175,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI算法和数据结构"],g:["网络流","图论","最大流"],e:`<p>网络流是一个比较庞大的图论分支，有些懒，大概记个思路和代码就行了</p>
<!-- more --->
<h2>最大流问题</h2>
<h3>EK算法</h3>
<p>通过搜索的方式找到一条增广路，然后该路径上的流量增加<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>n</mi><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">(</mo><mi>u</mi><mo separator="true">,</mo><mi>v</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">min(f(u,v))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">min</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">))</span></span></span></span>，即最小边的容量</p>`,r:{minutes:4.49,words:1346},y:"a",t:"最大流问题"}}],["/posts/algorithm/oi/quiz/1003-hdu.html",{loader:()=>u(()=>import("./1003-hdu.html-B4ZNmrfU.js"),__vite__mapDeps([176,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI练习"],g:["最大字串和","DP"],e:`<p>照理说应当是一道相当简单入门的线性题，但是实际做的时候还是踩了不少坑</p>
<h3>几种没有考虑到的特殊情况：</h3>
<ul>
<li>数列全为负数的情况下，应当找到最小负数</li>
<li>线性过程中的t_sum应该在首项赋值</li>
</ul>
`,r:{minutes:.92,words:275},y:"a",t:"hdu1003"}}],["/posts/algorithm/oi/quiz/1005-hdu.html",{loader:()=>u(()=>import("./1005-hdu.html-CIGB3ssu.js"),__vite__mapDeps([177,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI练习"],g:["矩阵"],e:`<p>求一个递推公式得第n项，数据范围不能使用线性算法，所以采用矩阵快速幂的做法</p>
`,r:{minutes:1.22,words:367},y:"a",t:"hdu1005"}}],["/posts/algorithm/oi/quiz/1006-hdu.html",{loader:()=>u(()=>import("./1006-hdu.html-DUf_Ow-B.js"),__vite__mapDeps([178,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI练习"],g:["数学","不等式"],e:`<p>这是一道有些技巧难度的数学题</p>
`,r:{minutes:2.25,words:675},y:"a",t:"hdu1006"}}],["/posts/algorithm/oi/quiz/ccpc2016-B.html",{loader:()=>u(()=>import("./ccpc2016-B.html-CFXT4w0_.js"),__vite__mapDeps([179,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI练习"],g:["优先队列","贪心"],e:`<p>训练时遇到的题目，思路完全想错了，看过别人思路后再打一遍</p>
`,r:{minutes:1.96,words:588},y:"a",t:"CCPC2016.B"}}],["/posts/algorithm/oi/quiz/csp20210902.html",{loader:()=>u(()=>import("./csp20210902.html-Bq57zIfq.js"),__vite__mapDeps([180,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI练习"],g:["线性","差分"],e:`<p>大模拟，非常折磨</p>
<!-- more --->
<p><img src="https://s3.bmp.ovh/imgs/2021/12/5061c8d9ded298a0.png" alt="题目" loading="lazy">
<img src="https://s3.bmp.ovh/imgs/2021/12/d5aed082f36906cc.png" alt="题目" loading="lazy">
<img src="https://s3.bmp.ovh/imgs/2021/12/159d4f6a5512aa1e.png" alt="题目" loading="lazy"></p>`,r:{minutes:1.96,words:588},y:"a",t:"CSP_20210903"}}],["/posts/algorithm/oi/quiz/csp20210903.html",{loader:()=>u(()=>import("./csp20210903.html-BEP6kQbv.js"),__vite__mapDeps([181,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI练习"],g:["线性","差分"],e:`<p>久违的做一篇题解，心中甚是悲伤，已经要开始纠结于这种简单题了吗<br>
看来还需要多加努力</p>
<!-- more --->
<figure><img src="https://s3.bmp.ovh/imgs/2021/12/f9a9dcaeefc8326c.png" alt="题目" tabindex="0" loading="lazy"><figcaption>题目</figcaption></figure>
<h2>思路：</h2>
<p>对于这个序列，我们可以画出它的函数图像，假设其中离散的点是连续的，然后作出目标函数<span v-pre="" class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">y=p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span></p>`,r:{minutes:1.16,words:349},y:"a",t:"CSP_20210902"}}],["/posts/algorithm/oi/quiz/luogu-p2085.html",{loader:()=>u(()=>import("./luogu-p2085.html-DuzlNrZk.js"),__vite__mapDeps([182,1])),meta:{d:16094592e5,l:"2021年1月1日",c:["OI练习"],g:["二叉堆"],e:`<p>简单的堆应用，把函数写成结构，以记录函数的第n小值，全部加入堆中，每次弹出最小函数把n+1，再次加入堆</p>
<p><strong>代码如下：</strong><br>
其中的堆是手写的模板，为了算法部分便于观看，删去了堆的实现部分的代码，具体可以查看
<a href="/posts/algorithm/oi/learning-note/HandWrittenHeap.html" target="_blank">堆模板</a>)</p>
<div class="language-cpp" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdio&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cmath&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>

<span class="token keyword">struct</span> <span class="token class-name">func</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> A<span class="token punctuation">,</span> B<span class="token punctuation">,</span> C<span class="token punctuation">;</span>
    <span class="token keyword">int</span> val<span class="token punctuation">;</span>
    <span class="token keyword">int</span> n<span class="token punctuation">;</span>

    <span class="token keyword">int</span> <span class="token function">min_</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> mid <span class="token operator">=</span> <span class="token function">round</span><span class="token punctuation">(</span><span class="token punctuation">(</span>B <span class="token operator">*</span> <span class="token number">1.00</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">2.00</span> <span class="token operator">*</span> A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span>mid<span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            mid <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
            mid <span class="token operator">+=</span> n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> A <span class="token operator">*</span> mid <span class="token operator">*</span> mid <span class="token operator">+</span> B <span class="token operator">*</span> mid <span class="token operator">+</span> C<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">int</span> x_1 <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">int</span> x_2 <span class="token operator">=</span> mid <span class="token operator">-</span> <span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token generic-function"><span class="token function">x_2</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token punctuation">(</span>A <span class="token operator">*</span> x_1 <span class="token operator">*</span> x_1 <span class="token operator">+</span> B <span class="token operator">*</span> x_1 <span class="token operator">+</span> C<span class="token punctuation">)</span><span class="token punctuation">;</span>

        <span class="token keyword">int</span> ans<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">)</span>
            ans <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token punctuation">(</span>A <span class="token operator">*</span> x_1 <span class="token operator">*</span> x_1 <span class="token operator">+</span> B <span class="token operator">*</span> x_1 <span class="token operator">+</span> C<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>A <span class="token operator">*</span> x_2 <span class="token operator">*</span> x_2 <span class="token operator">+</span> B <span class="token operator">*</span> x_2 <span class="token operator">+</span> C<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">else</span>
        <span class="token punctuation">{</span>
            ans <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token punctuation">(</span>A <span class="token operator">*</span> x_1 <span class="token operator">*</span> x_1 <span class="token operator">+</span> B <span class="token operator">*</span> x_1 <span class="token operator">+</span> C<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>A <span class="token operator">*</span> x_2 <span class="token operator">*</span> x_2 <span class="token operator">+</span> B <span class="token operator">*</span> x_2 <span class="token operator">+</span> C<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">return</span> ans<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">,</span> <span class="token keyword">int</span> c<span class="token punctuation">,</span> <span class="token keyword">int</span> n_<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        A <span class="token operator">=</span> a<span class="token punctuation">;</span>
        B <span class="token operator">=</span> b<span class="token punctuation">;</span>
        C <span class="token operator">=</span> c<span class="token punctuation">;</span>
        n <span class="token operator">=</span> n_<span class="token punctuation">;</span>
        val <span class="token operator">=</span> <span class="token function">min_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token function">func</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token keyword">bool</span> <span class="token keyword">operator</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>func a<span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">return</span> val <span class="token operator">&gt;</span> a<span class="token punctuation">.</span>val<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
    <span class="token keyword">int</span> n<span class="token punctuation">,</span> m<span class="token punctuation">;</span>
    cin <span class="token operator">&gt;&gt;</span> n <span class="token operator">&gt;&gt;</span> m<span class="token punctuation">;</span>

    heap<span class="token operator">&lt;</span>func<span class="token operator">&gt;</span> <span class="token function">My_heap</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> n<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        <span class="token keyword">int</span> A<span class="token punctuation">,</span> B<span class="token punctuation">,</span> C<span class="token punctuation">;</span>
        cin <span class="token operator">&gt;&gt;</span> A <span class="token operator">&gt;&gt;</span> B <span class="token operator">&gt;&gt;</span> C<span class="token punctuation">;</span>

        My_heap<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token function">func</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> B<span class="token punctuation">,</span> C<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> m<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
    <span class="token punctuation">{</span>
        cout <span class="token operator">&lt;&lt;</span> My_heap<span class="token punctuation">.</span><span class="token function">GetTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>val <span class="token operator">&lt;&lt;</span> <span class="token char">' '</span><span class="token punctuation">;</span>

        func temp <span class="token operator">=</span> My_heap<span class="token punctuation">.</span><span class="token function">GetTop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        My_heap<span class="token punctuation">.</span><span class="token function">extract</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        temp<span class="token punctuation">.</span>n<span class="token operator">++</span><span class="token punctuation">;</span>
        temp<span class="token punctuation">.</span>val <span class="token operator">=</span> temp<span class="token punctuation">.</span><span class="token function">min_</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

        My_heap<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre></div>`,r:{minutes:.97,words:290},y:"a",t:"Luogu_P2085"}}],["/404.html",{loader:()=>u(()=>import("./404.html-DUdccAaK.js"),__vite__mapDeps([183,1])),meta:{y:"p",t:""}}],["/logical-and-proof/",{loader:()=>u(()=>import("./index.html-C-MNYuCY.js"),__vite__mapDeps([184,1])),meta:{y:"p",t:"Logical and Proof"}}],["/posts/",{loader:()=>u(()=>import("./index.html-DObf9hbU.js"),__vite__mapDeps([185,1])),meta:{y:"p",t:"Posts"}}],["/layouts/",{loader:()=>u(()=>import("./index.html-xmNI5C7f.js"),__vite__mapDeps([186,1])),meta:{y:"p",t:"Layouts"}}],["/posts/SE/",{loader:()=>u(()=>import("./index.html-DoefUrCU.js"),__vite__mapDeps([187,1])),meta:{y:"p",t:"SE"}}],["/posts/eng/",{loader:()=>u(()=>import("./index.html-B9mdIizg.js"),__vite__mapDeps([188,1])),meta:{y:"p",t:"Eng"}}],["/posts/music/",{loader:()=>u(()=>import("./index.html-DzHc4qEP.js"),__vite__mapDeps([189,1])),meta:{y:"p",t:"Music"}}],["/posts/essay/",{loader:()=>u(()=>import("./index.html-Dge5s2iU.js"),__vite__mapDeps([190,1])),meta:{y:"p",t:"Essay"}}],["/posts/openGL/",{loader:()=>u(()=>import("./index.html-BEv-58jE.js"),__vite__mapDeps([191,1])),meta:{y:"p",t:"Open GL"}}],["/posts/AI/CV/",{loader:()=>u(()=>import("./index.html-BKxTbBYx.js"),__vite__mapDeps([192,1])),meta:{y:"p",t:"CV"}}],["/posts/AI/",{loader:()=>u(()=>import("./index.html-DstIwyG9.js"),__vite__mapDeps([193,1])),meta:{y:"p",t:"AI"}}],["/posts/AI/ML/",{loader:()=>u(()=>import("./index.html-DGwEBVq3.js"),__vite__mapDeps([194,1])),meta:{y:"p",t:"ML"}}],["/posts/AI/NLP/",{loader:()=>u(()=>import("./index.html-UoSk44s6.js"),__vite__mapDeps([195,1])),meta:{y:"p",t:"NLP"}}],["/posts/CS/CSAPP-notes/",{loader:()=>u(()=>import("./index.html-sDPxUQr-.js"),__vite__mapDeps([196,1])),meta:{y:"p",t:"CSAPP Notes"}}],["/posts/CS/",{loader:()=>u(()=>import("./index.html-Bb7ep6Cw.js"),__vite__mapDeps([197,1])),meta:{y:"p",t:"CS"}}],["/posts/CS/DB/",{loader:()=>u(()=>import("./index.html-DUvBg5U_.js"),__vite__mapDeps([198,1])),meta:{y:"p",t:"DB"}}],["/posts/CS/PC_oranization/",{loader:()=>u(()=>import("./index.html-B14kwXuz.js"),__vite__mapDeps([199,1])),meta:{y:"p",t:"PC Oranization"}}],["/posts/CS/compiler/",{loader:()=>u(()=>import("./index.html-BIQRMApw.js"),__vite__mapDeps([200,1])),meta:{y:"p",t:"Compiler"}}],["/posts/algorithm/Leetcode/",{loader:()=>u(()=>import("./index.html-DRyN9Eon.js"),__vite__mapDeps([201,1])),meta:{y:"p",t:"Leetcode"}}],["/posts/algorithm/",{loader:()=>u(()=>import("./index.html-DH4nOeSE.js"),__vite__mapDeps([202,1])),meta:{y:"p",t:"Algorithm"}}],["/posts/algorithm/automata-theory/",{loader:()=>u(()=>import("./index.html-BZmNrSqm.js"),__vite__mapDeps([203,1])),meta:{y:"p",t:"Automata Theory"}}],["/posts/algorithm/data-struct/",{loader:()=>u(()=>import("./index.html-8BquekTM.js"),__vite__mapDeps([204,1])),meta:{y:"p",t:"Data Struct"}}],["/posts/algorithm/discrete-mathematic/",{loader:()=>u(()=>import("./index.html-DpWNwy6a.js"),__vite__mapDeps([205,1])),meta:{y:"p",t:"Discrete Mathematic"}}],["/posts/SE/design-pattern/",{loader:()=>u(()=>import("./index.html-CR4WIhNS.js"),__vite__mapDeps([206,1])),meta:{y:"p",t:"Design Pattern"}}],["/posts/math/probability-theory/",{loader:()=>u(()=>import("./index.html-BS2mGBis.js"),__vite__mapDeps([207,1])),meta:{y:"p",t:"Probability Theory"}}],["/posts/math/",{loader:()=>u(()=>import("./index.html-BIh4yQP6.js"),__vite__mapDeps([208,1])),meta:{y:"p",t:"Math"}}],["/posts/math/signal/",{loader:()=>u(()=>import("./index.html-C4e6YynD.js"),__vite__mapDeps([209,1])),meta:{y:"p",t:"Signal"}}],["/posts/network/ctf-note/",{loader:()=>u(()=>import("./index.html-d0fI1UW3.js"),__vite__mapDeps([210,1])),meta:{y:"p",t:"Ctf Note"}}],["/posts/network/",{loader:()=>u(()=>import("./index.html-CGRhv6V8.js"),__vite__mapDeps([211,1])),meta:{y:"p",t:"Network"}}],["/posts/network/self-studying-notes/",{loader:()=>u(()=>import("./index.html-C8JZnICW.js"),__vite__mapDeps([212,1])),meta:{y:"p",t:"Self Studying Notes"}}],["/posts/network/works-projects/",{loader:()=>u(()=>import("./index.html-DWyyEwdC.js"),__vite__mapDeps([213,1])),meta:{y:"p",t:"Works Projects"}}],["/posts/operating-system/osc/",{loader:()=>u(()=>import("./index.html-CHq9LaY5.js"),__vite__mapDeps([214,1])),meta:{y:"p",t:"Osc"}}],["/posts/operating-system/",{loader:()=>u(()=>import("./index.html-CvUsFTUz.js"),__vite__mapDeps([215,1])),meta:{y:"p",t:"Operating System"}}],["/posts/operating-system/oslab/",{loader:()=>u(()=>import("./index.html-COq_Mrfz.js"),__vite__mapDeps([216,1])),meta:{y:"p",t:"Oslab"}}],["/posts/operating-system/ostep/",{loader:()=>u(()=>import("./index.html-JfKsM_dx.js"),__vite__mapDeps([217,1])),meta:{y:"p",t:"Ostep"}}],["/posts/program-language/CPP-notes/",{loader:()=>u(()=>import("./index.html-6Jo23V8g.js"),__vite__mapDeps([218,1])),meta:{y:"p",t:"CPP Notes"}}],["/posts/program-language/",{loader:()=>u(()=>import("./index.html-Daufq7pg.js"),__vite__mapDeps([219,1])),meta:{y:"p",t:"Program Language"}}],["/posts/program-language/Csharp/",{loader:()=>u(()=>import("./index.html-BFcCO-e5.js"),__vite__mapDeps([220,1])),meta:{y:"p",t:"Csharp"}}],["/posts/program-language/golang-basic/",{loader:()=>u(()=>import("./index.html-DGYGvDpD.js"),__vite__mapDeps([221,1])),meta:{y:"p",t:"Golang Basic"}}],["/posts/program-language/rust-basic/",{loader:()=>u(()=>import("./index.html-BLRN2HGr.js"),__vite__mapDeps([222,1])),meta:{y:"p",t:"Rust Basic"}}],["/posts/algorithm/oi/learning-note/",{loader:()=>u(()=>import("./index.html-KjVMaZU5.js"),__vite__mapDeps([223,1])),meta:{y:"p",t:"Learning Note"}}],["/posts/algorithm/oi/",{loader:()=>u(()=>import("./index.html-DeZJnJQE.js"),__vite__mapDeps([224,1])),meta:{y:"p",t:"Oi"}}],["/posts/algorithm/oi/quiz/",{loader:()=>u(()=>import("./index.html-BVtHXeGU.js"),__vite__mapDeps([225,1])),meta:{y:"p",t:"Quiz"}}],["/category/",{loader:()=>u(()=>import("./index.html-CNqUBZa2.js"),__vite__mapDeps([226,1])),meta:{y:"p",t:"分类",I:!1}}],["/category/rpc/",{loader:()=>u(()=>import("./index.html-BmrQLot8.js"),__vite__mapDeps([227,1])),meta:{y:"p",t:"RPC 分类",I:!1}}],["/category/%E5%B5%8C%E5%85%A5%E5%BC%8F/",{loader:()=>u(()=>import("./index.html-DS65Qk8S.js"),__vite__mapDeps([228,1])),meta:{y:"p",t:"嵌入式 分类",I:!1}}],["/category/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/",{loader:()=>u(()=>import("./index.html-FhlJ4LvR.js"),__vite__mapDeps([229,1])),meta:{y:"p",t:"软件工程 分类",I:!1}}],["/category/%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/",{loader:()=>u(()=>import("./index.html-tXgimUbu.js"),__vite__mapDeps([230,1])),meta:{y:"p",t:"语言学习 分类",I:!1}}],["/category/%E4%B9%90%E7%90%86/",{loader:()=>u(()=>import("./index.html-Dew8tK2S.js"),__vite__mapDeps([231,1])),meta:{y:"p",t:"乐理 分类",I:!1}}],["/category/%E9%9A%8F%E7%AC%94/",{loader:()=>u(()=>import("./index.html-C_TTMaak.js"),__vite__mapDeps([232,1])),meta:{y:"p",t:"随笔 分类",I:!1}}],["/category/%E7%BC%96%E8%AF%91%E5%8E%9F%E7%90%86/",{loader:()=>u(()=>import("./index.html-cQkyIfMB.js"),__vite__mapDeps([233,1])),meta:{y:"p",t:"编译原理 分类",I:!1}}],["/category/%E8%AF%BB%E5%90%8E%E6%84%9F/",{loader:()=>u(()=>import("./index.html-DtFOi5ae.js"),__vite__mapDeps([234,1])),meta:{y:"p",t:"读后感 分类",I:!1}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2/",{loader:()=>u(()=>import("./index.html-BAZnqdZv.js"),__vite__mapDeps([235,1])),meta:{y:"p",t:"计算机图形 分类",I:!1}}],["/category/cv/",{loader:()=>u(()=>import("./index.html-CFgNYZVF.js"),__vite__mapDeps([236,1])),meta:{y:"p",t:"CV 分类",I:!1}}],["/category/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/",{loader:()=>u(()=>import("./index.html-CnB2wYPq.js"),__vite__mapDeps([237,1])),meta:{y:"p",t:"机器学习 分类",I:!1}}],["/category/nlp/",{loader:()=>u(()=>import("./index.html-CFWElisR.js"),__vite__mapDeps([238,1])),meta:{y:"p",t:"NLP 分类",I:!1}}],["/category/csapp%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/",{loader:()=>u(()=>import("./index.html-BeNXX5_p.js"),__vite__mapDeps([239,1])),meta:{y:"p",t:"CSAPP学习笔记 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%8E%9F%E7%90%86/",{loader:()=>u(()=>import("./index.html-D0RRFZTF.js"),__vite__mapDeps([240,1])),meta:{y:"p",t:"数据库原理 分类",I:!1}}],["/category/database/",{loader:()=>u(()=>import("./index.html-CNZ5vSel.js"),__vite__mapDeps([241,1])),meta:{y:"p",t:"database 分类",I:!1}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/",{loader:()=>u(()=>import("./index.html-dSmdz3dc.js"),__vite__mapDeps([242,1])),meta:{y:"p",t:"计算机组成原理 分类",I:!1}}],["/category/computer-organization/",{loader:()=>u(()=>import("./index.html-CwfHQLIM.js"),__vite__mapDeps([243,1])),meta:{y:"p",t:"computer organization 分类",I:!1}}],["/category/compiler/",{loader:()=>u(()=>import("./index.html-D9HpSmA6.js"),__vite__mapDeps([244,1])),meta:{y:"p",t:"compiler 分类",I:!1}}],["/category/leetcode%E7%BB%83%E4%B9%A0/",{loader:()=>u(()=>import("./index.html-DTHtQJQv.js"),__vite__mapDeps([245,1])),meta:{y:"p",t:"LeetCode练习 分类",I:!1}}],["/category/%E5%BD%A2%E5%BC%8F%E8%AF%AD%E8%A8%80%E4%B8%8E%E8%87%AA%E5%8A%A8%E6%9C%BA/",{loader:()=>u(()=>import("./index.html-CJbiDSln.js"),__vite__mapDeps([246,1])),meta:{y:"p",t:"形式语言与自动机 分类",I:!1}}],["/category/%E7%AE%97%E6%B3%95/",{loader:()=>u(()=>import("./index.html-B6-e9X3a.js"),__vite__mapDeps([247,1])),meta:{y:"p",t:"算法 分类",I:!1}}],["/category/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>u(()=>import("./index.html-CnFcY_7v.js"),__vite__mapDeps([248,1])),meta:{y:"p",t:"数据结构 分类",I:!1}}],["/category/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/",{loader:()=>u(()=>import("./index.html-BsiszSgl.js"),__vite__mapDeps([249,1])),meta:{y:"p",t:"设计模式 分类",I:!1}}],["/category/%E8%AF%BE%E7%A8%8B%E5%A4%8D%E4%B9%A0/",{loader:()=>u(()=>import("./index.html-C1pEeSKj.js"),__vite__mapDeps([250,1])),meta:{y:"p",t:"课程复习 分类",I:!1}}],["/category/%E6%95%B0%E5%AD%A6%E5%9F%BA%E7%A1%80/",{loader:()=>u(()=>import("./index.html-BW2Eg_xk.js"),__vite__mapDeps([251,1])),meta:{y:"p",t:"数学基础 分类",I:!1}}],["/category/%E4%BF%A1%E5%8F%B7%E4%B8%8E%E7%B3%BB%E7%BB%9F/",{loader:()=>u(()=>import("./index.html-CeSaVVa5.js"),__vite__mapDeps([252,1])),meta:{y:"p",t:"信号与系统 分类",I:!1}}],["/category/cft%E9%A2%98%E7%9B%AE%E9%9A%8F%E7%AC%94/",{loader:()=>u(()=>import("./index.html-DgGQ5gpD.js"),__vite__mapDeps([253,1])),meta:{y:"p",t:"CFT题目随笔 分类",I:!1}}],["/category/%E5%8F%8D%E6%80%9D/",{loader:()=>u(()=>import("./index.html-CH7yuKjS.js"),__vite__mapDeps([254,1])),meta:{y:"p",t:"反思 分类",I:!1}}],["/category/%E7%AC%94%E8%AE%B0/",{loader:()=>u(()=>import("./index.html-CynyKREB.js"),__vite__mapDeps([255,1])),meta:{y:"p",t:"笔记 分类",I:!1}}],["/category/%E7%BF%BB%E8%AF%91/",{loader:()=>u(()=>import("./index.html-Bh8jXYS0.js"),__vite__mapDeps([256,1])),meta:{y:"p",t:"翻译 分类",I:!1}}],["/category/%E7%BB%83%E4%B9%A0/",{loader:()=>u(()=>import("./index.html-Cw5K9h2X.js"),__vite__mapDeps([257,1])),meta:{y:"p",t:"练习 分类",I:!1}}],["/category/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",{loader:()=>u(()=>import("./index.html-jLive8o5.js"),__vite__mapDeps([258,1])),meta:{y:"p",t:"计算机网络 分类",I:!1}}],["/category/os/",{loader:()=>u(()=>import("./index.html-RmKLNw9g.js"),__vite__mapDeps([259,1])),meta:{y:"p",t:"OS 分类",I:!1}}],["/category/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/",{loader:()=>u(()=>import("./index.html-BkkgvNzB.js"),__vite__mapDeps([260,1])),meta:{y:"p",t:"操作系统 分类",I:!1}}],["/category/three-easy-pieces/",{loader:()=>u(()=>import("./index.html-XrajQeKt.js"),__vite__mapDeps([261,1])),meta:{y:"p",t:"Three-Easy-Pieces 分类",I:!1}}],["/category/c__%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",{loader:()=>u(()=>import("./index.html-Bl-ktbzH.js"),__vite__mapDeps([262,1])),meta:{y:"p",t:"C++学习记录 分类",I:!1}}],["/category/c_%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",{loader:()=>u(()=>import("./index.html-Be3f18ZT.js"),__vite__mapDeps([263,1])),meta:{y:"p",t:"C#学习记录 分类",I:!1}}],["/category/golang/",{loader:()=>u(()=>import("./index.html-80sxlQGT.js"),__vite__mapDeps([264,1])),meta:{y:"p",t:"golang 分类",I:!1}}],["/category/rust/",{loader:()=>u(()=>import("./index.html-CmNUnl6C.js"),__vite__mapDeps([265,1])),meta:{y:"p",t:"rust 分类",I:!1}}],["/category/oi%E7%AE%97%E6%B3%95%E5%92%8C%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>u(()=>import("./index.html-oFANHxpV.js"),__vite__mapDeps([266,1])),meta:{y:"p",t:"OI算法和数据结构 分类",I:!1}}],["/category/oi%E7%BB%83%E4%B9%A0/",{loader:()=>u(()=>import("./index.html-C5-e8v7r.js"),__vite__mapDeps([267,1])),meta:{y:"p",t:"OI练习 分类",I:!1}}],["/tag/",{loader:()=>u(()=>import("./index.html-D9rdc1Rq.js"),__vite__mapDeps([268,1])),meta:{y:"p",t:"标签",I:!1}}],["/tag/rpc/",{loader:()=>u(()=>import("./index.html-K5X6tPKF.js"),__vite__mapDeps([269,1])),meta:{y:"p",t:"标签: RPC",I:!1}}],["/tag/idl/",{loader:()=>u(()=>import("./index.html-DW5_ZiPw.js"),__vite__mapDeps([270,1])),meta:{y:"p",t:"标签: IDL",I:!1}}],["/tag/thrift/",{loader:()=>u(()=>import("./index.html-C7F_7b5Q.js"),__vite__mapDeps([271,1])),meta:{y:"p",t:"标签: thrift",I:!1}}],["/tag/%E7%A1%AC%E4%BB%B6/",{loader:()=>u(()=>import("./index.html-87vFtU0a.js"),__vite__mapDeps([272,1])),meta:{y:"p",t:"标签: 硬件",I:!1}}],["/tag/%E5%B5%8C%E5%85%A5%E5%BC%8F/",{loader:()=>u(()=>import("./index.html-DBEPsKBc.js"),__vite__mapDeps([273,1])),meta:{y:"p",t:"标签: 嵌入式",I:!1}}],["/tag/verilog/",{loader:()=>u(()=>import("./index.html-CMrEIy-4.js"),__vite__mapDeps([274,1])),meta:{y:"p",t:"标签: verilog",I:!1}}],["/tag/%E9%9C%80%E6%B1%82/",{loader:()=>u(()=>import("./index.html-DLUgU9Qu.js"),__vite__mapDeps([275,1])),meta:{y:"p",t:"标签: 需求",I:!1}}],["/tag/%E9%A1%B9%E7%9B%AE%E7%AE%A1%E7%90%86/",{loader:()=>u(()=>import("./index.html-BI8f_XJ6.js"),__vite__mapDeps([276,1])),meta:{y:"p",t:"标签: 项目管理",I:!1}}],["/tag/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B/",{loader:()=>u(()=>import("./index.html-MzMw257Y.js"),__vite__mapDeps([277,1])),meta:{y:"p",t:"标签: 软件工程",I:!1}}],["/tag/se/",{loader:()=>u(()=>import("./index.html-CR8wv4_C.js"),__vite__mapDeps([278,1])),meta:{y:"p",t:"标签: SE",I:!1}}],["/tag/note/",{loader:()=>u(()=>import("./index.html-CfVCJNqt.js"),__vite__mapDeps([279,1])),meta:{y:"p",t:"标签: note",I:!1}}],["/tag/%E8%8B%B1%E8%AF%AD/",{loader:()=>u(()=>import("./index.html-BL-aTNq2.js"),__vite__mapDeps([280,1])),meta:{y:"p",t:"标签: 英语",I:!1}}],["/tag/%E8%AF%AD%E6%B3%95/",{loader:()=>u(()=>import("./index.html-Dq8gWSFV.js"),__vite__mapDeps([281,1])),meta:{y:"p",t:"标签: 语法",I:!1}}],["/tag/%E4%B9%90%E7%90%86/",{loader:()=>u(()=>import("./index.html-BWrbhBBk.js"),__vite__mapDeps([282,1])),meta:{y:"p",t:"标签: 乐理",I:!1}}],["/tag/%E6%B8%B8%E6%88%8F%E7%BC%96%E7%A8%8B/",{loader:()=>u(()=>import("./index.html-DekoO5-g.js"),__vite__mapDeps([283,1])),meta:{y:"p",t:"标签: 游戏编程",I:!1}}],["/tag/unity/",{loader:()=>u(()=>import("./index.html-D9Nb36g2.js"),__vite__mapDeps([284,1])),meta:{y:"p",t:"标签: unity",I:!1}}],["/tag/%E5%9C%B0%E5%9B%BE%E7%94%9F%E6%88%90/",{loader:()=>u(()=>import("./index.html-CVUI1SoC.js"),__vite__mapDeps([285,1])),meta:{y:"p",t:"标签: 地图生成",I:!1}}],["/tag/linux/",{loader:()=>u(()=>import("./index.html-Dwz-XtUK.js"),__vite__mapDeps([286,1])),meta:{y:"p",t:"标签: Linux",I:!1}}],["/tag/ubuntu/",{loader:()=>u(()=>import("./index.html-v7zwhSqy.js"),__vite__mapDeps([287,1])),meta:{y:"p",t:"标签: ubuntu",I:!1}}],["/tag/scim/",{loader:()=>u(()=>import("./index.html-DjBejrwY.js"),__vite__mapDeps([288,1])),meta:{y:"p",t:"标签: SCIM",I:!1}}],["/tag/%E8%BE%93%E5%85%A5%E6%B3%95/",{loader:()=>u(()=>import("./index.html-BqCzXJy7.js"),__vite__mapDeps([289,1])),meta:{y:"p",t:"标签: 输入法",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E6%B5%81%E5%88%86%E6%9E%90/",{loader:()=>u(()=>import("./index.html-Czm2gDTD.js"),__vite__mapDeps([290,1])),meta:{y:"p",t:"标签: 数据流分析",I:!1}}],["/tag/compiler/",{loader:()=>u(()=>import("./index.html-CI5e-I_N.js"),__vite__mapDeps([291,1])),meta:{y:"p",t:"标签: compiler",I:!1}}],["/tag/%E4%BB%A3%E7%A0%81%E4%BC%98%E5%8C%96/",{loader:()=>u(()=>import("./index.html-CfZ7t_6A.js"),__vite__mapDeps([292,1])),meta:{y:"p",t:"标签: 代码优化",I:!1}}],["/tag/%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83/",{loader:()=>u(()=>import("./index.html-I5a7DAHw.js"),__vite__mapDeps([293,1])),meta:{y:"p",t:"标签: 编码规范",I:!1}}],["/tag/%E4%BB%A3%E7%A0%81%E8%83%BD%E5%8A%9B/",{loader:()=>u(()=>import("./index.html-OTQbAAjs.js"),__vite__mapDeps([294,1])),meta:{y:"p",t:"标签: 代码能力",I:!1}}],["/tag/%E9%9A%8F%E7%AC%94/",{loader:()=>u(()=>import("./index.html-be8EdQPH.js"),__vite__mapDeps([295,1])),meta:{y:"p",t:"标签: 随笔",I:!1}}],["/tag/%E6%84%9F%E6%83%B3/",{loader:()=>u(()=>import("./index.html-CoPcOchj.js"),__vite__mapDeps([296,1])),meta:{y:"p",t:"标签: 感想",I:!1}}],["/tag/%E5%8A%A8%E7%94%BB/",{loader:()=>u(()=>import("./index.html-B4gz7FId.js"),__vite__mapDeps([297,1])),meta:{y:"p",t:"标签: 动画",I:!1}}],["/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9B%BE%E5%BD%A2/",{loader:()=>u(()=>import("./index.html-BzCPMW5q.js"),__vite__mapDeps([298,1])),meta:{y:"p",t:"标签: 计算机图形",I:!1}}],["/tag/%E6%B8%B2%E6%9F%93/",{loader:()=>u(()=>import("./index.html-CSuc6-9E.js"),__vite__mapDeps([299,1])),meta:{y:"p",t:"标签: 渲染",I:!1}}],["/tag/cv/",{loader:()=>u(()=>import("./index.html-CpWA--1K.js"),__vite__mapDeps([300,1])),meta:{y:"p",t:"标签: CV",I:!1}}],["/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E8%A7%86%E8%A7%89/",{loader:()=>u(()=>import("./index.html-DkwOJ8gT.js"),__vite__mapDeps([301,1])),meta:{y:"p",t:"标签: 计算机视觉",I:!1}}],["/tag/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/",{loader:()=>u(()=>import("./index.html-BiFqdmPh.js"),__vite__mapDeps([302,1])),meta:{y:"p",t:"标签: 机器学习",I:!1}}],["/tag/em%E7%AE%97%E6%B3%95/",{loader:()=>u(()=>import("./index.html-Ckx9JQVq.js"),__vite__mapDeps([303,1])),meta:{y:"p",t:"标签: EM算法",I:!1}}],["/tag/math/",{loader:()=>u(()=>import("./index.html-rTuGy-9c.js"),__vite__mapDeps([304,1])),meta:{y:"p",t:"标签: math",I:!1}}],["/tag/hmm/",{loader:()=>u(()=>import("./index.html-DJf1OXye.js"),__vite__mapDeps([305,1])),meta:{y:"p",t:"标签: HMM",I:!1}}],["/tag/machine-learning/",{loader:()=>u(()=>import("./index.html-BX1fOyjp.js"),__vite__mapDeps([306,1])),meta:{y:"p",t:"标签: machine learning",I:!1}}],["/tag/svm/",{loader:()=>u(()=>import("./index.html-DkAmWhvB.js"),__vite__mapDeps([307,1])),meta:{y:"p",t:"标签: SVM",I:!1}}],["/tag/mechine-learning/",{loader:()=>u(()=>import("./index.html-D_eRF7O4.js"),__vite__mapDeps([308,1])),meta:{y:"p",t:"标签: mechine learning",I:!1}}],["/tag/decision-tree/",{loader:()=>u(()=>import("./index.html-Co6mOBdP.js"),__vite__mapDeps([309,1])),meta:{y:"p",t:"标签: decision tree",I:!1}}],["/tag/algorithm/",{loader:()=>u(()=>import("./index.html-BCOPo00s.js"),__vite__mapDeps([310,1])),meta:{y:"p",t:"标签: algorithm",I:!1}}],["/tag/perceptron/",{loader:()=>u(()=>import("./index.html-BgSvWbJw.js"),__vite__mapDeps([311,1])),meta:{y:"p",t:"标签: perceptron",I:!1}}],["/tag/nlp/",{loader:()=>u(()=>import("./index.html-DVvOggZb.js"),__vite__mapDeps([312,1])),meta:{y:"p",t:"标签: nlp",I:!1}}],["/tag/%E8%87%AA%E7%84%B6%E8%AF%AD%E8%A8%80%E5%A4%84%E7%90%86/",{loader:()=>u(()=>import("./index.html-DA-zxAuZ.js"),__vite__mapDeps([313,1])),meta:{y:"p",t:"标签: 自然语言处理",I:!1}}],["/tag/%E4%BA%8C%E8%BF%9B%E5%88%B6/",{loader:()=>u(()=>import("./index.html-De5Dsgza.js"),__vite__mapDeps([314,1])),meta:{y:"p",t:"标签: 二进制",I:!1}}],["/tag/%E7%BC%96%E7%A0%81/",{loader:()=>u(()=>import("./index.html-DAjNmU-c.js"),__vite__mapDeps([315,1])),meta:{y:"p",t:"标签: 编码",I:!1}}],["/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F/",{loader:()=>u(()=>import("./index.html-BGyO0aFL.js"),__vite__mapDeps([316,1])),meta:{y:"p",t:"标签: 计算机系统",I:!1}}],["/tag/%E6%B1%87%E7%BC%96/",{loader:()=>u(()=>import("./index.html-BaIy3DNG.js"),__vite__mapDeps([317,1])),meta:{y:"p",t:"标签: 汇编",I:!1}}],["/tag/cpu%E5%8E%9F%E7%90%86/",{loader:()=>u(()=>import("./index.html-Bjex-csb.js"),__vite__mapDeps([318,1])),meta:{y:"p",t:"标签: cpu原理",I:!1}}],["/tag/%E4%BC%98%E5%8C%96%E7%A8%8B%E5%BA%8F%E6%80%A7%E8%83%BD/",{loader:()=>u(()=>import("./index.html-Bm8cWUlM.js"),__vite__mapDeps([319,1])),meta:{y:"p",t:"标签: 优化程序性能",I:!1}}],["/tag/%E7%BC%96%E8%AF%91%E5%99%A8%E4%BC%98%E5%8C%96/",{loader:()=>u(()=>import("./index.html-MKGm3hPg.js"),__vite__mapDeps([320,1])),meta:{y:"p",t:"标签: 编译器优化",I:!1}}],["/tag/operating-system/",{loader:()=>u(()=>import("./index.html-BcfFueII.js"),__vite__mapDeps([321,1])),meta:{y:"p",t:"标签: operating-system",I:!1}}],["/tag/%E9%93%BE%E6%8E%A5/",{loader:()=>u(()=>import("./index.html-DwSq8asp.js"),__vite__mapDeps([322,1])),meta:{y:"p",t:"标签: 链接",I:!1}}],["/tag/%E5%BC%82%E5%B8%B8%E6%8E%A7%E5%88%B6%E6%B5%81/",{loader:()=>u(()=>import("./index.html-7QnWKy8w.js"),__vite__mapDeps([323,1])),meta:{y:"p",t:"标签: 异常控制流",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E5%BA%93/",{loader:()=>u(()=>import("./index.html-B5n1Kf49.js"),__vite__mapDeps([324,1])),meta:{y:"p",t:"标签: 数据库",I:!1}}],["/tag/mysql/",{loader:()=>u(()=>import("./index.html-6UuW-1DL.js"),__vite__mapDeps([325,1])),meta:{y:"p",t:"标签: mysql",I:!1}}],["/tag/database/",{loader:()=>u(()=>import("./index.html-BEh9kscb.js"),__vite__mapDeps([326,1])),meta:{y:"p",t:"标签: database",I:!1}}],["/tag/sql/",{loader:()=>u(()=>import("./index.html-1apFzJ2G.js"),__vite__mapDeps([327,1])),meta:{y:"p",t:"标签: SQL",I:!1}}],["/tag/er-model/",{loader:()=>u(()=>import("./index.html-18X2XkUg.js"),__vite__mapDeps([328,1])),meta:{y:"p",t:"标签: ER-model",I:!1}}],["/tag/er-diagram/",{loader:()=>u(()=>import("./index.html-D-lKlWob.js"),__vite__mapDeps([329,1])),meta:{y:"p",t:"标签: ER-diagram",I:!1}}],["/tag/schema/",{loader:()=>u(()=>import("./index.html-D4jroNx9.js"),__vite__mapDeps([330,1])),meta:{y:"p",t:"标签: schema",I:!1}}],["/tag/storage/",{loader:()=>u(()=>import("./index.html-C7Ex23N4.js"),__vite__mapDeps([331,1])),meta:{y:"p",t:"标签: storage",I:!1}}],["/tag/index/",{loader:()=>u(()=>import("./index.html-e2sLqEwO.js"),__vite__mapDeps([332,1])),meta:{y:"p",t:"标签: index",I:!1}}],["/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BB%84%E6%88%90%E5%8E%9F%E7%90%86/",{loader:()=>u(()=>import("./index.html-C3kFf1tX.js"),__vite__mapDeps([333,1])),meta:{y:"p",t:"标签: 计算机组成原理",I:!1}}],["/tag/%E8%80%83%E7%A0%94/",{loader:()=>u(()=>import("./index.html-ovl1rKU_.js"),__vite__mapDeps([334,1])),meta:{y:"p",t:"标签: 考研",I:!1}}],["/tag/os/",{loader:()=>u(()=>import("./index.html-BOBhhl9l.js"),__vite__mapDeps([335,1])),meta:{y:"p",t:"标签: OS",I:!1}}],["/tag/%E7%BC%93%E5%AD%98/",{loader:()=>u(()=>import("./index.html-BJ2uRL3J.js"),__vite__mapDeps([336,1])),meta:{y:"p",t:"标签: 缓存",I:!1}}],["/tag/%E8%AE%A1%E7%BB%84%E5%8E%9F%E7%90%86/",{loader:()=>u(()=>import("./index.html-DPewQIZ1.js"),__vite__mapDeps([337,1])),meta:{y:"p",t:"标签: 计组原理",I:!1}}],["/tag/computer/",{loader:()=>u(()=>import("./index.html-BMd5dim_.js"),__vite__mapDeps([338,1])),meta:{y:"p",t:"标签: computer",I:!1}}],["/tag/organization/",{loader:()=>u(()=>import("./index.html-Wye7wgHt.js"),__vite__mapDeps([339,1])),meta:{y:"p",t:"标签: organization",I:!1}}],["/tag/machine/",{loader:()=>u(()=>import("./index.html-B7v2q-ZZ.js"),__vite__mapDeps([340,1])),meta:{y:"p",t:"标签: machine",I:!1}}],["/tag/code/",{loader:()=>u(()=>import("./index.html-Cs4Qvgq9.js"),__vite__mapDeps([341,1])),meta:{y:"p",t:"标签: code",I:!1}}],["/tag/%E8%AF%8D%E6%B3%95%E5%88%86%E6%9E%90/",{loader:()=>u(()=>import("./index.html-DEeH0O8Z.js"),__vite__mapDeps([342,1])),meta:{y:"p",t:"标签: 词法分析",I:!1}}],["/tag/%E8%AF%AD%E6%B3%95%E5%88%86%E6%9E%90/",{loader:()=>u(()=>import("./index.html-FWx7IXp1.js"),__vite__mapDeps([343,1])),meta:{y:"p",t:"标签: 语法分析",I:!1}}],["/tag/%E8%AF%AD%E4%B9%89%E5%88%86%E6%9E%90/",{loader:()=>u(()=>import("./index.html-gm7BOO_v.js"),__vite__mapDeps([344,1])),meta:{y:"p",t:"标签: 语义分析",I:!1}}],["/tag/%E4%B8%AD%E9%97%B4%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90/",{loader:()=>u(()=>import("./index.html-B1wRO-mg.js"),__vite__mapDeps([345,1])),meta:{y:"p",t:"标签: 中间代码生成",I:!1}}],["/tag/%E9%9D%99%E6%80%81%E5%88%86%E6%9E%90/",{loader:()=>u(()=>import("./index.html-BVx0j6Dw.js"),__vite__mapDeps([346,1])),meta:{y:"p",t:"标签: 静态分析",I:!1}}],["/tag/%E7%89%B9%E6%80%A7/",{loader:()=>u(()=>import("./index.html-qQVeSLZ3.js"),__vite__mapDeps([347,1])),meta:{y:"p",t:"标签: 特性",I:!1}}],["/tag/c_/",{loader:()=>u(()=>import("./index.html-Daj48wSi.js"),__vite__mapDeps([348,1])),meta:{y:"p",t:"标签: c#",I:!1}}],["/tag/leetcode/",{loader:()=>u(()=>import("./index.html-CdMYpWc4.js"),__vite__mapDeps([349,1])),meta:{y:"p",t:"标签: Leetcode",I:!1}}],["/tag/%E5%BD%A2%E5%BC%8F%E8%AF%AD%E8%A8%80/",{loader:()=>u(()=>import("./index.html-DGH4XqAU.js"),__vite__mapDeps([350,1])),meta:{y:"p",t:"标签: 形式语言",I:!1}}],["/tag/%E8%87%AA%E5%8A%A8%E6%9C%BA/",{loader:()=>u(()=>import("./index.html-MZ8IHNse.js"),__vite__mapDeps([351,1])),meta:{y:"p",t:"标签: 自动机",I:!1}}],["/tag/%E8%AF%AD%E8%A8%80/",{loader:()=>u(()=>import("./index.html-CnLQqw5u.js"),__vite__mapDeps([352,1])),meta:{y:"p",t:"标签: 语言",I:!1}}],["/tag/%E7%A6%BB%E6%95%A3%E6%95%B0%E5%AD%A6/",{loader:()=>u(()=>import("./index.html-EgFIiqdH.js"),__vite__mapDeps([353,1])),meta:{y:"p",t:"标签: 离散数学",I:!1}}],["/tag/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%90%86%E8%AE%BA/",{loader:()=>u(()=>import("./index.html-DcgsZ81e.js"),__vite__mapDeps([354,1])),meta:{y:"p",t:"标签: 计算机理论",I:!1}}],["/tag/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/",{loader:()=>u(()=>import("./index.html-avui_b9T.js"),__vite__mapDeps([355,1])),meta:{y:"p",t:"标签: 数据结构",I:!1}}],["/tag/%E6%A0%91/",{loader:()=>u(()=>import("./index.html-B_bnnP1_.js"),__vite__mapDeps([356,1])),meta:{y:"p",t:"标签: 树",I:!1}}],["/tag/%E5%B9%B3%E8%A1%A1%E6%A0%91/",{loader:()=>u(()=>import("./index.html-DmGBVChs.js"),__vite__mapDeps([357,1])),meta:{y:"p",t:"标签: 平衡树",I:!1}}],["/tag/%E7%AE%97%E6%B3%95/",{loader:()=>u(()=>import("./index.html-Bey33Mcm.js"),__vite__mapDeps([358,1])),meta:{y:"p",t:"标签: 算法",I:!1}}],["/tag/%E5%88%86%E6%B2%BB/",{loader:()=>u(()=>import("./index.html-BS_frrHh.js"),__vite__mapDeps([359,1])),meta:{y:"p",t:"标签: 分治",I:!1}}],["/tag/%E4%B8%BB%E5%AE%9A%E7%90%86/",{loader:()=>u(()=>import("./index.html-6-fzcPnB.js"),__vite__mapDeps([360,1])),meta:{y:"p",t:"标签: 主定理",I:!1}}],["/tag/design-pattern/",{loader:()=>u(()=>import("./index.html-UdKW6ArY.js"),__vite__mapDeps([361,1])),meta:{y:"p",t:"标签: design-pattern",I:!1}}],["/tag/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/",{loader:()=>u(()=>import("./index.html-CPKzuRGY.js"),__vite__mapDeps([362,1])),meta:{y:"p",t:"标签: 面向对象",I:!1}}],["/tag/%E6%95%B0%E5%AD%A6/",{loader:()=>u(()=>import("./index.html-B_FI2_fH.js"),__vite__mapDeps([363,1])),meta:{y:"p",t:"标签: 数学",I:!1}}],["/tag/%E6%A6%82%E7%8E%87%E8%AE%BA/",{loader:()=>u(()=>import("./index.html-CPcrVMol.js"),__vite__mapDeps([364,1])),meta:{y:"p",t:"标签: 概率论",I:!1}}],["/tag/convolution/",{loader:()=>u(()=>import("./index.html-DAOgY0UG.js"),__vite__mapDeps([365,1])),meta:{y:"p",t:"标签: convolution",I:!1}}],["/tag/signal/",{loader:()=>u(()=>import("./index.html-CUWrR3Tc.js"),__vite__mapDeps([366,1])),meta:{y:"p",t:"标签: signal",I:!1}}],["/tag/system/",{loader:()=>u(()=>import("./index.html-CZChOrMa.js"),__vite__mapDeps([367,1])),meta:{y:"p",t:"标签: system",I:!1}}],["/tag/special-function/",{loader:()=>u(()=>import("./index.html-D4TWplS_.js"),__vite__mapDeps([368,1])),meta:{y:"p",t:"标签: special function",I:!1}}],["/tag/fourier-transform/",{loader:()=>u(()=>import("./index.html-Bx3gG-Gb.js"),__vite__mapDeps([369,1])),meta:{y:"p",t:"标签: fourier transform",I:!1}}],["/tag/ctf/",{loader:()=>u(()=>import("./index.html-B3OIvPa0.js"),__vite__mapDeps([370,1])),meta:{y:"p",t:"标签: CTF",I:!1}}],["/tag/linux/",{loader:()=>u(()=>import("./index.html-Dwz-XtUK.js"),__vite__mapDeps([286,1])),meta:{y:"p",t:"标签: linux",I:!1}}],["/tag/upload/",{loader:()=>u(()=>import("./index.html-DYrD4BHw.js"),__vite__mapDeps([371,1])),meta:{y:"p",t:"标签: upload",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E6%94%BB%E5%87%BB/",{loader:()=>u(()=>import("./index.html-Ch0XfCnF.js"),__vite__mapDeps([372,1])),meta:{y:"p",t:"标签: 文件上传攻击",I:!1}}],["/tag/computer-network/",{loader:()=>u(()=>import("./index.html-CT9t0dnx.js"),__vite__mapDeps([373,1])),meta:{y:"p",t:"标签: Computer-Network",I:!1}}],["/tag/c%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",{loader:()=>u(()=>import("./index.html-Gh0TXNa-.js"),__vite__mapDeps([374,1])),meta:{y:"p",t:"标签: C计算机网络",I:!1}}],["/tag/wireshark/",{loader:()=>u(()=>import("./index.html-BltrQVj2.js"),__vite__mapDeps([375,1])),meta:{y:"p",t:"标签: wireshark",I:!1}}],["/tag/http/",{loader:()=>u(()=>import("./index.html-u9IOdlWG.js"),__vite__mapDeps([376,1])),meta:{y:"p",t:"标签: HTTP",I:!1}}],["/tag/dns/",{loader:()=>u(()=>import("./index.html-husfknpy.js"),__vite__mapDeps([377,1])),meta:{y:"p",t:"标签: DNS",I:!1}}],["/tag/tcp/",{loader:()=>u(()=>import("./index.html-BA1hHPpV.js"),__vite__mapDeps([378,1])),meta:{y:"p",t:"标签: TCP",I:!1}}],["/tag/process/",{loader:()=>u(()=>import("./index.html-C1_8u6HH.js"),__vite__mapDeps([379,1])),meta:{y:"p",t:"标签: process",I:!1}}],["/tag/thread/",{loader:()=>u(()=>import("./index.html-Cu_8e1PX.js"),__vite__mapDeps([380,1])),meta:{y:"p",t:"标签: thread",I:!1}}],["/tag/operating-system/",{loader:()=>u(()=>import("./index.html-BcfFueII.js"),__vite__mapDeps([321,1])),meta:{y:"p",t:"标签: Operating system",I:!1}}],["/tag/cpu-scheduling/",{loader:()=>u(()=>import("./index.html-DuXrpdAq.js"),__vite__mapDeps([381,1])),meta:{y:"p",t:"标签: CPU Scheduling",I:!1}}],["/tag/deadlock/",{loader:()=>u(()=>import("./index.html-D7y4bOb8.js"),__vite__mapDeps([382,1])),meta:{y:"p",t:"标签: deadlock",I:!1}}],["/tag/synchronization/",{loader:()=>u(()=>import("./index.html-DBHkvF_m.js"),__vite__mapDeps([383,1])),meta:{y:"p",t:"标签: synchronization",I:!1}}],["/tag/memory-management/",{loader:()=>u(()=>import("./index.html-B2J7pDFE.js"),__vite__mapDeps([384,1])),meta:{y:"p",t:"标签: memory-management",I:!1}}],["/tag/storage-management/",{loader:()=>u(()=>import("./index.html-Bt6IVqr2.js"),__vite__mapDeps([385,1])),meta:{y:"p",t:"标签: storage-management",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E7%A9%BA%E9%97%B4/",{loader:()=>u(()=>import("./index.html-Ayy-Kp-E.js"),__vite__mapDeps([386,1])),meta:{y:"p",t:"标签: 内存空间",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E8%99%9A%E6%8B%9F%E5%8C%96/",{loader:()=>u(()=>import("./index.html-KeePoUb0.js"),__vite__mapDeps([387,1])),meta:{y:"p",t:"标签: 内存虚拟化",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E5%9C%B0%E5%9D%80/",{loader:()=>u(()=>import("./index.html-CtYn8dAR.js"),__vite__mapDeps([388,1])),meta:{y:"p",t:"标签: 内存地址",I:!1}}],["/tag/cpu/",{loader:()=>u(()=>import("./index.html-VYHcyder.js"),__vite__mapDeps([389,1])),meta:{y:"p",t:"标签: cpu",I:!1}}],["/tag/%E8%BF%9B%E7%A8%8B%E8%B0%83%E5%BA%A6/",{loader:()=>u(()=>import("./index.html-DyNKXyx4.js"),__vite__mapDeps([390,1])),meta:{y:"p",t:"标签: 进程调度",I:!1}}],["/tag/%E5%A4%9A%E7%BA%A7%E5%8F%8D%E9%A6%88%E9%98%9F%E5%88%97/",{loader:()=>u(()=>import("./index.html-Bz1spumK.js"),__vite__mapDeps([391,1])),meta:{y:"p",t:"标签: 多级反馈队列",I:!1}}],["/tag/%E8%B0%83%E5%BA%A6%E7%AE%97%E6%B3%95/",{loader:()=>u(()=>import("./index.html-uPAhJhuq.js"),__vite__mapDeps([392,1])),meta:{y:"p",t:"标签: 调度算法",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/",{loader:()=>u(()=>import("./index.html-B4bwLMOZ.js"),__vite__mapDeps([393,1])),meta:{y:"p",t:"标签: 内存管理",I:!1}}],["/tag/%E6%AE%B5%E5%BC%8F%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/",{loader:()=>u(()=>import("./index.html-CPW4-50O.js"),__vite__mapDeps([394,1])),meta:{y:"p",t:"标签: 段式内存管理",I:!1}}],["/tag/%E6%AE%B5%E5%BC%8F%E5%86%85%E5%AD%98/",{loader:()=>u(()=>import("./index.html-DmpprgTI.js"),__vite__mapDeps([395,1])),meta:{y:"p",t:"标签: 段式内存",I:!1}}],["/tag/%E7%9B%B4%E6%8E%A5%E8%BF%90%E8%A1%8C%E7%A8%8B%E5%BA%8F/",{loader:()=>u(()=>import("./index.html-CVtbuE6k.js"),__vite__mapDeps([396,1])),meta:{y:"p",t:"标签: 直接运行程序",I:!1}}],["/tag/%E8%BF%9B%E7%A8%8B/",{loader:()=>u(()=>import("./index.html-xtkUy_jE.js"),__vite__mapDeps([397,1])),meta:{y:"p",t:"标签: 进程",I:!1}}],["/tag/%E5%86%85%E5%AD%98/",{loader:()=>u(()=>import("./index.html-CyTo4GL2.js"),__vite__mapDeps([398,1])),meta:{y:"p",t:"标签: 内存",I:!1}}],["/tag/%E7%A9%BA%E9%97%B2%E5%86%85%E5%AD%98/",{loader:()=>u(()=>import("./index.html-DPkWzYrr.js"),__vite__mapDeps([399,1])),meta:{y:"p",t:"标签: 空闲内存",I:!1}}],["/tag/%E7%A9%BA%E9%97%B2%E9%93%BE%E8%A1%A8/",{loader:()=>u(()=>import("./index.html-C7ckP6wq.js"),__vite__mapDeps([400,1])),meta:{y:"p",t:"标签: 空闲链表",I:!1}}],["/tag/%E7%A2%8E%E7%89%87/",{loader:()=>u(()=>import("./index.html-BCYoSY2a.js"),__vite__mapDeps([401,1])),meta:{y:"p",t:"标签: 碎片",I:!1}}],["/tag/%E5%86%85%E5%AD%98%E5%88%86%E9%85%8D/",{loader:()=>u(()=>import("./index.html-Cy9kVM6C.js"),__vite__mapDeps([402,1])),meta:{y:"p",t:"标签: 内存分配",I:!1}}],["/tag/%E5%9C%B0%E5%9D%80%E7%BF%BB%E8%AF%91/",{loader:()=>u(()=>import("./index.html-D5_gv3T_.js"),__vite__mapDeps([403,1])),meta:{y:"p",t:"标签: 地址翻译",I:!1}}],["/tag/%E5%88%86%E9%A1%B5/",{loader:()=>u(()=>import("./index.html-rif8DX1U.js"),__vite__mapDeps([404,1])),meta:{y:"p",t:"标签: 分页",I:!1}}],["/tag/api/",{loader:()=>u(()=>import("./index.html-CVk_O--p.js"),__vite__mapDeps([405,1])),meta:{y:"p",t:"标签: API",I:!1}}],["/tag/unix/",{loader:()=>u(()=>import("./index.html-BdiC6vqT.js"),__vite__mapDeps([406,1])),meta:{y:"p",t:"标签: UNIX",I:!1}}],["/tag/virtualization/",{loader:()=>u(()=>import("./index.html-CYswbWXN.js"),__vite__mapDeps([407,1])),meta:{y:"p",t:"标签: Virtualization",I:!1}}],["/tag/%E4%B8%8A%E4%B8%8B%E6%96%87%E5%88%87%E6%8D%A2/",{loader:()=>u(()=>import("./index.html-DiA_xOXs.js"),__vite__mapDeps([408,1])),meta:{y:"p",t:"标签: 上下文切换",I:!1}}],["/tag/%E5%88%86%E6%AF%94%E4%BE%8B%E8%B0%83%E5%BA%A6/",{loader:()=>u(()=>import("./index.html-xzdRZiUz.js"),__vite__mapDeps([409,1])),meta:{y:"p",t:"标签: 分比例调度",I:!1}}],["/tag/%E5%BD%A9%E7%A5%A8%E8%B0%83%E5%BA%A6/",{loader:()=>u(()=>import("./index.html-BoOq4wOk.js"),__vite__mapDeps([410,1])),meta:{y:"p",t:"标签: 彩票调度",I:!1}}],["/tag/stride-scheduling/",{loader:()=>u(()=>import("./index.html-Ci8vFgj9.js"),__vite__mapDeps([411,1])),meta:{y:"p",t:"标签: Stride Scheduling",I:!1}}],["/tag/three-easy-pieces/",{loader:()=>u(()=>import("./index.html-XhP8-xAj.js"),__vite__mapDeps([412,1])),meta:{y:"p",t:"标签: Three-Easy-Pieces",I:!1}}],["/tag/vaxvms/",{loader:()=>u(()=>import("./index.html-uEJbHMdq.js"),__vite__mapDeps([413,1])),meta:{y:"p",t:"标签: VAX/VMS",I:!1}}],["/tag/concurrency/",{loader:()=>u(()=>import("./index.html-DdFrxAh-.js"),__vite__mapDeps([414,1])),meta:{y:"p",t:"标签: concurrency",I:!1}}],["/tag/data-structure/",{loader:()=>u(()=>import("./index.html-CiCIou8q.js"),__vite__mapDeps([415,1])),meta:{y:"p",t:"标签: data-structure",I:!1}}],["/tag/file-system/",{loader:()=>u(()=>import("./index.html-vlvxeuaQ.js"),__vite__mapDeps([416,1])),meta:{y:"p",t:"标签: file-system",I:!1}}],["/tag/c__/",{loader:()=>u(()=>import("./index.html-DEj6kNDW.js"),__vite__mapDeps([417,1])),meta:{y:"p",t:"标签: C++",I:!1}}],["/tag/%E5%8A%A8%E6%80%81%E5%86%85%E5%AD%98/",{loader:()=>u(()=>import("./index.html-gc8pTyGa.js"),__vite__mapDeps([418,1])),meta:{y:"p",t:"标签: 动态内存",I:!1}}],["/tag/%E6%99%BA%E8%83%BD%E6%8C%87%E9%92%88/",{loader:()=>u(()=>import("./index.html-D367kdN1.js"),__vite__mapDeps([419,1])),meta:{y:"p",t:"标签: 智能指针",I:!1}}],["/tag/%E6%B5%85%E6%8B%B7%E8%B4%9D/",{loader:()=>u(()=>import("./index.html-BvSk7DuU.js"),__vite__mapDeps([420,1])),meta:{y:"p",t:"标签: 浅拷贝",I:!1}}],["/tag/%E6%B7%B1%E6%8B%B7%E8%B4%9D/",{loader:()=>u(()=>import("./index.html-Cr4h3Vsm.js"),__vite__mapDeps([421,1])),meta:{y:"p",t:"标签: 深拷贝",I:!1}}],["/tag/%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/",{loader:()=>u(()=>import("./index.html-D8lhrGPB.js"),__vite__mapDeps([422,1])),meta:{y:"p",t:"标签: 文件操作",I:!1}}],["/tag/io/",{loader:()=>u(()=>import("./index.html-BGx_xD8V.js"),__vite__mapDeps([423,1])),meta:{y:"p",t:"标签: IO",I:!1}}],["/tag/%E6%96%87%E4%BB%B6/",{loader:()=>u(()=>import("./index.html-BHTOAIZ5.js"),__vite__mapDeps([424,1])),meta:{y:"p",t:"标签: 文件",I:!1}}],["/tag/lambda%E8%A1%A8%E8%BE%BE%E5%BC%8F/",{loader:()=>u(()=>import("./index.html-oqQpcbDU.js"),__vite__mapDeps([425,1])),meta:{y:"p",t:"标签: Lambda表达式",I:!1}}],["/tag/c__%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/",{loader:()=>u(()=>import("./index.html-VUdZlxx_.js"),__vite__mapDeps([426,1])),meta:{y:"p",t:"标签: C++学习记录",I:!1}}],["/tag/%E5%AE%B9%E5%99%A8/",{loader:()=>u(()=>import("./index.html-CUV20JaD.js"),__vite__mapDeps([427,1])),meta:{y:"p",t:"标签: 容器",I:!1}}],["/tag/stl/",{loader:()=>u(()=>import("./index.html-6ALdFpTR.js"),__vite__mapDeps([428,1])),meta:{y:"p",t:"标签: STL",I:!1}}],["/tag/%E9%A1%BA%E5%BA%8F%E5%AE%B9%E5%99%A8/",{loader:()=>u(()=>import("./index.html-CnS0eP3c.js"),__vite__mapDeps([429,1])),meta:{y:"p",t:"标签: 顺序容器",I:!1}}],["/tag/%E5%85%B3%E8%81%94%E5%AE%B9%E5%99%A8/",{loader:()=>u(()=>import("./index.html-JG8qaMm-.js"),__vite__mapDeps([430,1])),meta:{y:"p",t:"标签: 关联容器",I:!1}}],["/tag/%E6%97%A0%E5%BA%8F%E5%AE%B9%E5%99%A8/",{loader:()=>u(()=>import("./index.html-CCMQpAaY.js"),__vite__mapDeps([431,1])),meta:{y:"p",t:"标签: 无序容器",I:!1}}],["/tag/oi/",{loader:()=>u(()=>import("./index.html-DZHvFjXO.js"),__vite__mapDeps([432,1])),meta:{y:"p",t:"标签: OI",I:!1}}],["/tag/%E7%BB%A7%E6%89%BF/",{loader:()=>u(()=>import("./index.html-C0fhYmdC.js"),__vite__mapDeps([433,1])),meta:{y:"p",t:"标签: 继承",I:!1}}],["/tag/%E9%A2%84%E5%A4%84%E7%90%86%E6%8C%87%E4%BB%A4/",{loader:()=>u(()=>import("./index.html-ChOnQPFL.js"),__vite__mapDeps([434,1])),meta:{y:"p",t:"标签: 预处理指令",I:!1}}],["/tag/%E9%A2%84%E5%A4%84%E7%90%86%E5%AE%8F/",{loader:()=>u(()=>import("./index.html-DyUchVjG.js"),__vite__mapDeps([435,1])),meta:{y:"p",t:"标签: 预处理宏",I:!1}}],["/tag/%E6%A8%A1%E6%9D%BF/",{loader:()=>u(()=>import("./index.html-JjYfsyL6.js"),__vite__mapDeps([436,1])),meta:{y:"p",t:"标签: 模板",I:!1}}],["/tag/%E7%BC%96%E8%AF%91/",{loader:()=>u(()=>import("./index.html-Ddx_arA7.js"),__vite__mapDeps([437,1])),meta:{y:"p",t:"标签: 编译",I:!1}}],["/tag/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%96%E8%AF%91/",{loader:()=>u(()=>import("./index.html-Be4crSNq.js"),__vite__mapDeps([438,1])),meta:{y:"p",t:"标签: 分布式编译",I:!1}}],["/tag/%E6%95%B0%E7%BB%84/",{loader:()=>u(()=>import("./index.html-COykkYlT.js"),__vite__mapDeps([439,1])),meta:{y:"p",t:"标签: 数组",I:!1}}],["/tag/golang/",{loader:()=>u(()=>import("./index.html-CmLMxjVQ.js"),__vite__mapDeps([440,1])),meta:{y:"p",t:"标签: golang",I:!1}}],["/tag/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/",{loader:()=>u(()=>import("./index.html-XnvLUbOr.js"),__vite__mapDeps([441,1])),meta:{y:"p",t:"标签: 编程语言",I:!1}}],["/tag/rust/",{loader:()=>u(()=>import("./index.html--Gwb7wtx.js"),__vite__mapDeps([442,1])),meta:{y:"p",t:"标签: rust",I:!1}}],["/tag/language/",{loader:()=>u(()=>import("./index.html-CO0fitgj.js"),__vite__mapDeps([443,1])),meta:{y:"p",t:"标签: language",I:!1}}],["/tag/basic/",{loader:()=>u(()=>import("./index.html-ClYxCVnL.js"),__vite__mapDeps([444,1])),meta:{y:"p",t:"标签: basic",I:!1}}],["/tag/%E4%BA%8C%E5%8F%89%E6%9F%A5%E6%89%BE%E6%A0%91/",{loader:()=>u(()=>import("./index.html-B2qSwIQx.js"),__vite__mapDeps([445,1])),meta:{y:"p",t:"标签: 二叉查找树",I:!1}}],["/tag/%E5%89%B2%E7%82%B9/",{loader:()=>u(()=>import("./index.html-DzwrxlCd.js"),__vite__mapDeps([446,1])),meta:{y:"p",t:"标签: 割点",I:!1}}],["/tag/tarjan/",{loader:()=>u(()=>import("./index.html-Bam73YcN.js"),__vite__mapDeps([447,1])),meta:{y:"p",t:"标签: Tarjan",I:!1}}],["/tag/%E5%9B%BE%E8%AE%BA/",{loader:()=>u(()=>import("./index.html-Bw3HVdEj.js"),__vite__mapDeps([448,1])),meta:{y:"p",t:"标签: 图论",I:!1}}],["/tag/%E4%BA%8C%E5%88%86/",{loader:()=>u(()=>import("./index.html-BL9r_mGT.js"),__vite__mapDeps([449,1])),meta:{y:"p",t:"标签: 二分",I:!1}}],["/tag/%E4%BA%8C%E5%88%86%E5%9B%BE/",{loader:()=>u(()=>import("./index.html-r1mcCJ8o.js"),__vite__mapDeps([450,1])),meta:{y:"p",t:"标签: 二分图",I:!1}}],["/tag/%E7%BD%91%E7%BB%9C%E6%B5%81/",{loader:()=>u(()=>import("./index.html-hXPEnk2R.js"),__vite__mapDeps([451,1])),meta:{y:"p",t:"标签: 网络流",I:!1}}],["/tag/%E5%8D%9A%E5%BC%88%E8%AE%BA/",{loader:()=>u(()=>import("./index.html-DtaYpVDn.js"),__vite__mapDeps([452,1])),meta:{y:"p",t:"标签: 博弈论",I:!1}}],["/tag/nim%E5%8D%9A%E5%BC%88/",{loader:()=>u(()=>import("./index.html-Bzu1VV42.js"),__vite__mapDeps([453,1])),meta:{y:"p",t:"标签: nim博弈",I:!1}}],["/tag/%E5%B7%B4%E4%BB%80%E5%8D%9A%E5%BC%88/",{loader:()=>u(()=>import("./index.html-BF8rHobl.js"),__vite__mapDeps([454,1])),meta:{y:"p",t:"标签: 巴什博弈",I:!1}}],["/tag/sg%E5%87%BD%E6%95%B0/",{loader:()=>u(()=>import("./index.html-Cwoce7De.js"),__vite__mapDeps([455,1])),meta:{y:"p",t:"标签: SG函数",I:!1}}],["/tag/%E4%BA%8C%E5%8F%89%E5%A0%86/",{loader:()=>u(()=>import("./index.html-DjOp_lOD.js"),__vite__mapDeps([456,1])),meta:{y:"p",t:"标签: 二叉堆",I:!1}}],["/tag/lca/",{loader:()=>u(()=>import("./index.html-CDe7Gnng.js"),__vite__mapDeps([457,1])),meta:{y:"p",t:"标签: LCA",I:!1}}],["/tag/%E6%A0%91%E4%B8%8A%E5%80%8D%E5%A2%9E/",{loader:()=>u(()=>import("./index.html-cbT3QOdO.js"),__vite__mapDeps([458,1])),meta:{y:"p",t:"标签: 树上倍增",I:!1}}],["/tag/%E5%B9%B6%E6%9F%A5%E9%9B%86/",{loader:()=>u(()=>import("./index.html-ClK0vFs1.js"),__vite__mapDeps([459,1])),meta:{y:"p",t:"标签: 并查集",I:!1}}],["/tag/%E9%9B%86%E5%90%88/",{loader:()=>u(()=>import("./index.html-_orULS1w.js"),__vite__mapDeps([460,1])),meta:{y:"p",t:"标签: 集合",I:!1}}],["/tag/st%E8%A1%A8/",{loader:()=>u(()=>import("./index.html-BuanDS99.js"),__vite__mapDeps([461,1])),meta:{y:"p",t:"标签: ST表",I:!1}}],["/tag/%E5%8C%BA%E9%97%B4%E6%9C%80%E5%A4%A7%E5%80%BC/",{loader:()=>u(()=>import("./index.html-Donr5uPr.js"),__vite__mapDeps([462,1])),meta:{y:"p",t:"标签: 区间最大值",I:!1}}],["/tag/%E7%BA%BF%E6%AE%B5%E6%A0%91/",{loader:()=>u(()=>import("./index.html-DjkwF7i5.js"),__vite__mapDeps([463,1])),meta:{y:"p",t:"标签: 线段树",I:!1}}],["/tag/%E5%8C%BA%E9%97%B4%E7%BB%B4%E6%8A%A4/",{loader:()=>u(()=>import("./index.html-q7tvmOW5.js"),__vite__mapDeps([464,1])),meta:{y:"p",t:"标签: 区间维护",I:!1}}],["/tag/%E6%9C%80%E5%B0%8F%E7%94%9F%E6%88%90%E6%A0%91/",{loader:()=>u(()=>import("./index.html-DIIqaX7f.js"),__vite__mapDeps([465,1])),meta:{y:"p",t:"标签: 最小生成树",I:!1}}],["/tag/kruskal/",{loader:()=>u(()=>import("./index.html-COk5uJDH.js"),__vite__mapDeps([466,1])),meta:{y:"p",t:"标签: Kruskal",I:!1}}],["/tag/prim/",{loader:()=>u(()=>import("./index.html-BNlbSLeP.js"),__vite__mapDeps([467,1])),meta:{y:"p",t:"标签: Prim",I:!1}}],["/tag/%E6%A0%91%E5%BD%A2%E6%95%B0%E7%BB%84/",{loader:()=>u(()=>import("./index.html-GCRmrLrG.js"),__vite__mapDeps([468,1])),meta:{y:"p",t:"标签: 树形数组",I:!1}}],["/tag/%E5%8C%BA%E9%97%B4%E6%9F%A5%E8%AF%A2/",{loader:()=>u(()=>import("./index.html-4haPB0Si.js"),__vite__mapDeps([469,1])),meta:{y:"p",t:"标签: 区间查询",I:!1}}],["/tag/%E5%89%8D%E7%BC%80%E5%92%8C/",{loader:()=>u(()=>import("./index.html-BQGOfwQw.js"),__vite__mapDeps([470,1])),meta:{y:"p",t:"标签: 前缀和",I:!1}}],["/tag/%E5%B7%AE%E5%88%86/",{loader:()=>u(()=>import("./index.html-EHeMk-7s.js"),__vite__mapDeps([471,1])),meta:{y:"p",t:"标签: 差分",I:!1}}],["/tag/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/",{loader:()=>u(()=>import("./index.html-BRUJqvZL.js"),__vite__mapDeps([472,1])),meta:{y:"p",t:"标签: 树链剖分",I:!1}}],["/tag/%E6%95%99%E5%AD%A6%E8%B5%84%E6%96%99/",{loader:()=>u(()=>import("./index.html-ON8qAd6L.js"),__vite__mapDeps([473,1])),meta:{y:"p",t:"标签: 教学资料",I:!1}}],["/tag/%E6%9C%80%E7%9F%AD%E8%B7%AF/",{loader:()=>u(()=>import("./index.html-CvpoFjuT.js"),__vite__mapDeps([474,1])),meta:{y:"p",t:"标签: 最短路",I:!1}}],["/tag/dijkstra/",{loader:()=>u(()=>import("./index.html-ChyCnrKi.js"),__vite__mapDeps([475,1])),meta:{y:"p",t:"标签: dijkstra",I:!1}}],["/tag/bellman-ford/",{loader:()=>u(()=>import("./index.html-CzX4FQuC.js"),__vite__mapDeps([476,1])),meta:{y:"p",t:"标签: Bellman-ford",I:!1}}],["/tag/spfa/",{loader:()=>u(()=>import("./index.html-BmuREkd3.js"),__vite__mapDeps([477,1])),meta:{y:"p",t:"标签: SPFA",I:!1}}],["/tag/%E6%9C%80%E5%A4%A7%E6%B5%81/",{loader:()=>u(()=>import("./index.html-CfNgN9Qa.js"),__vite__mapDeps([478,1])),meta:{y:"p",t:"标签: 最大流",I:!1}}],["/tag/%E6%9C%80%E5%A4%A7%E5%AD%97%E4%B8%B2%E5%92%8C/",{loader:()=>u(()=>import("./index.html-jit4fbxi.js"),__vite__mapDeps([479,1])),meta:{y:"p",t:"标签: 最大字串和",I:!1}}],["/tag/dp/",{loader:()=>u(()=>import("./index.html-CqiHWNll.js"),__vite__mapDeps([480,1])),meta:{y:"p",t:"标签: DP",I:!1}}],["/tag/%E7%9F%A9%E9%98%B5/",{loader:()=>u(()=>import("./index.html-Ci4lZj5I.js"),__vite__mapDeps([481,1])),meta:{y:"p",t:"标签: 矩阵",I:!1}}],["/tag/%E4%B8%8D%E7%AD%89%E5%BC%8F/",{loader:()=>u(()=>import("./index.html-RP03vGlW.js"),__vite__mapDeps([482,1])),meta:{y:"p",t:"标签: 不等式",I:!1}}],["/tag/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/",{loader:()=>u(()=>import("./index.html-BqqsXg35.js"),__vite__mapDeps([483,1])),meta:{y:"p",t:"标签: 优先队列",I:!1}}],["/tag/%E8%B4%AA%E5%BF%83/",{loader:()=>u(()=>import("./index.html-5J3InnHK.js"),__vite__mapDeps([484,1])),meta:{y:"p",t:"标签: 贪心",I:!1}}],["/tag/%E7%BA%BF%E6%80%A7/",{loader:()=>u(()=>import("./index.html-C5m61hq0.js"),__vite__mapDeps([485,1])),meta:{y:"p",t:"标签: 线性",I:!1}}],["/article/",{loader:()=>u(()=>import("./index.html-BSSLasJ6.js"),__vite__mapDeps([486,1])),meta:{y:"p",t:"文章",I:!1}}],["/star/",{loader:()=>u(()=>import("./index.html-D2fZU_uA.js"),__vite__mapDeps([487,1])),meta:{y:"p",t:"星标",I:!1}}],["/timeline/",{loader:()=>u(()=>import("./index.html-DiNL7wnc.js"),__vite__mapDeps([488,1])),meta:{y:"p",t:"时间轴",I:!1}}]]);/*!
  * vue-router v4.2.5
  * (c) 2023 Eduardo San Martin Morote
  * @license MIT
  */const bn=typeof window<"u";function bh(s){return s.__esModule||s[Symbol.toStringTag]==="Module"}const ds=Object.assign;function Ue(s,a){const n={};for(const t in a){const e=a[t];n[t]=fa(e)?e.map(s):s(e)}return n}const rt=()=>{},fa=Array.isArray,Eh=/\/$/,wh=s=>s.replace(Eh,"");function Ge(s,a,n="/"){let t,e={},l="",o="";const p=a.indexOf("#");let c=a.indexOf("?");return p<c&&p>=0&&(c=-1),c>-1&&(t=a.slice(0,c),l=a.slice(c+1,p>-1?p:a.length),e=s(l)),p>-1&&(t=t||a.slice(0,p),o=a.slice(p,a.length)),t=Ih(t??a,n),{fullPath:t+(l&&"?")+l+o,path:t,query:e,hash:o}}function xh(s,a){const n=a.query?s(a.query):"";return a.path+(n&&"?")+n+(a.hash||"")}function vp(s,a){return!a||!s.toLowerCase().startsWith(a.toLowerCase())?s:s.slice(a.length)||"/"}function Ah(s,a,n){const t=a.matched.length-1,e=n.matched.length-1;return t>-1&&t===e&&Bn(a.matched[t],n.matched[e])&&hr(a.params,n.params)&&s(a.query)===s(n.query)&&a.hash===n.hash}function Bn(s,a){return(s.aliasOf||s)===(a.aliasOf||a)}function hr(s,a){if(Object.keys(s).length!==Object.keys(a).length)return!1;for(const n in s)if(!Ch(s[n],a[n]))return!1;return!0}function Ch(s,a){return fa(s)?yp(s,a):fa(a)?yp(a,s):s===a}function yp(s,a){return fa(a)?s.length===a.length&&s.every((n,t)=>n===a[t]):s.length===1&&s[0]===a}function Ih(s,a){if(s.startsWith("/"))return s;if(!s)return a;const n=a.split("/"),t=s.split("/"),e=t[t.length-1];(e===".."||e===".")&&t.push("");let l=n.length-1,o,p;for(o=0;o<t.length;o++)if(p=t[o],p!==".")if(p==="..")l>1&&l--;else break;return n.slice(0,l).join("/")+"/"+t.slice(o-(o===t.length?1:0)).join("/")}var yt;(function(s){s.pop="pop",s.push="push"})(yt||(yt={}));var ct;(function(s){s.back="back",s.forward="forward",s.unknown=""})(ct||(ct={}));function Lh(s){if(!s)if(bn){const a=document.querySelector("base");s=a&&a.getAttribute("href")||"/",s=s.replace(/^\w+:\/\/[^\/]+/,"")}else s="/";return s[0]!=="/"&&s[0]!=="#"&&(s="/"+s),wh(s)}const Th=/^[^#]+#/;function Ph(s,a){return s.replace(Th,"#")+a}function Sh(s,a){const n=document.documentElement.getBoundingClientRect(),t=s.getBoundingClientRect();return{behavior:a.behavior,left:t.left-n.left-(a.left||0),top:t.top-n.top-(a.top||0)}}const we=()=>({left:window.pageXOffset,top:window.pageYOffset});function Oh(s){let a;if("el"in s){const n=s.el,t=typeof n=="string"&&n.startsWith("#"),e=typeof n=="string"?t?document.getElementById(n.slice(1)):document.querySelector(n):n;if(!e)return;a=Sh(e,s)}else a=s;"scrollBehavior"in document.documentElement.style?window.scrollTo(a):window.scrollTo(a.left!=null?a.left:window.pageXOffset,a.top!=null?a.top:window.pageYOffset)}function kp(s,a){return(history.state?history.state.position-a:-1)+s}const kl=new Map;function Dh(s,a){kl.set(s,a)}function Rh(s){const a=kl.get(s);return kl.delete(s),a}let Mh=()=>location.protocol+"//"+location.host;function gr(s,a){const{pathname:n,search:t,hash:e}=a,l=s.indexOf("#");if(l>-1){let p=e.includes(s.slice(l))?s.slice(l).length:1,c=e.slice(p);return c[0]!=="/"&&(c="/"+c),vp(c,"")}return vp(n,s)+t+e}function Vh(s,a,n,t){let e=[],l=[],o=null;const p=({state:h})=>{const g=gr(s,location),y=n.value,E=a.value;let w=0;if(h){if(n.value=g,a.value=h,o&&o===y){o=null;return}w=E?h.position-E.position:0}else t(g);e.forEach(k=>{k(n.value,y,{delta:w,type:yt.pop,direction:w?w>0?ct.forward:ct.back:ct.unknown})})};function c(){o=n.value}function r(h){e.push(h);const g=()=>{const y=e.indexOf(h);y>-1&&e.splice(y,1)};return l.push(g),g}function m(){const{history:h}=window;h.state&&h.replaceState(ds({},h.state,{scroll:we()}),"")}function d(){for(const h of l)h();l=[],window.removeEventListener("popstate",p),window.removeEventListener("beforeunload",m)}return window.addEventListener("popstate",p),window.addEventListener("beforeunload",m,{passive:!0}),{pauseListeners:c,listen:r,destroy:d}}function _p(s,a,n,t=!1,e=!1){return{back:s,current:a,forward:n,replaced:t,position:window.history.length,scroll:e?we():null}}function Bh(s){const{history:a,location:n}=window,t={value:gr(s,n)},e={value:a.state};e.value||l(t.value,{back:null,current:t.value,forward:null,position:a.length-1,replaced:!0,scroll:null},!0);function l(c,r,m){const d=s.indexOf("#"),h=d>-1?(n.host&&document.querySelector("base")?s:s.slice(d))+c:Mh()+s+c;try{a[m?"replaceState":"pushState"](r,"",h),e.value=r}catch(g){console.error(g),n[m?"replace":"assign"](h)}}function o(c,r){const m=ds({},a.state,_p(e.value.back,c,e.value.forward,!0),r,{position:e.value.position});l(c,m,!0),t.value=c}function p(c,r){const m=ds({},e.value,a.state,{forward:c,scroll:we()});l(m.current,m,!0);const d=ds({},_p(t.value,c,null),{position:m.position+1},r);l(c,d,!1),t.value=c}return{location:t,state:e,push:p,replace:o}}function zh(s){s=Lh(s);const a=Bh(s),n=Vh(s,a.state,a.location,a.replace);function t(l,o=!0){o||n.pauseListeners(),history.go(l)}const e=ds({location:"",base:s,go:t,createHref:Ph.bind(null,s)},a,n);return Object.defineProperty(e,"location",{enumerable:!0,get:()=>a.location.value}),Object.defineProperty(e,"state",{enumerable:!0,get:()=>a.state.value}),e}function Fh(s){return typeof s=="string"||s&&typeof s=="object"}function fr(s){return typeof s=="string"||typeof s=="symbol"}const Pa={path:"/",name:void 0,params:{},query:{},hash:"",fullPath:"/",matched:[],meta:{},redirectedFrom:void 0},vr=Symbol("");var bp;(function(s){s[s.aborted=4]="aborted",s[s.cancelled=8]="cancelled",s[s.duplicated=16]="duplicated"})(bp||(bp={}));function zn(s,a){return ds(new Error,{type:s,[vr]:!0},a)}function La(s,a){return s instanceof Error&&vr in s&&(a==null||!!(s.type&a))}const Ep="[^/]+?",$h={sensitive:!1,strict:!1,start:!0,end:!0},Hh=/[.+*?^${}()[\]/\\]/g;function Nh(s,a){const n=ds({},$h,a),t=[];let e=n.start?"^":"";const l=[];for(const r of s){const m=r.length?[]:[90];n.strict&&!r.length&&(e+="/");for(let d=0;d<r.length;d++){const h=r[d];let g=40+(n.sensitive?.25:0);if(h.type===0)d||(e+="/"),e+=h.value.replace(Hh,"\\$&"),g+=40;else if(h.type===1){const{value:y,repeatable:E,optional:w,regexp:k}=h;l.push({name:y,repeatable:E,optional:w});const C=k||Ep;if(C!==Ep){g+=10;try{new RegExp(`(${C})`)}catch(I){throw new Error(`Invalid custom RegExp for param "${y}" (${C}): `+I.message)}}let _=E?`((?:${C})(?:/(?:${C}))*)`:`(${C})`;d||(_=w&&r.length<2?`(?:/${_})`:"/"+_),w&&(_+="?"),e+=_,g+=20,w&&(g+=-8),E&&(g+=-20),C===".*"&&(g+=-50)}m.push(g)}t.push(m)}if(n.strict&&n.end){const r=t.length-1;t[r][t[r].length-1]+=.7000000000000001}n.strict||(e+="/?"),n.end?e+="$":n.strict&&(e+="(?:/|$)");const o=new RegExp(e,n.sensitive?"":"i");function p(r){const m=r.match(o),d={};if(!m)return null;for(let h=1;h<m.length;h++){const g=m[h]||"",y=l[h-1];d[y.name]=g&&y.repeatable?g.split("/"):g}return d}function c(r){let m="",d=!1;for(const h of s){(!d||!m.endsWith("/"))&&(m+="/"),d=!1;for(const g of h)if(g.type===0)m+=g.value;else if(g.type===1){const{value:y,repeatable:E,optional:w}=g,k=y in r?r[y]:"";if(fa(k)&&!E)throw new Error(`Provided param "${y}" is an array but it is not repeatable (* or + modifiers)`);const C=fa(k)?k.join("/"):k;if(!C)if(w)h.length<2&&(m.endsWith("/")?m=m.slice(0,-1):d=!0);else throw new Error(`Missing required param "${y}"`);m+=C}}return m||"/"}return{re:o,score:t,keys:l,parse:p,stringify:c}}function jh(s,a){let n=0;for(;n<s.length&&n<a.length;){const t=a[n]-s[n];if(t)return t;n++}return s.length<a.length?s.length===1&&s[0]===80?-1:1:s.length>a.length?a.length===1&&a[0]===80?1:-1:0}function qh(s,a){let n=0;const t=s.score,e=a.score;for(;n<t.length&&n<e.length;){const l=jh(t[n],e[n]);if(l)return l;n++}if(Math.abs(e.length-t.length)===1){if(wp(t))return 1;if(wp(e))return-1}return e.length-t.length}function wp(s){const a=s[s.length-1];return s.length>0&&a[a.length-1]<0}const Uh={type:0,value:""},Gh=/[a-zA-Z0-9_]/;function Wh(s){if(!s)return[[]];if(s==="/")return[[Uh]];if(!s.startsWith("/"))throw new Error(`Invalid path "${s}"`);function a(g){throw new Error(`ERR (${n})/"${r}": ${g}`)}let n=0,t=n;const e=[];let l;function o(){l&&e.push(l),l=[]}let p=0,c,r="",m="";function d(){r&&(n===0?l.push({type:0,value:r}):n===1||n===2||n===3?(l.length>1&&(c==="*"||c==="+")&&a(`A repeatable param (${r}) must be alone in its segment. eg: '/:ids+.`),l.push({type:1,value:r,regexp:m,repeatable:c==="*"||c==="+",optional:c==="*"||c==="?"})):a("Invalid state to consume buffer"),r="")}function h(){r+=c}for(;p<s.length;){if(c=s[p++],c==="\\"&&n!==2){t=n,n=4;continue}switch(n){case 0:c==="/"?(r&&d(),o()):c===":"?(d(),n=1):h();break;case 4:h(),n=t;break;case 1:c==="("?n=2:Gh.test(c)?h():(d(),n=0,c!=="*"&&c!=="?"&&c!=="+"&&p--);break;case 2:c===")"?m[m.length-1]=="\\"?m=m.slice(0,-1)+c:n=3:m+=c;break;case 3:d(),n=0,c!=="*"&&c!=="?"&&c!=="+"&&p--,m="";break;default:a("Unknown state");break}}return n===2&&a(`Unfinished custom RegExp for param "${r}"`),d(),o(),e}function Kh(s,a,n){const t=Nh(Wh(s.path),n),e=ds(t,{record:s,parent:a,children:[],alias:[]});return a&&!e.record.aliasOf==!a.record.aliasOf&&a.children.push(e),e}function Xh(s,a){const n=[],t=new Map;a=Cp({strict:!1,end:!0,sensitive:!1},a);function e(m){return t.get(m)}function l(m,d,h){const g=!h,y=Yh(m);y.aliasOf=h&&h.record;const E=Cp(a,m),w=[y];if("alias"in m){const _=typeof m.alias=="string"?[m.alias]:m.alias;for(const I of _)w.push(ds({},y,{components:h?h.record.components:y.components,path:I,aliasOf:h?h.record:y}))}let k,C;for(const _ of w){const{path:I}=_;if(d&&I[0]!=="/"){const M=d.record.path,A=M[M.length-1]==="/"?"":"/";_.path=d.record.path+(I&&A+I)}if(k=Kh(_,d,E),h?h.alias.push(k):(C=C||k,C!==k&&C.alias.push(k),g&&m.name&&!Ap(k)&&o(m.name)),y.children){const M=y.children;for(let A=0;A<M.length;A++)l(M[A],k,h&&h.children[A])}h=h||k,(k.record.components&&Object.keys(k.record.components).length||k.record.name||k.record.redirect)&&c(k)}return C?()=>{o(C)}:rt}function o(m){if(fr(m)){const d=t.get(m);d&&(t.delete(m),n.splice(n.indexOf(d),1),d.children.forEach(o),d.alias.forEach(o))}else{const d=n.indexOf(m);d>-1&&(n.splice(d,1),m.record.name&&t.delete(m.record.name),m.children.forEach(o),m.alias.forEach(o))}}function p(){return n}function c(m){let d=0;for(;d<n.length&&qh(m,n[d])>=0&&(m.record.path!==n[d].record.path||!yr(m,n[d]));)d++;n.splice(d,0,m),m.record.name&&!Ap(m)&&t.set(m.record.name,m)}function r(m,d){let h,g={},y,E;if("name"in m&&m.name){if(h=t.get(m.name),!h)throw zn(1,{location:m});E=h.record.name,g=ds(xp(d.params,h.keys.filter(C=>!C.optional).map(C=>C.name)),m.params&&xp(m.params,h.keys.map(C=>C.name))),y=h.stringify(g)}else if("path"in m)y=m.path,h=n.find(C=>C.re.test(y)),h&&(g=h.parse(y),E=h.record.name);else{if(h=d.name?t.get(d.name):n.find(C=>C.re.test(d.path)),!h)throw zn(1,{location:m,currentLocation:d});E=h.record.name,g=ds({},d.params,m.params),y=h.stringify(g)}const w=[];let k=h;for(;k;)w.unshift(k.record),k=k.parent;return{name:E,path:y,params:g,matched:w,meta:Jh(w)}}return s.forEach(m=>l(m)),{addRoute:l,resolve:r,removeRoute:o,getRoutes:p,getRecordMatcher:e}}function xp(s,a){const n={};for(const t of a)t in s&&(n[t]=s[t]);return n}function Yh(s){return{path:s.path,redirect:s.redirect,name:s.name,meta:s.meta||{},aliasOf:void 0,beforeEnter:s.beforeEnter,props:Qh(s),children:s.children||[],instances:{},leaveGuards:new Set,updateGuards:new Set,enterCallbacks:{},components:"components"in s?s.components||null:s.component&&{default:s.component}}}function Qh(s){const a={},n=s.props||!1;if("component"in s)a.default=n;else for(const t in s.components)a[t]=typeof n=="object"?n[t]:n;return a}function Ap(s){for(;s;){if(s.record.aliasOf)return!0;s=s.parent}return!1}function Jh(s){return s.reduce((a,n)=>ds(a,n.meta),{})}function Cp(s,a){const n={};for(const t in s)n[t]=t in a?a[t]:s[t];return n}function yr(s,a){return a.children.some(n=>n===s||yr(s,n))}const kr=/#/g,Zh=/&/g,s0=/\//g,a0=/=/g,n0=/\?/g,_r=/\+/g,t0=/%5B/g,e0=/%5D/g,br=/%5E/g,l0=/%60/g,Er=/%7B/g,o0=/%7C/g,wr=/%7D/g,p0=/%20/g;function no(s){return encodeURI(""+s).replace(o0,"|").replace(t0,"[").replace(e0,"]")}function i0(s){return no(s).replace(Er,"{").replace(wr,"}").replace(br,"^")}function _l(s){return no(s).replace(_r,"%2B").replace(p0,"+").replace(kr,"%23").replace(Zh,"%26").replace(l0,"`").replace(Er,"{").replace(wr,"}").replace(br,"^")}function r0(s){return _l(s).replace(a0,"%3D")}function c0(s){return no(s).replace(kr,"%23").replace(n0,"%3F")}function m0(s){return s==null?"":c0(s).replace(s0,"%2F")}function ue(s){try{return decodeURIComponent(""+s)}catch{}return""+s}function u0(s){const a={};if(s===""||s==="?")return a;const t=(s[0]==="?"?s.slice(1):s).split("&");for(let e=0;e<t.length;++e){const l=t[e].replace(_r," "),o=l.indexOf("="),p=ue(o<0?l:l.slice(0,o)),c=o<0?null:ue(l.slice(o+1));if(p in a){let r=a[p];fa(r)||(r=a[p]=[r]),r.push(c)}else a[p]=c}return a}function Ip(s){let a="";for(let n in s){const t=s[n];if(n=r0(n),t==null){t!==void 0&&(a+=(a.length?"&":"")+n);continue}(fa(t)?t.map(l=>l&&_l(l)):[t&&_l(t)]).forEach(l=>{l!==void 0&&(a+=(a.length?"&":"")+n,l!=null&&(a+="="+l))})}return a}function d0(s){const a={};for(const n in s){const t=s[n];t!==void 0&&(a[n]=fa(t)?t.map(e=>e==null?null:""+e):t==null?t:""+t)}return a}const h0=Symbol(""),Lp=Symbol(""),xe=Symbol(""),to=Symbol(""),bl=Symbol("");function Jn(){let s=[];function a(t){return s.push(t),()=>{const e=s.indexOf(t);e>-1&&s.splice(e,1)}}function n(){s=[]}return{add:a,list:()=>s.slice(),reset:n}}function Ga(s,a,n,t,e){const l=t&&(t.enterCallbacks[e]=t.enterCallbacks[e]||[]);return()=>new Promise((o,p)=>{const c=d=>{d===!1?p(zn(4,{from:n,to:a})):d instanceof Error?p(d):Fh(d)?p(zn(2,{from:a,to:d})):(l&&t.enterCallbacks[e]===l&&typeof d=="function"&&l.push(d),o())},r=s.call(t&&t.instances[e],a,n,c);let m=Promise.resolve(r);s.length<3&&(m=m.then(c)),m.catch(d=>p(d))})}function We(s,a,n,t){const e=[];for(const l of s)for(const o in l.components){let p=l.components[o];if(!(a!=="beforeRouteEnter"&&!l.instances[o]))if(g0(p)){const r=(p.__vccOpts||p)[a];r&&e.push(Ga(r,n,t,l,o))}else{let c=p();e.push(()=>c.then(r=>{if(!r)return Promise.reject(new Error(`Couldn't resolve component "${o}" at "${l.path}"`));const m=bh(r)?r.default:r;l.components[o]=m;const h=(m.__vccOpts||m)[a];return h&&Ga(h,n,t,l,o)()}))}}return e}function g0(s){return typeof s=="object"||"displayName"in s||"props"in s||"__vccOpts"in s}function Tp(s){const a=bs(xe),n=bs(to),t=b(()=>a.resolve(cn(s.to))),e=b(()=>{const{matched:c}=t.value,{length:r}=c,m=c[r-1],d=n.matched;if(!m||!d.length)return-1;const h=d.findIndex(Bn.bind(null,m));if(h>-1)return h;const g=Pp(c[r-2]);return r>1&&Pp(m)===g&&d[d.length-1].path!==g?d.findIndex(Bn.bind(null,c[r-2])):h}),l=b(()=>e.value>-1&&k0(n.params,t.value.params)),o=b(()=>e.value>-1&&e.value===n.matched.length-1&&hr(n.params,t.value.params));function p(c={}){return y0(c)?a[cn(s.replace)?"replace":"push"](cn(s.to)).catch(rt):Promise.resolve()}return{route:t,href:b(()=>t.value.href),isActive:l,isExactActive:o,navigate:p}}const f0=z({name:"RouterLink",compatConfig:{MODE:3},props:{to:{type:[String,Object],required:!0},replace:Boolean,activeClass:String,exactActiveClass:String,custom:Boolean,ariaCurrentValue:{type:String,default:"page"}},useLink:Tp,setup(s,{slots:a}){const n=xt(Tp(s)),{options:t}=bs(xe),e=b(()=>({[Sp(s.activeClass,t.linkActiveClass,"router-link-active")]:n.isActive,[Sp(s.exactActiveClass,t.linkExactActiveClass,"router-link-exact-active")]:n.isExactActive}));return()=>{const l=a.default&&a.default(n);return s.custom?l:i("a",{"aria-current":n.isExactActive?s.ariaCurrentValue:null,href:n.href,onClick:n.navigate,class:e.value},l)}}}),v0=f0;function y0(s){if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget&&s.currentTarget.getAttribute){const a=s.currentTarget.getAttribute("target");if(/\b_blank\b/i.test(a))return}return s.preventDefault&&s.preventDefault(),!0}}function k0(s,a){for(const n in a){const t=a[n],e=s[n];if(typeof t=="string"){if(t!==e)return!1}else if(!fa(e)||e.length!==t.length||t.some((l,o)=>l!==e[o]))return!1}return!0}function Pp(s){return s?s.aliasOf?s.aliasOf.path:s.path:""}const Sp=(s,a,n)=>s??a??n,_0=z({name:"RouterView",inheritAttrs:!1,props:{name:{type:String,default:"default"},route:Object},compatConfig:{MODE:3},setup(s,{attrs:a,slots:n}){const t=bs(bl),e=b(()=>s.route||t.value),l=bs(Lp,0),o=b(()=>{let r=cn(l);const{matched:m}=e.value;let d;for(;(d=m[r])&&!d.components;)r++;return r}),p=b(()=>e.value.matched[o.value]);ha(Lp,b(()=>o.value+1)),ha(h0,p),ha(bl,e);const c=Q();return cs(()=>[c.value,p.value,s.name],([r,m,d],[h,g,y])=>{m&&(m.instances[d]=r,g&&g!==m&&r&&r===h&&(m.leaveGuards.size||(m.leaveGuards=g.leaveGuards),m.updateGuards.size||(m.updateGuards=g.updateGuards))),r&&m&&(!g||!Bn(m,g)||!h)&&(m.enterCallbacks[d]||[]).forEach(E=>E(r))},{flush:"post"}),()=>{const r=e.value,m=s.name,d=p.value,h=d&&d.components[m];if(!h)return Op(n.default,{Component:h,route:r});const g=d.props[m],y=g?g===!0?r.params:typeof g=="function"?g(r):g:null,w=i(h,ds({},y,a,{onVnodeUnmounted:k=>{k.component.isUnmounted&&(d.instances[m]=null)},ref:c}));return Op(n.default,{Component:w,route:r})||w}}});function Op(s,a){if(!s)return null;const n=s(a);return n.length===1?n[0]:n}const b0=_0;function E0(s){const a=Xh(s.routes,s),n=s.parseQuery||u0,t=s.stringifyQuery||Ip,e=s.history,l=Jn(),o=Jn(),p=Jn(),c=Ts(Pa);let r=Pa;bn&&s.scrollBehavior&&"scrollRestoration"in history&&(history.scrollRestoration="manual");const m=Ue.bind(null,L=>""+L),d=Ue.bind(null,m0),h=Ue.bind(null,ue);function g(L,q){let N,K;return fr(L)?(N=a.getRecordMatcher(L),K=q):K=L,a.addRoute(K,N)}function y(L){const q=a.getRecordMatcher(L);q&&a.removeRoute(q)}function E(){return a.getRoutes().map(L=>L.record)}function w(L){return!!a.getRecordMatcher(L)}function k(L,q){if(q=ds({},q||c.value),typeof L=="string"){const v=Ge(n,L,q.path),x=a.resolve({path:v.path},q),P=e.createHref(v.fullPath);return ds(v,x,{params:h(x.params),hash:ue(v.hash),redirectedFrom:void 0,href:P})}let N;if("path"in L)N=ds({},L,{path:Ge(n,L.path,q.path).path});else{const v=ds({},L.params);for(const x in v)v[x]==null&&delete v[x];N=ds({},L,{params:d(v)}),q.params=d(q.params)}const K=a.resolve(N,q),ps=L.hash||"";K.params=m(h(K.params));const vs=xh(t,ds({},L,{hash:i0(ps),path:K.path})),f=e.createHref(vs);return ds({fullPath:vs,hash:ps,query:t===Ip?d0(L.query):L.query||{}},K,{redirectedFrom:void 0,href:f})}function C(L){return typeof L=="string"?Ge(n,L,c.value.path):ds({},L)}function _(L,q){if(r!==L)return zn(8,{from:q,to:L})}function I(L){return R(L)}function M(L){return I(ds(C(L),{replace:!0}))}function A(L){const q=L.matched[L.matched.length-1];if(q&&q.redirect){const{redirect:N}=q;let K=typeof N=="function"?N(L):N;return typeof K=="string"&&(K=K.includes("?")||K.includes("#")?K=C(K):{path:K},K.params={}),ds({query:L.query,hash:L.hash,params:"path"in K?{}:L.params},K)}}function R(L,q){const N=r=k(L),K=c.value,ps=L.state,vs=L.force,f=L.replace===!0,v=A(N);if(v)return R(ds(C(v),{state:typeof v=="object"?ds({},ps,v.state):ps,force:vs,replace:f}),q||N);const x=N;x.redirectedFrom=q;let P;return!vs&&Ah(t,K,N)&&(P=zn(16,{to:x,from:K}),aa(K,K,!0,!1)),(P?Promise.resolve(P):$(x,K)).catch(T=>La(T)?La(T,2)?T:ya(T):W(T,x,K)).then(T=>{if(T){if(La(T,2))return R(ds({replace:f},C(T.to),{state:typeof T.to=="object"?ds({},ps,T.to.state):ps,force:vs}),q||x)}else T=H(x,K,!0,f,ps);return X(x,K,T),T})}function O(L,q){const N=_(L,q);return N?Promise.reject(N):Promise.resolve()}function V(L){const q=Ia.values().next().value;return q&&typeof q.runWithContext=="function"?q.runWithContext(L):L()}function $(L,q){let N;const[K,ps,vs]=w0(L,q);N=We(K.reverse(),"beforeRouteLeave",L,q);for(const v of K)v.leaveGuards.forEach(x=>{N.push(Ga(x,L,q))});const f=O.bind(null,L,q);return N.push(f),Ds(N).then(()=>{N=[];for(const v of l.list())N.push(Ga(v,L,q));return N.push(f),Ds(N)}).then(()=>{N=We(ps,"beforeRouteUpdate",L,q);for(const v of ps)v.updateGuards.forEach(x=>{N.push(Ga(x,L,q))});return N.push(f),Ds(N)}).then(()=>{N=[];for(const v of vs)if(v.beforeEnter)if(fa(v.beforeEnter))for(const x of v.beforeEnter)N.push(Ga(x,L,q));else N.push(Ga(v.beforeEnter,L,q));return N.push(f),Ds(N)}).then(()=>(L.matched.forEach(v=>v.enterCallbacks={}),N=We(vs,"beforeRouteEnter",L,q),N.push(f),Ds(N))).then(()=>{N=[];for(const v of o.list())N.push(Ga(v,L,q));return N.push(f),Ds(N)}).catch(v=>La(v,8)?v:Promise.reject(v))}function X(L,q,N){p.list().forEach(K=>V(()=>K(L,q,N)))}function H(L,q,N,K,ps){const vs=_(L,q);if(vs)return vs;const f=q===Pa,v=bn?history.state:{};N&&(K||f?e.replace(L.fullPath,ds({scroll:f&&v&&v.scroll},ps)):e.push(L.fullPath,ps)),c.value=L,aa(L,q,N,f),ya()}let Z;function Cs(){Z||(Z=e.listen((L,q,N)=>{if(!ka.listening)return;const K=k(L),ps=A(K);if(ps){R(ds(ps,{replace:!0}),K).catch(rt);return}r=K;const vs=c.value;bn&&Dh(kp(vs.fullPath,N.delta),we()),$(K,vs).catch(f=>La(f,12)?f:La(f,2)?(R(f.to,K).then(v=>{La(v,20)&&!N.delta&&N.type===yt.pop&&e.go(-1,!1)}).catch(rt),Promise.reject()):(N.delta&&e.go(-N.delta,!1),W(f,K,vs))).then(f=>{f=f||H(K,vs,!1),f&&(N.delta&&!La(f,8)?e.go(-N.delta,!1):N.type===yt.pop&&La(f,20)&&e.go(-1,!1)),X(K,vs,f)}).catch(rt)}))}let Es=Jn(),G=Jn(),ss;function W(L,q,N){ya(L);const K=G.list();return K.length?K.forEach(ps=>ps(L,q,N)):console.error(L),Promise.reject(L)}function Os(){return ss&&c.value!==Pa?Promise.resolve():new Promise((L,q)=>{Es.add([L,q])})}function ya(L){return ss||(ss=!L,Cs(),Es.list().forEach(([q,N])=>L?N(L):q()),Es.reset()),L}function aa(L,q,N,K){const{scrollBehavior:ps}=s;if(!bn||!ps)return Promise.resolve();const vs=!N&&Rh(kp(L.fullPath,0))||(K||!N)&&history.state&&history.state.scroll||null;return Ja().then(()=>ps(L,q,vs)).then(f=>f&&Oh(f)).catch(f=>W(f,L,q))}const Vs=L=>e.go(L);let Ys;const Ia=new Set,ka={currentRoute:c,listening:!0,addRoute:g,removeRoute:y,hasRoute:w,getRoutes:E,resolve:k,options:s,push:I,replace:M,go:Vs,back:()=>Vs(-1),forward:()=>Vs(1),beforeEach:l.add,beforeResolve:o.add,afterEach:p.add,onError:G.add,isReady:Os,install(L){const q=this;L.component("RouterLink",v0),L.component("RouterView",b0),L.config.globalProperties.$router=q,Object.defineProperty(L.config.globalProperties,"$route",{enumerable:!0,get:()=>cn(c)}),bn&&!Ys&&c.value===Pa&&(Ys=!0,I(e.location).catch(ps=>{}));const N={};for(const ps in Pa)Object.defineProperty(N,ps,{get:()=>c.value[ps],enumerable:!0});L.provide(xe,q),L.provide(to,_i(N)),L.provide(bl,c);const K=L.unmount;Ia.add(L),L.unmount=function(){Ia.delete(L),Ia.size<1&&(r=Pa,Z&&Z(),Z=null,c.value=Pa,Ys=!1,ss=!1),K()}}};function Ds(L){return L.reduce((q,N)=>q.then(()=>V(N)),Promise.resolve())}return ka}function w0(s,a){const n=[],t=[],e=[],l=Math.max(a.matched.length,s.matched.length);for(let o=0;o<l;o++){const p=a.matched[o];p&&(s.matched.find(r=>Bn(r,p))?t.push(p):n.push(p));const c=s.matched[o];c&&(a.matched.find(r=>Bn(r,c))||e.push(c))}return[n,t,e]}function Da(){return bs(xe)}function Aa(){return bs(to)}var eo=Symbol(""),Ca=()=>{const s=bs(eo);if(!s)throw new Error("useClientData() is called without provider.");return s},x0=()=>Ca().pageComponent,hs=()=>Ca().pageData,ks=()=>Ca().pageFrontmatter,A0=()=>Ca().pageHead,xr=()=>Ca().pageLang,C0=()=>Ca().pageLayout,Ra=()=>Ca().routeLocale,I0=()=>Ca().routes,Ar=()=>Ca().siteData,Tt=()=>Ca().siteLocaleData,L0=Symbol(""),Cr=Ts(kh),kt=Ts(_h),Ir=s=>{const a=hh(s);if(kt.value[a])return a;const n=encodeURI(a);return kt.value[n]?n:Cr.value[a]||a},Wn=s=>{const a=Ir(s),n=kt.value[a]??{...kt.value["/404.html"],notFound:!0};return{path:a,notFound:!1,...n}},Ae=z({name:"ClientOnly",setup(s,a){const n=Q(!1);return ys(()=>{n.value=!0}),()=>{var t,e;return n.value?(e=(t=a.slots).default)==null?void 0:e.call(t):null}}}),Lr=z({name:"Content",props:{path:{type:String,required:!1,default:""}},setup(s){const a=x0(),n=b(()=>{if(!s.path)return a.value;const t=Wn(s.path);return Vu(()=>t.loader().then(({comp:e})=>e))});return()=>i(n.value)}}),As=s=>Za(s)?s:`/${dr(s)}`,T0=s=>{if(!(s.metaKey||s.altKey||s.ctrlKey||s.shiftKey)&&!s.defaultPrevented&&!(s.button!==void 0&&s.button!==0)){if(s.currentTarget){const a=s.currentTarget.getAttribute("target");if(a!=null&&a.match(/\b_blank\b/i))return}return s.preventDefault(),!0}},Ls=({active:s=!1,activeClass:a="route-link-active",to:n,...t},{slots:e})=>{var p;const l=Da(),o=As(Ir(n));return i("a",{...t,class:["route-link",{[a]:s}],href:o,onClick:(c={})=>{T0(c)?l.push(n).catch():Promise.resolve()}},(p=e.default)==null?void 0:p.call(e))};Ls.displayName="RouteLink";Ls.props={active:Boolean,activeClass:String,to:String};var P0="Layout",S0="en-US",tn=xt({resolveLayouts:s=>s.reduce((a,n)=>({...a,...n.layouts}),{}),resolvePageHead:(s,a,n)=>{const t=Ss(a.description)?a.description:n.description,e=[...Array.isArray(a.head)?a.head:[],...n.head,["title",{},s],["meta",{name:"description",content:t}]];return mh(e)},resolvePageHeadTitle:(s,a)=>[s.title,a.title].filter(n=>!!n).join(" | "),resolvePageLang:(s,a)=>s.lang||a.lang||S0,resolvePageLayout:(s,a)=>{const n=Ss(s.frontmatter.layout)?s.frontmatter.layout:P0;return a[n]},resolveRouteLocale:(s,a)=>gh(s,a),resolveSiteLocaleData:(s,a)=>{var n;return{...s,...s.locales[a],head:[...((n=s.locales[a])==null?void 0:n.head)??[],...s.head??[]]}}});const O0={};var va=(s={})=>s;const Pt=s=>{const a=Ra();return b(()=>s[a.value]??{})};var Us=Uint8Array,xn=Uint16Array,D0=Int32Array,Tr=new Us([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Pr=new Us([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),R0=new Us([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Sr=function(s,a){for(var n=new xn(31),t=0;t<31;++t)n[t]=a+=1<<s[t-1];for(var e=new D0(n[30]),t=1;t<30;++t)for(var l=n[t];l<n[t+1];++l)e[l]=l-n[t]<<5|t;return{b:n,r:e}},Or=Sr(Tr,2),Dr=Or.b,M0=Or.r;Dr[28]=258,M0[258]=28;var V0=Sr(Pr,0),B0=V0.b,El=new xn(32768);for(var _s=0;_s<32768;++_s){var Fa=(_s&43690)>>1|(_s&21845)<<1;Fa=(Fa&52428)>>2|(Fa&13107)<<2,Fa=(Fa&61680)>>4|(Fa&3855)<<4,El[_s]=((Fa&65280)>>8|(Fa&255)<<8)>>1}var mt=function(s,a,n){for(var t=s.length,e=0,l=new xn(a);e<t;++e)s[e]&&++l[s[e]-1];var o=new xn(a);for(e=1;e<a;++e)o[e]=o[e-1]+l[e-1]<<1;var p;if(n){p=new xn(1<<a);var c=15-a;for(e=0;e<t;++e)if(s[e])for(var r=e<<4|s[e],m=a-s[e],d=o[s[e]-1]++<<m,h=d|(1<<m)-1;d<=h;++d)p[El[d]>>c]=r}else for(p=new xn(t),e=0;e<t;++e)s[e]&&(p[e]=El[o[s[e]-1]++]>>15-s[e]);return p},St=new Us(288);for(var _s=0;_s<144;++_s)St[_s]=8;for(var _s=144;_s<256;++_s)St[_s]=9;for(var _s=256;_s<280;++_s)St[_s]=7;for(var _s=280;_s<288;++_s)St[_s]=8;var Rr=new Us(32);for(var _s=0;_s<32;++_s)Rr[_s]=5;var z0=mt(St,9,1),F0=mt(Rr,5,1),Ke=function(s){for(var a=s[0],n=1;n<s.length;++n)s[n]>a&&(a=s[n]);return a},ma=function(s,a,n){var t=a/8|0;return(s[t]|s[t+1]<<8)>>(a&7)&n},Xe=function(s,a){var n=a/8|0;return(s[n]|s[n+1]<<8|s[n+2]<<16)>>(a&7)},$0=function(s){return(s+7)/8|0},lo=function(s,a,n){return(a==null||a<0)&&(a=0),(n==null||n>s.length)&&(n=s.length),new Us(s.subarray(a,n))},H0=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],ea=function(s,a,n){var t=new Error(a||H0[s]);if(t.code=s,Error.captureStackTrace&&Error.captureStackTrace(t,ea),!n)throw t;return t},N0=function(s,a,n,t){var e=s.length,l=t?t.length:0;if(!e||a.f&&!a.l)return n||new Us(0);var o=!n,p=o||a.i!=2,c=a.i;o&&(n=new Us(e*3));var r=function(ps){var vs=n.length;if(ps>vs){var f=new Us(Math.max(vs*2,ps));f.set(n),n=f}},m=a.f||0,d=a.p||0,h=a.b||0,g=a.l,y=a.d,E=a.m,w=a.n,k=e*8;do{if(!g){m=ma(s,d,1);var C=ma(s,d+1,3);if(d+=3,C)if(C==1)g=z0,y=F0,E=9,w=5;else if(C==2){var A=ma(s,d,31)+257,R=ma(s,d+10,15)+4,O=A+ma(s,d+5,31)+1;d+=14;for(var V=new Us(O),$=new Us(19),X=0;X<R;++X)$[R0[X]]=ma(s,d+X*3,7);d+=R*3;for(var H=Ke($),Z=(1<<H)-1,Cs=mt($,H,1),X=0;X<O;){var Es=Cs[ma(s,d,Z)];d+=Es&15;var _=Es>>4;if(_<16)V[X++]=_;else{var G=0,ss=0;for(_==16?(ss=3+ma(s,d,3),d+=2,G=V[X-1]):_==17?(ss=3+ma(s,d,7),d+=3):_==18&&(ss=11+ma(s,d,127),d+=7);ss--;)V[X++]=G}}var W=V.subarray(0,A),Os=V.subarray(A);E=Ke(W),w=Ke(Os),g=mt(W,E,1),y=mt(Os,w,1)}else ea(1);else{var _=$0(d)+4,I=s[_-4]|s[_-3]<<8,M=_+I;if(M>e){c&&ea(0);break}p&&r(h+I),n.set(s.subarray(_,M),h),a.b=h+=I,a.p=d=M*8,a.f=m;continue}if(d>k){c&&ea(0);break}}p&&r(h+131072);for(var ya=(1<<E)-1,aa=(1<<w)-1,Vs=d;;Vs=d){var G=g[Xe(s,d)&ya],Ys=G>>4;if(d+=G&15,d>k){c&&ea(0);break}if(G||ea(2),Ys<256)n[h++]=Ys;else if(Ys==256){Vs=d,g=null;break}else{var Ia=Ys-254;if(Ys>264){var X=Ys-257,ka=Tr[X];Ia=ma(s,d,(1<<ka)-1)+Dr[X],d+=ka}var Ds=y[Xe(s,d)&aa],L=Ds>>4;Ds||ea(3),d+=Ds&15;var Os=B0[L];if(L>3){var ka=Pr[L];Os+=Xe(s,d)&(1<<ka)-1,d+=ka}if(d>k){c&&ea(0);break}p&&r(h+131072);var q=h+Ia;if(h<Os){var N=l-Os,K=Math.min(Os,q);for(N+h<0&&ea(3);h<K;++h)n[h]=t[N+h]}for(;h<q;++h)n[h]=n[h-Os]}}a.l=g,a.p=Vs,a.b=h,a.f=m,g&&(m=1,a.m=E,a.d=y,a.n=w)}while(!m);return h!=n.length&&o?lo(n,0,h):n.subarray(0,h)},j0=new Us(0),q0=function(s,a){return((s[0]&15)!=8||s[0]>>4>7||(s[0]<<8|s[1])%31)&&ea(6,"invalid zlib data"),(s[1]>>5&1)==+!a&&ea(6,"invalid zlib data: "+(s[1]&32?"need":"unexpected")+" dictionary"),(s[1]>>3&4)+2};function U0(s,a){return N0(s.subarray(q0(s,a&&a.dictionary),-4),{i:2},a&&a.out,a&&a.dictionary)}var Dp=typeof TextEncoder<"u"&&new TextEncoder,wl=typeof TextDecoder<"u"&&new TextDecoder,G0=0;try{wl.decode(j0,{stream:!0}),G0=1}catch{}var W0=function(s){for(var a="",n=0;;){var t=s[n++],e=(t>127)+(t>223)+(t>239);if(n+e>s.length)return{s:a,r:lo(s,n-1)};e?e==3?(t=((t&15)<<18|(s[n++]&63)<<12|(s[n++]&63)<<6|s[n++]&63)-65536,a+=String.fromCharCode(55296|t>>10,56320|t&1023)):e&1?a+=String.fromCharCode((t&31)<<6|s[n++]&63):a+=String.fromCharCode((t&15)<<12|(s[n++]&63)<<6|s[n++]&63):a+=String.fromCharCode(t)}};function K0(s,a){if(a){for(var n=new Us(s.length),t=0;t<s.length;++t)n[t]=s.charCodeAt(t);return n}if(Dp)return Dp.encode(s);for(var e=s.length,l=new Us(s.length+(s.length>>1)),o=0,p=function(m){l[o++]=m},t=0;t<e;++t){if(o+5>l.length){var c=new Us(o+8+(e-t<<1));c.set(l),l=c}var r=s.charCodeAt(t);r<128||a?p(r):r<2048?(p(192|r>>6),p(128|r&63)):r>55295&&r<57344?(r=65536+(r&1047552)|s.charCodeAt(++t)&1023,p(240|r>>18),p(128|r>>12&63),p(128|r>>6&63),p(128|r&63)):(p(224|r>>12),p(128|r>>6&63),p(128|r&63))}return lo(l,0,o)}function X0(s,a){if(a){for(var n="",t=0;t<s.length;t+=16384)n+=String.fromCharCode.apply(null,s.subarray(t,t+16384));return n}else{if(wl)return wl.decode(s);var e=W0(s),l=e.s,n=e.r;return n.length&&ea(8),l}}const de=s=>{const a=atob(s);return X0(U0(K0(a,!0)))},Y0=(s,a)=>{var t;const n=(t=(a==null?void 0:a._instance)||Un())==null?void 0:t.appContext.components;return n?s in n||Ks(s)in n||Nn(Ks(s))in n:!1},Mr=s=>typeof s<"u",Ye=s=>typeof s=="number",xl=Array.isArray,Fn=(s,a)=>Ss(s)&&s.startsWith(a),Q0=(s,a)=>Ss(s)&&s.endsWith(a),gn=Object.entries,J0=Object.fromEntries,sa=Object.keys,oo=s=>{if(s){if(typeof s=="number")return new Date(s);const a=Date.parse(s.toString());if(!Number.isNaN(a))return new Date(a)}return null},Ce=s=>Fn(s,"/"),us=({name:s="",color:a="currentColor"},{slots:n})=>{var t;return i("svg",{xmlns:"http://www.w3.org/2000/svg",class:["icon",`${s}-icon`],viewBox:"0 0 1024 1024",fill:a,"aria-label":`${s} icon`},(t=n.default)==null?void 0:t.call(n))};us.displayName="IconBase";const po=({size:s=48,stroke:a=4,wrapper:n=!0,height:t=2*s})=>{const e=i("svg",{xmlns:"http://www.w3.org/2000/svg",width:s,height:s,preserveAspectRatio:"xMidYMid",viewBox:"25 25 50 50"},[i("animateTransform",{attributeName:"transform",type:"rotate",dur:"2s",keyTimes:"0;1",repeatCount:"indefinite",values:"0;360"}),i("circle",{cx:"50",cy:"50",r:"20",fill:"none",stroke:"currentColor","stroke-width":a,"stroke-linecap":"round"},[i("animate",{attributeName:"stroke-dasharray",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"1,200;90,200;1,200"}),i("animate",{attributeName:"stroke-dashoffset",dur:"1.5s",keyTimes:"0;0.5;1",repeatCount:"indefinite",values:"0;-35px;-125px"})])]);return n?i("div",{class:"loading-icon-wrapper",style:`display:flex;align-items:center;justify-content:center;height:${t}px`},e):e};po.displayName="LoadingIcon";const Vr=(s,{slots:a})=>{var n;return(n=a.default)==null?void 0:n.call(a)},Br=()=>i(us,{name:"github"},()=>i("path",{d:"M511.957 21.333C241.024 21.333 21.333 240.981 21.333 512c0 216.832 140.544 400.725 335.574 465.664 24.49 4.395 32.256-10.07 32.256-23.083 0-11.69.256-44.245 0-85.205-136.448 29.61-164.736-64.64-164.736-64.64-22.315-56.704-54.4-71.765-54.4-71.765-44.587-30.464 3.285-29.824 3.285-29.824 49.195 3.413 75.179 50.517 75.179 50.517 43.776 75.008 114.816 53.333 142.762 40.79 4.523-31.66 17.152-53.377 31.19-65.537-108.971-12.458-223.488-54.485-223.488-242.602 0-53.547 19.114-97.323 50.517-131.67-5.035-12.33-21.93-62.293 4.779-129.834 0 0 41.258-13.184 134.912 50.346a469.803 469.803 0 0 1 122.88-16.554c41.642.213 83.626 5.632 122.88 16.554 93.653-63.488 134.784-50.346 134.784-50.346 26.752 67.541 9.898 117.504 4.864 129.834 31.402 34.347 50.474 78.123 50.474 131.67 0 188.586-114.73 230.016-224.042 242.09 17.578 15.232 33.578 44.672 33.578 90.454v135.85c0 13.142 7.936 27.606 32.854 22.87C862.25 912.597 1002.667 728.747 1002.667 512c0-271.019-219.648-490.667-490.71-490.667z"}));Br.displayName="GitHubIcon";const zr=()=>i(us,{name:"gitlab"},()=>i("path",{d:"M229.333 78.688C223.52 62 199.895 62 193.895 78.688L87.958 406.438h247.5c-.188 0-106.125-327.75-106.125-327.75zM33.77 571.438c-4.875 15 .563 31.687 13.313 41.25l464.812 345L87.77 406.438zm301.5-165 176.813 551.25 176.812-551.25zm655.125 165-54-165-424.312 551.25 464.812-345c12.938-9.563 18.188-26.25 13.5-41.25zM830.27 78.688c-5.812-16.688-29.437-16.688-35.437 0l-106.125 327.75h247.5z"}));zr.displayName="GitLabIcon";const Fr=()=>i(us,{name:"gitee"},()=>i("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm242.97-533.34H482.39a23.7 23.7 0 0 0-23.7 23.7l-.03 59.28c0 13.08 10.59 23.7 23.7 23.7h165.96a23.7 23.7 0 0 1 23.7 23.7v11.85a71.1 71.1 0 0 1-71.1 71.1H375.71a23.7 23.7 0 0 1-23.7-23.7V423.11a71.1 71.1 0 0 1 71.1-71.1h331.8a23.7 23.7 0 0 0 23.7-23.7l.06-59.25a23.73 23.73 0 0 0-23.7-23.73H423.11a177.78 177.78 0 0 0-177.78 177.75v331.83c0 13.08 10.62 23.7 23.7 23.7h349.62a159.99 159.99 0 0 0 159.99-159.99V482.33a23.7 23.7 0 0 0-23.7-23.7z"}));Fr.displayName="GiteeIcon";const $r=()=>i(us,{name:"bitbucket"},()=>i("path",{d:"M575.256 490.862c6.29 47.981-52.005 85.723-92.563 61.147-45.714-20.004-45.714-92.562-1.133-113.152 38.29-23.442 93.696 7.424 93.696 52.005zm63.451-11.996c-10.276-81.152-102.29-134.839-177.152-101.156-47.433 21.138-79.433 71.424-77.129 124.562 2.853 69.705 69.157 126.866 138.862 120.576S647.3 548.571 638.708 478.83zm136.558-309.723c-25.161-33.134-67.986-38.839-105.728-45.13-106.862-17.151-216.576-17.7-323.438 1.134-35.438 5.706-75.447 11.996-97.719 43.996 36.572 34.304 88.576 39.424 135.424 45.129 84.553 10.862 171.447 11.447 256 .585 47.433-5.705 99.987-10.276 135.424-45.714zm32.585 591.433c-16.018 55.99-6.839 131.438-66.304 163.986-102.29 56.576-226.304 62.867-338.87 42.862-59.43-10.862-129.135-29.696-161.72-85.723-14.3-54.858-23.442-110.848-32.585-166.84l3.438-9.142 10.276-5.157c170.277 112.567 408.576 112.567 579.438 0 26.844 8.01 6.84 40.558 6.29 60.014zm103.424-549.157c-19.42 125.148-41.728 249.71-63.415 374.272-6.29 36.572-41.728 57.162-71.424 72.558-106.862 53.724-231.424 62.866-348.562 50.286-79.433-8.558-160.585-29.696-225.134-79.433-30.28-23.443-30.28-63.415-35.986-97.134-20.005-117.138-42.862-234.277-57.161-352.585 6.839-51.42 64.585-73.728 107.447-89.71 57.16-21.138 118.272-30.866 178.87-36.571 129.134-12.58 261.157-8.01 386.304 28.562 44.581 13.13 92.563 31.415 122.844 69.705 13.714 17.7 9.143 40.01 6.29 60.014z"}));$r.displayName="BitbucketIcon";const Hr=()=>i(us,{name:"source"},()=>i("path",{d:"M601.92 475.2c0 76.428-8.91 83.754-28.512 99.594-14.652 11.88-43.956 14.058-78.012 16.434-18.81 1.386-40.392 2.97-62.172 6.534-18.612 2.97-36.432 9.306-53.064 17.424V299.772c37.818-21.978 63.36-62.766 63.36-109.692 0-69.894-56.826-126.72-126.72-126.72S190.08 120.186 190.08 190.08c0 46.926 25.542 87.714 63.36 109.692v414.216c-37.818 21.978-63.36 62.766-63.36 109.692 0 69.894 56.826 126.72 126.72 126.72s126.72-56.826 126.72-126.72c0-31.086-11.286-59.598-29.7-81.576 13.266-9.504 27.522-17.226 39.996-19.206 16.038-2.574 32.868-3.762 50.688-5.148 48.312-3.366 103.158-7.326 148.896-44.55 61.182-49.698 74.25-103.158 75.24-187.902V475.2h-126.72zM316.8 126.72c34.848 0 63.36 28.512 63.36 63.36s-28.512 63.36-63.36 63.36-63.36-28.512-63.36-63.36 28.512-63.36 63.36-63.36zm0 760.32c-34.848 0-63.36-28.512-63.36-63.36s28.512-63.36 63.36-63.36 63.36 28.512 63.36 63.36-28.512 63.36-63.36 63.36zM823.68 158.4h-95.04V63.36h-126.72v95.04h-95.04v126.72h95.04v95.04h126.72v-95.04h95.04z"}));Hr.displayName="SourceIcon";const ga=(s,a)=>{var t;const n=(t=(a==null?void 0:a._instance)||Un())==null?void 0:t.appContext.components;return n?s in n||Ks(s)in n||Nn(Ks(s))in n:!1},Ie=(s,a)=>{let n=1;for(let t=0;t<s.length;t++)n+=s.charCodeAt(t),n+=n<<10,n^=n>>6;return n+=n<<3,n^=n>>11,n%a};let Z0=class{constructor(){this.messageElements={};const a="message-container",n=document.getElementById(a);n?this.containerElement=n:(this.containerElement=document.createElement("div"),this.containerElement.id=a,document.body.appendChild(this.containerElement))}pop(a,n=2e3){const t=document.createElement("div"),e=Date.now();return t.className="message move-in",t.innerHTML=a,this.containerElement.appendChild(t),this.messageElements[e]=t,n>0&&setTimeout(()=>{this.close(e)},n),e}close(a){if(a){const n=this.messageElements[a];n.classList.remove("move-in"),n.classList.add("move-out"),n.addEventListener("animationend",()=>{n.remove(),delete this.messageElements[a]})}else sa(this.messageElements).forEach(n=>this.close(Number(n)))}destroy(){document.body.removeChild(this.containerElement)}};const Nr=/#.*$/u,s1=s=>{const a=Nr.exec(s);return a?a[0]:""},Rp=s=>decodeURI(s).replace(Nr,"").replace(/\/index\.html$/iu,"/").replace(/\.html$/iu,"").replace(/(README|index)?\.md$/iu,""),jr=(s,a)=>{if(!Mr(a))return!1;const n=Rp(s.path),t=Rp(a),e=s1(a);return e?e===s.hash&&(!t||n===t):n===t},a1=s=>Za(s)?s:`https://github.com/${s}`,qr=s=>!Za(s)||/github\.com/.test(s)?"GitHub":/bitbucket\.org/.test(s)?"Bitbucket":/gitlab\.com/.test(s)?"GitLab":/gitee\.com/.test(s)?"Gitee":null;var n1=s=>Object.prototype.toString.call(s)==="[object Object]",_t=s=>typeof s=="string";const Ur=Array.isArray,Mp=s=>n1(s)&&_t(s.name),bt=(s,a=!1)=>s?Ur(s)?s.map(n=>_t(n)?{name:n}:Mp(n)?n:null).filter(n=>n!==null):_t(s)?[{name:s}]:Mp(s)?[s]:(console.error(`Expect "author" to be \`AuthorInfo[] | AuthorInfo | string[] | string ${a?"":"| false"} | undefined\`, but got`,s),[]):[],Gr=(s,a)=>{if(s){if(Ur(s)&&s.every(_t))return s;if(_t(s))return[s];console.error(`Expect ${a||"value"} to be \`string[] | string | undefined\`, but got`,s)}return[]},Wr=s=>Gr(s,"category"),Kr=s=>Gr(s,"tag");function io(s,a){let n,t,e;const l=Q(!0),o=()=>{l.value=!0,e()};cs(s,o,{flush:"sync"});const p=typeof a=="function"?a:a.get,c=typeof a=="function"?void 0:a.set,r=Ci((m,d)=>(t=m,e=d,{get(){return l.value&&(n=p(),l.value=!1),t(),n},set(h){c==null||c(h)}}));return Object.isExtensible(r)&&(r.trigger=o),r}function fn(s){return ii()?(jm(s),!0):!1}function $s(s){return typeof s=="function"?s():cn(s)}const Ot=typeof window<"u"&&typeof document<"u";typeof WorkerGlobalScope<"u"&&globalThis instanceof WorkerGlobalScope;const t1=Object.prototype.toString,e1=s=>t1.call(s)==="[object Object]",mn=()=>{},Vp=l1();function l1(){var s,a;return Ot&&((s=window==null?void 0:window.navigator)==null?void 0:s.userAgent)&&(/iP(ad|hone|od)/.test(window.navigator.userAgent)||((a=window==null?void 0:window.navigator)==null?void 0:a.maxTouchPoints)>2&&/iPad|Macintosh/.test(window==null?void 0:window.navigator.userAgent))}function ro(s,a){function n(...t){return new Promise((e,l)=>{Promise.resolve(s(()=>a.apply(this,t),{fn:a,thisArg:this,args:t})).then(e).catch(l)})}return n}const Xr=s=>s();function o1(s,a={}){let n,t,e=mn;const l=p=>{clearTimeout(p),e(),e=mn};return p=>{const c=$s(s),r=$s(a.maxWait);return n&&l(n),c<=0||r!==void 0&&r<=0?(t&&(l(t),t=null),Promise.resolve(p())):new Promise((m,d)=>{e=a.rejectOnCancel?d:m,r&&!t&&(t=setTimeout(()=>{n&&l(n),t=null,m(p())},r)),n=setTimeout(()=>{t&&l(t),t=null,m(p())},c)})}}function p1(s,a=!0,n=!0,t=!1){let e=0,l,o=!0,p=mn,c;const r=()=>{l&&(clearTimeout(l),l=void 0,p(),p=mn)};return d=>{const h=$s(s),g=Date.now()-e,y=()=>c=d();return r(),h<=0?(e=Date.now(),y()):(g>h&&(n||!o)?(e=Date.now(),y()):a&&(c=new Promise((E,w)=>{p=t?w:E,l=setTimeout(()=>{e=Date.now(),o=!0,E(y()),r()},Math.max(0,h-g))})),!n&&!l&&(l=setTimeout(()=>o=!0,h)),o=!1,c)}}function i1(s=Xr){const a=Q(!0);function n(){a.value=!1}function t(){a.value=!0}const e=(...l)=>{a.value&&s(...l)};return{isActive:hn(a),pause:n,resume:t,eventFilter:e}}function r1(s){let a;function n(){return a||(a=s()),a}return n.reset=async()=>{const t=a;a=void 0,t&&await t},n}function Yr(s){return s||Un()}function c1(...s){if(s.length!==1)return jn(...s);const a=s[0];return typeof a=="function"?hn(Ci(()=>({get:a,set:mn}))):Q(a)}function m1(s,a=200,n={}){return ro(o1(a,n),s)}function u1(s,a=200,n=!1,t=!0,e=!1){return ro(p1(a,n,t,e),s)}function d1(s,a,n={}){const{eventFilter:t=Xr,...e}=n;return cs(s,ro(t,a),e)}function h1(s,a,n={}){const{eventFilter:t,...e}=n,{eventFilter:l,pause:o,resume:p,isActive:c}=i1(t);return{stop:d1(s,a,{...e,eventFilter:l}),pause:o,resume:p,isActive:c}}function Le(s,a=!0,n){Yr()?ys(s,n):a?s():Ja(s)}function g1(s,a){Yr(a)&&qn(s,a)}function f1(s,a,n={}){const{immediate:t=!0}=n,e=Q(!1);let l=null;function o(){l&&(clearTimeout(l),l=null)}function p(){e.value=!1,o()}function c(...r){o(),e.value=!0,l=setTimeout(()=>{e.value=!1,l=null,s(...r)},$s(a))}return t&&(e.value=!0,Ot&&c()),fn(p),{isPending:hn(e),start:c,stop:p}}function he(s=!1,a={}){const{truthyValue:n=!0,falsyValue:t=!1}=a,e=Hs(s),l=Q(s);function o(p){if(arguments.length)return l.value=p,l.value;{const c=$s(n);return l.value=l.value===c?$s(t):c,l.value}}return e?o:[l,o]}function wa(s){var a;const n=$s(s);return(a=n==null?void 0:n.$el)!=null?a:n}const xa=Ot?window:void 0,Qr=Ot?window.document:void 0,Jr=Ot?window.navigator:void 0;function Ms(...s){let a,n,t,e;if(typeof s[0]=="string"||Array.isArray(s[0])?([n,t,e]=s,a=xa):[a,n,t,e]=s,!a)return mn;Array.isArray(n)||(n=[n]),Array.isArray(t)||(t=[t]);const l=[],o=()=>{l.forEach(m=>m()),l.length=0},p=(m,d,h,g)=>(m.addEventListener(d,h,g),()=>m.removeEventListener(d,h,g)),c=cs(()=>[wa(a),$s(e)],([m,d])=>{if(o(),!m)return;const h=e1(d)?{...d}:d;l.push(...n.flatMap(g=>t.map(y=>p(m,g,y,h))))},{immediate:!0,flush:"post"}),r=()=>{c(),o()};return fn(r),r}function v1(){const s=Q(!1);return Un()&&ys(()=>{s.value=!0}),s}function Kn(s){const a=v1();return b(()=>(a.value,!!s()))}function Zr(s,a={}){const{window:n=xa}=a,t=Kn(()=>n&&"matchMedia"in n&&typeof n.matchMedia=="function");let e;const l=Q(!1),o=r=>{l.value=r.matches},p=()=>{e&&("removeEventListener"in e?e.removeEventListener("change",o):e.removeListener(o))},c=Ri(()=>{t.value&&(p(),e=n.matchMedia($s(s)),"addEventListener"in e?e.addEventListener("change",o):e.addListener(o),l.value=e.matches)});return fn(()=>{c(),p(),e=void 0}),l}function Bp(s,a={}){const{controls:n=!1,navigator:t=Jr}=a,e=Kn(()=>t&&"permissions"in t);let l;const o=typeof s=="string"?{name:s}:s,p=Q(),c=()=>{l&&(p.value=l.state)},r=r1(async()=>{if(e.value){if(!l)try{l=await t.permissions.query(o),Ms(l,"change",c),c()}catch{p.value="prompt"}return l}});return r(),n?{state:p,isSupported:e,query:r}:p}function y1(s={}){const{navigator:a=Jr,read:n=!1,source:t,copiedDuring:e=1500,legacy:l=!1}=s,o=Kn(()=>a&&"clipboard"in a),p=Bp("clipboard-read"),c=Bp("clipboard-write"),r=b(()=>o.value||l),m=Q(""),d=Q(!1),h=f1(()=>d.value=!1,e);function g(){o.value&&p.value!=="denied"?a.clipboard.readText().then(k=>{m.value=k}):m.value=w()}r.value&&n&&Ms(["copy","cut"],g);async function y(k=$s(t)){r.value&&k!=null&&(o.value&&c.value!=="denied"?await a.clipboard.writeText(k):E(k),m.value=k,d.value=!0,h.start())}function E(k){const C=document.createElement("textarea");C.value=k??"",C.style.position="absolute",C.style.opacity="0",document.body.appendChild(C),C.select(),document.execCommand("copy"),C.remove()}function w(){var k,C,_;return(_=(C=(k=document==null?void 0:document.getSelection)==null?void 0:k.call(document))==null?void 0:C.toString())!=null?_:""}return{isSupported:r,text:m,copied:d,copy:y}}const Xt=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},Yt="__vueuse_ssr_handlers__",k1=_1();function _1(){return Yt in Xt||(Xt[Yt]=Xt[Yt]||{}),Xt[Yt]}function b1(s,a){return k1[s]||a}function E1(s){return s==null?"any":s instanceof Set?"set":s instanceof Map?"map":s instanceof Date?"date":typeof s=="boolean"?"boolean":typeof s=="string"?"string":typeof s=="object"?"object":Number.isNaN(s)?"any":"number"}const w1={boolean:{read:s=>s==="true",write:s=>String(s)},object:{read:s=>JSON.parse(s),write:s=>JSON.stringify(s)},number:{read:s=>Number.parseFloat(s),write:s=>String(s)},any:{read:s=>s,write:s=>String(s)},string:{read:s=>s,write:s=>String(s)},map:{read:s=>new Map(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s.entries()))},set:{read:s=>new Set(JSON.parse(s)),write:s=>JSON.stringify(Array.from(s))},date:{read:s=>new Date(s),write:s=>s.toISOString()}},zp="vueuse-storage";function Xn(s,a,n,t={}){var e;const{flush:l="pre",deep:o=!0,listenToStorageChanges:p=!0,writeDefaults:c=!0,mergeDefaults:r=!1,shallow:m,window:d=xa,eventFilter:h,onError:g=V=>{console.error(V)},initOnMounted:y}=t,E=(m?Ts:Q)(typeof a=="function"?a():a);if(!n)try{n=b1("getDefaultStorage",()=>{var V;return(V=xa)==null?void 0:V.localStorage})()}catch(V){g(V)}if(!n)return E;const w=$s(a),k=E1(w),C=(e=t.serializer)!=null?e:w1[k],{pause:_,resume:I}=h1(E,()=>M(E.value),{flush:l,deep:o,eventFilter:h});return d&&p&&Le(()=>{Ms(d,"storage",O),Ms(d,zp,R),y&&O()}),y||O(),E;function M(V){try{if(V==null)n.removeItem(s);else{const $=C.write(V),X=n.getItem(s);X!==$&&(n.setItem(s,$),d&&d.dispatchEvent(new CustomEvent(zp,{detail:{key:s,oldValue:X,newValue:$,storageArea:n}})))}}catch($){g($)}}function A(V){const $=V?V.newValue:n.getItem(s);if($==null)return c&&w!=null&&n.setItem(s,C.write(w)),w;if(!V&&r){const X=C.read($);return typeof r=="function"?r(X,w):k==="object"&&!Array.isArray(X)?{...w,...X}:X}else return typeof $!="string"?$:C.read($)}function R(V){O(V.detail)}function O(V){if(!(V&&V.storageArea!==n)){if(V&&V.key==null){E.value=w;return}if(!(V&&V.key!==s)){_();try{(V==null?void 0:V.newValue)!==C.write(E.value)&&(E.value=A(V))}catch($){g($)}finally{V?Ja(I):I()}}}}}function x1(s){return Zr("(prefers-color-scheme: dark)",s)}function A1(s,a,n={}){const{window:t=xa,...e}=n;let l;const o=Kn(()=>t&&"MutationObserver"in t),p=()=>{l&&(l.disconnect(),l=void 0)},c=cs(()=>wa(s),d=>{p(),o.value&&t&&d&&(l=new MutationObserver(a),l.observe(d,e))},{immediate:!0}),r=()=>l==null?void 0:l.takeRecords(),m=()=>{p(),c()};return fn(m),{isSupported:o,stop:m,takeRecords:r}}function C1(s,a,n={}){const{window:t=xa,...e}=n;let l;const o=Kn(()=>t&&"ResizeObserver"in t),p=()=>{l&&(l.disconnect(),l=void 0)},c=b(()=>Array.isArray(s)?s.map(d=>wa(d)):[wa(s)]),r=cs(c,d=>{if(p(),o.value&&t){l=new ResizeObserver(a);for(const h of d)h&&l.observe(h,e)}},{immediate:!0,flush:"post",deep:!0}),m=()=>{p(),r()};return fn(m),{isSupported:o,stop:m}}function I1(s,a={width:0,height:0},n={}){const{window:t=xa,box:e="content-box"}=n,l=b(()=>{var d,h;return(h=(d=wa(s))==null?void 0:d.namespaceURI)==null?void 0:h.includes("svg")}),o=Q(a.width),p=Q(a.height),{stop:c}=C1(s,([d])=>{const h=e==="border-box"?d.borderBoxSize:e==="content-box"?d.contentBoxSize:d.devicePixelContentBoxSize;if(t&&l.value){const g=wa(s);if(g){const y=t.getComputedStyle(g);o.value=Number.parseFloat(y.width),p.value=Number.parseFloat(y.height)}}else if(h){const g=Array.isArray(h)?h:[h];o.value=g.reduce((y,{inlineSize:E})=>y+E,0),p.value=g.reduce((y,{blockSize:E})=>y+E,0)}else o.value=d.contentRect.width,p.value=d.contentRect.height},n);Le(()=>{const d=wa(s);d&&(o.value="offsetWidth"in d?d.offsetWidth:a.width,p.value="offsetHeight"in d?d.offsetHeight:a.height)});const r=cs(()=>wa(s),d=>{o.value=d?a.width:0,p.value=d?a.height:0});function m(){c(),r()}return{width:o,height:p,stop:m}}const Fp=["fullscreenchange","webkitfullscreenchange","webkitendfullscreen","mozfullscreenchange","MSFullscreenChange"];function co(s,a={}){const{document:n=Qr,autoExit:t=!1}=a,e=b(()=>{var k;return(k=wa(s))!=null?k:n==null?void 0:n.querySelector("html")}),l=Q(!1),o=b(()=>["requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","webkitEnterFullScreen","webkitRequestFullScreen","mozRequestFullScreen","msRequestFullscreen"].find(k=>n&&k in n||e.value&&k in e.value)),p=b(()=>["exitFullscreen","webkitExitFullscreen","webkitExitFullScreen","webkitCancelFullScreen","mozCancelFullScreen","msExitFullscreen"].find(k=>n&&k in n||e.value&&k in e.value)),c=b(()=>["fullScreen","webkitIsFullScreen","webkitDisplayingFullscreen","mozFullScreen","msFullscreenElement"].find(k=>n&&k in n||e.value&&k in e.value)),r=["fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement"].find(k=>n&&k in n),m=Kn(()=>e.value&&n&&o.value!==void 0&&p.value!==void 0&&c.value!==void 0),d=()=>r?(n==null?void 0:n[r])===e.value:!1,h=()=>{if(c.value){if(n&&n[c.value]!=null)return n[c.value];{const k=e.value;if((k==null?void 0:k[c.value])!=null)return!!k[c.value]}}return!1};async function g(){if(!(!m.value||!l.value)){if(p.value)if((n==null?void 0:n[p.value])!=null)await n[p.value]();else{const k=e.value;(k==null?void 0:k[p.value])!=null&&await k[p.value]()}l.value=!1}}async function y(){if(!m.value||l.value)return;h()&&await g();const k=e.value;o.value&&(k==null?void 0:k[o.value])!=null&&(await k[o.value](),l.value=!0)}async function E(){await(l.value?g():y())}const w=()=>{const k=h();(!k||k&&d())&&(l.value=k)};return Ms(n,Fp,w,!1),Ms(()=>wa(e),Fp,w,!1),t&&fn(g),{isSupported:m,isFullscreen:l,enter:y,exit:g,toggle:E}}function Qe(s){return typeof Window<"u"&&s instanceof Window?s.document.documentElement:typeof Document<"u"&&s instanceof Document?s.documentElement:s}function Je(s,a=mn,n={}){const{immediate:t=!0,manual:e=!1,type:l="text/javascript",async:o=!0,crossOrigin:p,referrerPolicy:c,noModule:r,defer:m,document:d=Qr,attrs:h={}}=n,g=Q(null);let y=null;const E=C=>new Promise((_,I)=>{const M=O=>(g.value=O,_(O),O);if(!d){_(!1);return}let A=!1,R=d.querySelector(`script[src="${$s(s)}"]`);R?R.hasAttribute("data-loaded")&&M(R):(R=d.createElement("script"),R.type=l,R.async=o,R.src=$s(s),m&&(R.defer=m),p&&(R.crossOrigin=p),r&&(R.noModule=r),c&&(R.referrerPolicy=c),Object.entries(h).forEach(([O,V])=>R==null?void 0:R.setAttribute(O,V)),A=!0),R.addEventListener("error",O=>I(O)),R.addEventListener("abort",O=>I(O)),R.addEventListener("load",()=>{R.setAttribute("data-loaded","true"),a(R),M(R)}),A&&(R=d.head.appendChild(R)),C||M(R)}),w=(C=!0)=>(y||(y=E(C)),y),k=()=>{if(!d)return;y=null,g.value&&(g.value=null);const C=d.querySelector(`script[src="${$s(s)}"]`);C&&d.head.removeChild(C)};return t&&!e&&Le(w),e||g1(k),{scriptTag:g,load:w,unload:k}}function sc(s){const a=window.getComputedStyle(s);if(a.overflowX==="scroll"||a.overflowY==="scroll"||a.overflowX==="auto"&&s.clientWidth<s.scrollWidth||a.overflowY==="auto"&&s.clientHeight<s.scrollHeight)return!0;{const n=s.parentNode;return!n||n.tagName==="BODY"?!1:sc(n)}}function L1(s){const a=s||window.event,n=a.target;return sc(n)?!1:a.touches.length>1?!0:(a.preventDefault&&a.preventDefault(),!1)}const Qt=new WeakMap;function ac(s,a=!1){const n=Q(a);let t=null,e;cs(c1(s),p=>{const c=Qe($s(p));if(c){const r=c;Qt.get(r)||Qt.set(r,e),n.value&&(r.style.overflow="hidden")}},{immediate:!0});const l=()=>{const p=Qe($s(s));!p||n.value||(Vp&&(t=Ms(p,"touchmove",c=>{L1(c)},{passive:!1})),p.style.overflow="hidden",n.value=!0)},o=()=>{var p;const c=Qe($s(s));!c||!n.value||(Vp&&(t==null||t()),c.style.overflow=(p=Qt.get(c))!=null?p:"",Qt.delete(c),n.value=!1)};return fn(o),b({get(){return n.value},set(p){p?l():o()}})}function nc(s,a,n={}){const{window:t=xa}=n;return Xn(s,a,t==null?void 0:t.sessionStorage,n)}function T1(s={}){const{window:a=xa,behavior:n="auto"}=s;if(!a)return{x:Q(0),y:Q(0)};const t=Q(a.scrollX),e=Q(a.scrollY),l=b({get(){return t.value},set(p){scrollTo({left:p,behavior:n})}}),o=b({get(){return e.value},set(p){scrollTo({top:p,behavior:n})}});return Ms(a,"scroll",()=>{t.value=a.scrollX,e.value=a.scrollY},{capture:!1,passive:!0}),{x:l,y:o}}function P1(s={}){const{window:a=xa,initialWidth:n=Number.POSITIVE_INFINITY,initialHeight:t=Number.POSITIVE_INFINITY,listenOrientation:e=!0,includeScrollbar:l=!0}=s,o=Q(n),p=Q(t),c=()=>{a&&(l?(o.value=a.innerWidth,p.value=a.innerHeight):(o.value=a.document.documentElement.clientWidth,p.value=a.document.documentElement.clientHeight))};if(c(),Le(c),Ms("resize",c,{passive:!0}),e){const r=Zr("(orientation: portrait)");cs(r,()=>c())}return{width:o,height:p}}var S1=z({name:"FontIcon",props:{icon:{type:String,default:""},color:{type:String,default:""},size:{type:[String,Number],default:""}},setup(s){const a=b(()=>{const t=["font-icon icon"],e=`fas fa-${s.icon}`;return t.push("fa-fw fa-sm"),t.push(s.icon.includes(" ")?s.icon:e),t}),n=b(()=>{const t={};return s.color&&(t.color=s.color),s.size&&(t["font-size"]=Number.isNaN(Number(s.size))?s.size:`${s.size}px`),sa(t).length?t:null});return()=>s.icon?i("span",{key:s.icon,class:a.value,style:n.value}):null}});const tc=({type:s="info",text:a="",vertical:n,color:t},{slots:e})=>{var l;return i("span",{class:["vp-badge",s,{diy:t}],style:{verticalAlign:n??!1,backgroundColor:t??!1}},((l=e.default)==null?void 0:l.call(e))||a)};tc.displayName="Badge";const ec=({title:s,desc:a="",logo:n,background:t,color:e,link:l})=>{const o=[n?i("img",{class:"vp-card-logo",src:As(n),loading:"lazy","no-view":""}):null,i("div",{class:"vp-card-content"},[i("div",{class:"vp-card-title",innerHTML:s}),i("hr"),i("div",{class:"vp-card-desc",innerHTML:a})])],p={};return t&&(p.background=t),e&&(p.color=e),l?Vn(l)?i("a",{class:"vp-card",href:l,target:"_blank",style:p},o):i(Ls,{to:l,class:"vp-card",style:p},()=>o):i("div",{class:"vp-card",style:p},o)};ec.displayName="VPCard";const O1=va({enhance:({app:s})=>{ga("FontIcon")||s.component("FontIcon",S1),ga("Badge")||s.component("Badge",tc),ga("VPCard")||s.component("VPCard",ec)},setup:()=>{Je("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/brands.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}}),Je("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/solid.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}}),Je("https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6/js/fontawesome.min.js",()=>{},{attrs:{"data-auto-replace-svg":"nest"}})},rootComponents:[]}),$p=async(s,a)=>{const{path:n,query:t}=s.currentRoute.value,{scrollBehavior:e}=s.options;s.options.scrollBehavior=void 0,await s.replace({path:n,query:t,hash:a}),s.options.scrollBehavior=e},D1=({headerLinkSelector:s,headerAnchorSelector:a,delay:n,offset:t=5})=>{const e=Da();Ms("scroll",m1(()=>{var y,E;const o=Math.max(window.scrollY,document.documentElement.scrollTop,document.body.scrollTop);if(Math.abs(o-0)<t){$p(e,"");return}const c=window.innerHeight+o,r=Math.max(document.documentElement.scrollHeight,document.body.scrollHeight),m=Math.abs(r-c)<t,d=Array.from(document.querySelectorAll(s)),g=Array.from(document.querySelectorAll(a)).filter(w=>d.some(k=>k.hash===w.hash));for(let w=0;w<g.length;w++){const k=g[w],C=g[w+1],_=o>=(((y=k.parentElement)==null?void 0:y.offsetTop)??0)-t,I=!C||o<(((E=C.parentElement)==null?void 0:E.offsetTop)??0)-t;if(!(_&&I))continue;const A=decodeURIComponent(e.currentRoute.value.hash),R=decodeURIComponent(k.hash);if(A===R)return;if(m){for(let O=w+1;O<g.length;O++)if(A===decodeURIComponent(g[O].hash))return}$p(e,R);return}},n))},R1=".vp-sidebar-link, .toc-link",M1=".header-anchor",V1=200,B1=5,z1=va({setup(){D1({headerLinkSelector:R1,headerAnchorSelector:M1,delay:V1,offset:B1})}});let lc=s=>Ss(s.title)?{title:s.title}:null;const oc=Symbol(""),F1=s=>{lc=s},$1=()=>bs(oc),H1=s=>{s.provide(oc,lc)};var N1={"/":{title:"目录",empty:"暂无目录"}};const j1=z({name:"Catalog",props:{base:{type:String,default:""},level:{type:Number,default:3},index:Boolean,hideHeading:Boolean},setup(s){const a=$1(),n=Pt(N1),t=hs(),e=I0(),l=Ar(),p=Ts(gn(e.value).map(([r,{meta:m}])=>{const d=a(m);if(!d)return null;const h=r.split("/").length;return{level:Q0(r,"/")?h-2:h-1,base:r.replace(/\/[^/]+\/?$/,"/"),path:r,...d}}).filter(r=>Gn(r)&&Ss(r.title))),c=b(()=>{const r=s.base?uh(mr(s.base)):t.value.path.replace(/\/[^/]+$/,"/"),m=r.split("/").length-2,d=[];return p.value.filter(({level:h,path:g})=>{if(!Fn(g,r)||g===r)return!1;if(r==="/"){const y=sa(l.value.locales).filter(E=>E!=="/");if(g==="/404.html"||y.some(E=>Fn(g,E)))return!1}return h-m<=s.level}).sort(({title:h,level:g,order:y},{title:E,level:w,order:k})=>{const C=g-w;return C||(Ye(y)?Ye(k)?y>0?k>0?y-k:-1:k<0?y-k:1:y:Ye(k)?k:h.localeCompare(E))}).forEach(h=>{var E;const{base:g,level:y}=h;switch(y-m){case 1:{d.push(h);break}case 2:{const w=d.find(k=>k.path===g);w&&(w.children??(w.children=[])).push(h);break}default:{const w=d.find(k=>k.path===g.replace(/\/[^/]+\/$/,"/"));if(w){const k=(E=w.children)==null?void 0:E.find(C=>C.path===g);k&&(k.children??(k.children=[])).push(h)}}}}),d});return()=>{const r=c.value.some(m=>m.children);return i("div",{class:["vp-catalog-wrapper",{index:s.index}]},[s.hideHeading?null:i("h2",{class:"vp-catalog-main-title"},n.value.title),c.value.length?i(s.index?"ol":"ul",{class:["vp-catalogs",{deep:r}]},c.value.map(({children:m=[],title:d,path:h,content:g})=>{const y=i(Ls,{class:"vp-catalog-title",to:h},()=>g?i(g):d);return i("li",{class:"vp-catalog"},r?[i("h3",{id:d,class:["vp-catalog-child-title",{"has-children":m.length}]},[i("a",{href:`#${d}`,class:"vp-catalog-header-anchor","aria-hidden":!0},"#"),y]),m.length?i(s.index?"ol":"ul",{class:"vp-child-catalogs"},m.map(({children:E=[],content:w,path:k,title:C})=>i("li",{class:"vp-child-catalog"},[i("div",{class:["vp-catalog-sub-title",{"has-children":E.length}]},[i("a",{href:`#${C}`,class:"vp-catalog-header-anchor"},"#"),i(Ls,{class:"vp-catalog-title",to:k},()=>w?i(w):C)]),E.length?i(s.index?"ol":"div",{class:s.index?"vp-sub-catalogs":"vp-sub-catalogs-wrapper"},E.map(({content:_,path:I,title:M})=>s.index?i("li",{class:"vp-sub-catalog"},i(Ls,{to:I},()=>_?i(_):M)):i(Ls,{class:"vp-sub-catalog-link",to:I},()=>_?i(_):M))):null]))):null]:i("div",{class:"vp-catalog-child-title"},y))})):i("p",{class:"vp-empty-catalog"},n.value.empty)])}}}),q1=va({enhance:({app:s})=>{H1(s),Y0("Catalog",s)||s.component("Catalog",j1)}});var U1={"/":{backToTop:"返回顶部"}};const G1=z({name:"BackToTop",setup(s){const a=ks(),n=Pt(U1),t=Ts(),{height:e}=I1(t),{height:l}=P1(),{y:o}=T1(),p=b(()=>a.value.backToTop!==!1&&o.value>100),c=b(()=>o.value/(e.value-l.value)*100);return ys(()=>{t.value=document.body}),()=>i(Qa,{name:"back-to-top"},()=>p.value?i("button",{type:"button",class:"vp-back-to-top-button","aria-label":n.value.backToTop,onClick:()=>{window.scrollTo({top:0,behavior:"smooth"})}},[i("span",{class:"vp-scroll-progress",role:"progressbar","aria-labelledby":"loadinglabel","aria-valuenow":c.value},i("svg",i("circle",{cx:"50%",cy:"50%",style:{"stroke-dasharray":`calc(${Math.PI*c.value}% - ${4*Math.PI}px) calc(${Math.PI*100}% - ${4*Math.PI}px)`}}))),i("div",{class:"back-to-top-icon"})]):null)}}),W1=va({rootComponents:[G1]}),K1=i("svg",{class:"external-link-icon",xmlns:"http://www.w3.org/2000/svg","aria-hidden":"true",focusable:"false",x:"0px",y:"0px",viewBox:"0 0 100 100",width:"15",height:"15"},[i("path",{fill:"currentColor",d:"M18.8,85.1h56l0,0c2.2,0,4-1.8,4-4v-32h-8v28h-48v-48h28v-8h-32l0,0c-2.2,0-4,1.8-4,4v56C14.8,83.3,16.6,85.1,18.8,85.1z"}),i("polygon",{fill:"currentColor",points:"45.7,48.7 51.3,54.3 77.2,28.5 77.2,37.2 85.2,37.2 85.2,14.9 62.8,14.9 62.8,22.9 71.5,22.9"})]),pc=z({name:"ExternalLinkIcon",props:{locales:{type:Object,required:!1,default:()=>({})}},setup(s){const a=Ra(),n=b(()=>s.locales[a.value]??{openInNewWindow:"open in new window"});return()=>i("span",[K1,i("span",{class:"external-link-icon-sr-only"},n.value.openInNewWindow)])}});var X1={};const Y1=X1,Q1=va({enhance({app:s}){s.component("ExternalLinkIcon",i(pc,{locales:Y1}))}});/**
 * NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress
 * @license MIT
 */const is={settings:{minimum:.08,easing:"ease",speed:200,trickle:!0,trickleRate:.02,trickleSpeed:800,barSelector:'[role="bar"]',parent:"body",template:'<div class="bar" role="bar"></div>'},status:null,set:s=>{const a=is.isStarted();s=Ze(s,is.settings.minimum,1),is.status=s===1?null:s;const n=is.render(!a),t=n.querySelector(is.settings.barSelector),e=is.settings.speed,l=is.settings.easing;return n.offsetWidth,J1(o=>{Jt(t,{transform:"translate3d("+Hp(s)+"%,0,0)",transition:"all "+e+"ms "+l}),s===1?(Jt(n,{transition:"none",opacity:"1"}),n.offsetWidth,setTimeout(function(){Jt(n,{transition:"all "+e+"ms linear",opacity:"0"}),setTimeout(function(){is.remove(),o()},e)},e)):setTimeout(()=>o(),e)}),is},isStarted:()=>typeof is.status=="number",start:()=>{is.status||is.set(0);const s=()=>{setTimeout(()=>{is.status&&(is.trickle(),s())},is.settings.trickleSpeed)};return is.settings.trickle&&s(),is},done:s=>!s&&!is.status?is:is.inc(.3+.5*Math.random()).set(1),inc:s=>{let a=is.status;return a?(typeof s!="number"&&(s=(1-a)*Ze(Math.random()*a,.1,.95)),a=Ze(a+s,0,.994),is.set(a)):is.start()},trickle:()=>is.inc(Math.random()*is.settings.trickleRate),render:s=>{if(is.isRendered())return document.getElementById("nprogress");Np(document.documentElement,"nprogress-busy");const a=document.createElement("div");a.id="nprogress",a.innerHTML=is.settings.template;const n=a.querySelector(is.settings.barSelector),t=s?"-100":Hp(is.status||0),e=document.querySelector(is.settings.parent);return Jt(n,{transition:"all 0 linear",transform:"translate3d("+t+"%,0,0)"}),e!==document.body&&Np(e,"nprogress-custom-parent"),e==null||e.appendChild(a),a},remove:()=>{jp(document.documentElement,"nprogress-busy"),jp(document.querySelector(is.settings.parent),"nprogress-custom-parent");const s=document.getElementById("nprogress");s&&Z1(s)},isRendered:()=>!!document.getElementById("nprogress")},Ze=(s,a,n)=>s<a?a:s>n?n:s,Hp=s=>(-1+s)*100,J1=function(){const s=[];function a(){const n=s.shift();n&&n(a)}return function(n){s.push(n),s.length===1&&a()}}(),Jt=function(){const s=["Webkit","O","Moz","ms"],a={};function n(o){return o.replace(/^-ms-/,"ms-").replace(/-([\da-z])/gi,function(p,c){return c.toUpperCase()})}function t(o){const p=document.body.style;if(o in p)return o;let c=s.length;const r=o.charAt(0).toUpperCase()+o.slice(1);let m;for(;c--;)if(m=s[c]+r,m in p)return m;return o}function e(o){return o=n(o),a[o]??(a[o]=t(o))}function l(o,p,c){p=e(p),o.style[p]=c}return function(o,p){for(const c in p){const r=p[c];r!==void 0&&Object.prototype.hasOwnProperty.call(p,c)&&l(o,c,r)}}}(),ic=(s,a)=>(typeof s=="string"?s:mo(s)).indexOf(" "+a+" ")>=0,Np=(s,a)=>{const n=mo(s),t=n+a;ic(n,a)||(s.className=t.substring(1))},jp=(s,a)=>{const n=mo(s);if(!ic(s,a))return;const t=n.replace(" "+a+" "," ");s.className=t.substring(1,t.length-1)},mo=s=>(" "+(s.className||"")+" ").replace(/\s+/gi," "),Z1=s=>{s&&s.parentNode&&s.parentNode.removeChild(s)},sg=()=>{ys(()=>{const s=Da(),a=new Set;a.add(s.currentRoute.value.path),s.beforeEach(n=>{a.has(n.path)||is.start()}),s.afterEach(n=>{a.add(n.path),is.done()})})},ag=va({setup(){sg()}}),ng=JSON.parse('{"encrypt":{"config":{"/demo/encrypt.html":["$2a$10$RcwULVZMdHPwi55EObessuZGY5ZiSvnKHyykbHFWwwoqPo0ifxrEW"],"/zh/demo/encrypt.html":["$2a$10$jf8MemAWatITMYW1e9guz.os0Nx3hNqU37jW5t906KZwITOkWo2oK"]}},"author":{"name":"Dnull","url":"https://Dnullp.github.io"},"logo":"https://theme-hope-assets.vuejs.press/logo.svg","repo":"vuepress-theme-hope/vuepress-theme-hope","docsDir":"src","blog":{"medias":{},"description":"一个BUPTer","intro":"/zh/intro.html"},"footer":"默认页脚","displayFooter":true,"locales":{"/":{"lang":"zh-CN","navbarLocales":{"langName":"简体中文","selectLangAriaLabel":"选择语言"},"metaLocales":{"author":"作者","date":"写作日期","origin":"原创","views":"访问量","category":"分类","tag":"标签","readingTime":"阅读时间","words":"字数","toc":"此页内容","prev":"上一页","next":"下一页","lastUpdated":"上次编辑于","contributors":"贡献者","editLink":"在 GitHub 上编辑此页","print":"打印"},"blogLocales":{"article":"文章","articleList":"文章列表","category":"分类","tag":"标签","timeline":"时间轴","timelineTitle":"昨日不在","all":"全部","intro":"个人介绍","star":"星标","empty":"$text 为空"},"paginationLocales":{"prev":"上一页","next":"下一页","navigate":"跳转到","action":"前往","errorText":"请输入 1 到 $page 之前的页码！"},"outlookLocales":{"themeColor":"主题色","darkmode":"外观","fullscreen":"全屏"},"encryptLocales":{"iconLabel":"文章已加密","placeholder":"输入密码","remember":"记住密码","errorHint":"请输入正确的密码"},"routeLocales":{"skipToContent":"跳至主要內容","notFoundTitle":"页面不存在","notFoundMsg":["这里什么也没有","我们是怎么来到这儿的？","这 是 四 零 四 !","看起来你访问了一个失效的链接"],"back":"返回上一页","home":"带我回家","openInNewWindow":"Open in new window"},"navbar":[{"text":"主页","icon":"home","link":"/"},{"text":"博文","icon":"pen-to-square","prefix":"/","children":[{"text":"文章","link":"article/"},{"text":"tag","link":"tag/"}]}],"sidebar":{"/zh/":["",{"text":"如何使用","icon":"laptop-code","prefix":"demo/","link":"demo/","children":"structure"},{"text":"文章","icon":"book","prefix":"posts/","children":"structure"},"intro",{"text":"幻灯片","icon":"person-chalkboard","link":"https://plugin-md-enhance.vuejs.press/zh/guide/content/revealjs/demo.html"}]}}}}'),tg=Q(ng),rc=()=>tg,cc=Symbol(""),eg=()=>{const s=bs(cc);if(!s)throw new Error("useThemeLocaleData() is called without provider.");return s},lg=(s,a)=>{const{locales:n,...t}=s;return{...t,...n==null?void 0:n[a]}},og=va({enhance({app:s}){const a=rc(),n=s._context.provides[eo],t=b(()=>lg(a.value,n.routeLocale.value));s.provide(cc,t),Object.defineProperties(s.config.globalProperties,{$theme:{get(){return a.value}},$themeLocale:{get(){return t.value}}})}}),pg=/\b(?:Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini)/i,ig=()=>typeof window<"u"&&window.navigator&&"userAgent"in window.navigator&&pg.test(navigator.userAgent),sl=new Map,rg=({delay:s=500,duration:a=2e3,locales:n,selector:t,showInMobile:e})=>{const{copy:l}=y1({legacy:!0}),o=Pt(n),p=hs(),c=d=>{if(!d.hasAttribute("copy-code-registered")){const h=document.createElement("button");h.type="button",h.classList.add("vp-copy-code-button"),h.innerHTML='<div class="vp-copy-icon" />',h.setAttribute("aria-label",o.value.copy),h.setAttribute("data-copied",o.value.copied),d.parentElement&&d.parentElement.insertBefore(h,d),d.setAttribute("copy-code-registered","")}},r=()=>{Ja().then(()=>setTimeout(()=>{t.forEach(d=>{document.querySelectorAll(d).forEach(c)})},s))},m=(d,h,g)=>{let{innerText:y=""}=h;/language-(shellscript|shell|bash|sh|zsh)/.test(d.classList.toString())&&(y=y.replace(/^ *(\$|>) /gm,"")),l(y).then(()=>{g.classList.add("copied"),clearTimeout(sl.get(g));const E=setTimeout(()=>{g.classList.remove("copied"),g.blur(),sl.delete(g)},a);sl.set(g,E)})};ys(()=>{const d=!ig()||e;d&&r(),Ms("click",h=>{const g=h.target;if(g.matches('div[class*="language-"] > button.copy')){const y=g.parentElement,E=g.nextElementSibling;E&&m(y,E,g)}else if(g.matches('div[class*="language-"] div.vp-copy-icon')){const y=g.parentElement,E=y.parentElement,w=y.nextElementSibling;w&&m(E,w,y)}}),cs(()=>p.value.path,()=>{d&&r()})})};var cg={"/":{copy:"复制代码",copied:"已复制"}},mg=['.theme-hope-content div[class*="language-"] pre'];const ug=500,dg=2e3,hg=cg,gg=mg,fg=!1,vg=va({setup:()=>{rg({selector:gg,locales:hg,duration:dg,delay:ug,showInMobile:fg})}}),Zt=Xn("VUEPRESS_CODE_TAB_STORE",{});var yg=z({name:"CodeTabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(s,{slots:a}){const n=Q(s.active),t=Ts([]),e=()=>{s.tabId&&(Zt.value[s.tabId]=s.data[n.value].id)},l=(r=n.value)=>{n.value=r<t.value.length-1?r+1:0,t.value[n.value].focus()},o=(r=n.value)=>{n.value=r>0?r-1:t.value.length-1,t.value[n.value].focus()},p=(r,m)=>{r.key===" "||r.key==="Enter"?(r.preventDefault(),n.value=m):r.key==="ArrowRight"?(r.preventDefault(),l()):r.key==="ArrowLeft"&&(r.preventDefault(),o()),s.tabId&&(Zt.value[s.tabId]=s.data[n.value].id)},c=()=>{if(s.tabId){const r=s.data.findIndex(({id:m})=>Zt.value[s.tabId]===m);if(r!==-1)return r}return s.active};return ys(()=>{n.value=c(),cs(()=>Zt.value[s.tabId],(r,m)=>{if(s.tabId&&r!==m){const d=s.data.findIndex(({id:h})=>h===r);d!==-1&&(n.value=d)}})}),()=>s.data.length?i("div",{class:"vp-code-tabs"},[i("div",{class:"vp-code-tabs-nav",role:"tablist"},s.data.map(({id:r},m)=>{const d=m===n.value;return i("button",{type:"button",ref:h=>{h&&(t.value[m]=h)},class:["vp-code-tab-nav",{active:d}],role:"tab","aria-controls":`codetab-${s.id}-${m}`,"aria-selected":d,onClick:()=>{n.value=m,e()},onKeydown:h=>p(h,m)},a[`title${m}`]({value:r,isActive:d}))})),s.data.map(({id:r},m)=>{const d=m===n.value;return i("div",{class:["vp-code-tab",{active:d}],id:`codetab-${s.id}-${m}`,role:"tabpanel","aria-expanded":d},[i("div",{class:"vp-code-tab-title"},a[`title${m}`]({value:r,isActive:d})),a[`tab${m}`]({value:r,isActive:d})])})]):null}});const mc=({active:s=!1},{slots:a})=>{var n;return i("div",{class:["code-group-item",{active:s}],"aria-selected":s},(n=a.default)==null?void 0:n.call(a))};mc.displayName="CodeGroupItem";const kg=z({name:"CodeGroup",slots:Object,setup(s,{slots:a}){const n=Q(-1),t=Ts([]),e=(p=n.value)=>{n.value=p<t.value.length-1?p+1:0,t.value[n.value].focus()},l=(p=n.value)=>{n.value=p>0?p-1:t.value.length-1,t.value[n.value].focus()},o=(p,c)=>{p.key===" "||p.key==="Enter"?(p.preventDefault(),n.value=c):p.key==="ArrowRight"?(p.preventDefault(),e(c)):p.key==="ArrowLeft"&&(p.preventDefault(),l(c))};return()=>{var c;const p=(((c=a.default)==null?void 0:c.call(a))||[]).filter(r=>r.type.name==="CodeGroupItem").map(r=>(r.props===null&&(r.props={}),r));return p.length===0?null:(n.value<0||n.value>p.length-1?(n.value=p.findIndex(r=>"active"in r.props),n.value===-1&&(n.value=0)):p.forEach((r,m)=>{r.props.active=m===n.value}),i("div",{class:"code-group"},[i("div",{class:"code-group-nav"},p.map((r,m)=>{const d=m===n.value;return i("button",{type:"button",ref:h=>{h&&(t.value[m]=h)},class:["code-group-nav-tab",{active:d}],"aria-pressed":d,"aria-expanded":d,onClick:()=>{n.value=m},onKeydown:h=>o(h,m)},r.props.title)})),p]))}}}),_g='<svg class="codepen-icon" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M123.429 668L468 897.714V692.571L277.143 565.143zM88 585.714L198.286 512 88 438.286v147.428zm468 312L900.571 668 746.857 565.143 556 692.57v205.143zM512 616l155.429-104L512 408 356.571 512zM277.143 458.857L468 331.43V126.286L123.429 356zM825.714 512L936 585.714V438.286zm-78.857-53.143L900.571 356 556 126.286v205.143zM1024 356v312q0 23.429-19.429 36.571l-468 312Q524.571 1024 512 1024t-24.571-7.429l-468-312Q0 691.43 0 668V356q0-23.429 19.429-36.571l468-312Q499.429 0 512 0t24.571 7.429l468 312Q1024 332.57 1024 356z"/></svg>',bg='<svg class="jsfiddle-icon" viewBox="0 0 1170 1024" xmlns="http://www.w3.org/2000/svg"><path d="M1028.571 441.143q63.429 26.286 102.572 83.143t39.143 126.571q0 93.714-67.429 160.286T940 877.714q-2.286 0-6.571-.285t-6-.286H232q-97.143-5.714-164.571-71.714T0 645.143q0-62.857 31.429-116t84-84q-6.858-22.286-6.858-46.857 0-65.715 46.858-112T269.143 240q54.286 0 98.286 33.143 42.857-88 127.142-141.714t186.572-53.715q94.857 0 174.857 46t126.571 124.857 46.572 172q0 3.429-.286 10.286t-.286 10.286zm-761.142 152q0 69.714 48 110.286T434.286 744q78.285 0 137.143-56.571-9.143-11.429-27.143-32.286t-24.857-28.857q-38.286 37.143-82.286 37.143-31.429 0-53.429-19.143t-22-50q0-30.286 22-49.715T436 525.143q25.143 0 48.286 12T526 568.57t37.143 42.858 39.428 46.857 44 42.857T702 732.57t69.429 12q69.142 0 116.857-40.857T936 594.857q0-69.143-48-109.714T769.714 444.57Q688 444.571 632 500l53.143 61.714q37.714-36.571 81.143-36.571 29.714 0 52.571 18.857t22.857 48q0 32.571-21.143 52.286T766.857 664q-24.571 0-47.143-12t-41.143-31.429-37.428-42.857-39.714-46.857T557.143 488 502 456.571t-67.714-12q-69.715 0-118.286 40.286t-48.571 108.286z"/></svg>';var Eg={useBabel:!1,jsLib:[],cssLib:[],codepenLayout:"left",codepenEditors:"101",babel:"https://unpkg.com/@babel/standalone/babel.min.js",vue:"https://unpkg.com/vue/dist/vue.global.prod.js",react:"https://unpkg.com/react/umd/react.production.min.js",reactDOM:"https://unpkg.com/react-dom/umd/react-dom.production.min.js"};const al=Eg,qp={html:{types:["html","slim","haml","md","markdown","vue"],map:{html:"none",vue:"none",md:"markdown"}},js:{types:["js","javascript","coffee","coffeescript","ts","typescript","ls","livescript"],map:{js:"none",javascript:"none",coffee:"coffeescript",ls:"livescript",ts:"typescript"}},css:{types:["css","less","sass","scss","stylus","styl"],map:{css:"none",styl:"stylus"}}},wg=(s,a,n)=>{const t=document.createElement(s);return Gn(a)&&sa(a).forEach(e=>{if(e.indexOf("data"))t[e]=a[e];else{const l=e.replace("data","");t.dataset[l]=a[e]}}),n&&n.forEach(e=>{t.appendChild(e)}),t},uo=s=>({...al,...s,jsLib:Array.from(new Set([...al.jsLib||[],...s.jsLib||[]])),cssLib:Array.from(new Set([...al.cssLib||[],...s.cssLib||[]]))}),Tn=(s,a)=>{if(Mr(s[a]))return s[a];const n=new Promise(t=>{var l;const e=document.createElement("script");e.src=a,(l=document.querySelector("body"))==null||l.appendChild(e),e.onload=()=>{t()}});return s[a]=n,n},xg=(s,a)=>{if(a.css&&Array.from(s.childNodes).every(n=>n.nodeName!=="STYLE")){const n=wg("style",{innerHTML:a.css});s.appendChild(n)}},Ag=(s,a,n)=>{const t=n.getScript();if(t&&Array.from(a.childNodes).every(e=>e.nodeName!=="SCRIPT")){const e=document.createElement("script");e.appendChild(document.createTextNode(`{const document=window.document.querySelector('#${s} .vp-code-demo-display').shadowRoot;
${t}}`)),a.appendChild(e)}},Cg=s=>{const a=sa(s),n={html:[],js:[],css:[],isLegal:!1};return["html","js","css"].forEach(t=>{const e=a.filter(l=>qp[t].types.includes(l));if(e.length){const l=e[0];n[t]=[s[l].replace(/^\n|\n$/g,""),qp[t].map[l]||l]}}),n.isLegal=(!n.html.length||n.html[1]==="none")&&(!n.js.length||n.js[1]==="none")&&(!n.css.length||n.css[1]==="none"),n},uc=s=>s.replace(/<br \/>/g,"<br>").replace(/<((\S+)[^<]*?)\s+\/>/g,"<$1></$2>"),dc=s=>`<div id="app">
${uc(s)}
</div>`,Ig=s=>`${s.replace("export default ","const $reactApp = ").replace(/App\.__style__(\s*)=(\s*)`([\s\S]*)?`/,"")};
ReactDOM.createRoot(document.getElementById("app")).render(React.createElement($reactApp))`,Lg=s=>s.replace(/export\s+default\s*\{(\n*[\s\S]*)\n*\}\s*;?$/u,"Vue.createApp({$1}).mount('#app')").replace(/export\s+default\s*define(Async)?Component\s*\(\s*\{(\n*[\s\S]*)\n*\}\s*\)\s*;?$/u,"Vue.createApp({$1}).mount('#app')").trim(),hc=s=>`(function(exports){var module={};module.exports=exports;${s};return module.exports.__esModule?module.exports.default:module.exports;})({})`,Tg=(s,a)=>{const n=uo(a),t=s.js[0]||"";return{...n,html:uc(s.html[0]||""),js:t,css:s.css[0]||"",isLegal:s.isLegal,getScript:()=>{var e;return n.useBabel?((e=window.Babel.transform(t,{presets:["es2015"]}))==null?void 0:e.code)||"":t}}},Pg=/<template>([\s\S]+)<\/template>/u,Sg=/<script(\s*lang=(['"])(.*?)\2)?>([\s\S]+)<\/script>/u,Og=/<style(\s*lang=(['"])(.*?)\2)?\s*(?:scoped)?>([\s\S]+)<\/style>/u,Dg=(s,a)=>{const n=uo(a),t=s.html[0]||"",e=Pg.exec(t),l=Sg.exec(t),o=Og.exec(t),p=e?e[1].replace(/^\n|\n$/g,""):"",[c="",r=""]=l?[l[4].replace(/^\n|\n$/g,""),l[3]]:[],[m="",d=""]=o?[o[4].replace(/^\n|\n$/g,""),o[3]]:[],h=r===""&&(d===""||d==="css");return{...n,html:dc(p),js:Lg(c),css:m,isLegal:h,jsLib:[n.vue,...n.jsLib],getScript:()=>{var y,E;const g=a.useBabel?((E=(y=window.Babel)==null?void 0:y.transform(c,{presets:["es2015"]}))==null?void 0:E.code)||"":c.replace(/export\s+default/u,"return");return`const app=window.document.createElement('div');document.firstElementChild.appendChild(app);const appOptions=${hc(g)};appOptions.template=\`${p.replace("`",'\\`"')}\`;window.Vue.createApp(appOptions).mount(app);`}}},Rg=(s,a)=>{const n=uo(a);return{...n,html:dc(""),js:Ig(s.js[0]||""),css:s.css[0]||(s.js[0]?s.js[0].replace(/App\.__style__(?:\s*)=(?:\s*)`([\s\S]*)?`/,"$1").trim():""),isLegal:s.isLegal,jsLib:[n.react,n.reactDOM,...n.jsLib],jsx:!0,getScript:()=>{var e,l;const t=((l=(e=window.Babel)==null?void 0:e.transform(s.js[0]||"",{presets:["es2015","react"]}))==null?void 0:l.code)||"";return`window.ReactDOM.createRoot(document.firstElementChild).render(window.React.createElement(${hc(t)}))`}}},Pn={},Mg=s=>Promise.all([Tn(Pn,s.babel),Tn(Pn,s.react),Tn(Pn,s.reactDOM)]),Vg=s=>{const a=[Tn(Pn,s.vue)];return s.useBabel&&a.push(Tn(Pn,s.babel)),Promise.all(a)},Bg=s=>s.useBabel?Tn(Pn,s.babel):Promise.resolve();var zg=z({name:"CodeDemo",props:{id:{type:String,required:!0},type:{type:String,default:"normal"},title:{type:String,default:""},config:{type:String,default:""},code:{type:String,required:!0}},slots:Object,setup(s,{slots:a}){const[n,t]=he(!1),e=Ts(),l=Ts(),o=Q("0"),p=Q(!1),c=b(()=>JSON.parse(s.config?de(s.config):"{}")),r=b(()=>{const y=JSON.parse(de(s.code));return Cg(y)}),m=b(()=>s.type==="react"?Rg(r.value,c.value):s.type==="vue"?Dg(r.value,c.value):Tg(r.value,c.value)),d=b(()=>m.value.isLegal),h=(y=!1)=>{const E=e.value.attachShadow({mode:"open"}),w=document.createElement("div");w.classList.add("code-demo-app"),E.appendChild(w),d.value?(y&&(w.innerHTML=m.value.html),xg(E,m.value),Ag(s.id,E,m.value),o.value="0"):o.value="auto",p.value=!0},g=()=>{switch(s.type){case"react":return Mg(m.value).then(()=>h());case"vue":return Vg(m.value).then(()=>h());default:return Bg(m.value).then(()=>h(!0))}};return Ms("beforeprint",()=>{t(!0)}),ys(()=>{setTimeout(()=>{g()},800)}),()=>{var y;return i("div",{class:"vp-code-demo",id:s.id},[i("div",{class:"vp-code-demo-header"},[m.value.isLegal?i("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-code-demo-toggle-button",n.value?"down":"end"],onClick:()=>{o.value=n.value?"0":`${l.value.clientHeight+13.8}px`,t()}}):null,s.title?i("span",{class:"vp-code-demo-title"},decodeURIComponent(s.title)):null,m.value.isLegal&&m.value.jsfiddle!==!1?i("form",{class:"code-demo-jsfiddle",target:"_blank",action:"https://jsfiddle.net/api/post/library/pure/",method:"post"},[i("input",{type:"hidden",name:"html",value:m.value.html}),i("input",{type:"hidden",name:"js",value:m.value.js}),i("input",{type:"hidden",name:"css",value:m.value.css}),i("input",{type:"hidden",name:"wrap",value:"1"}),i("input",{type:"hidden",name:"panel_js",value:"3"}),i("input",{type:"hidden",name:"resources",value:[...m.value.cssLib,...m.value.jsLib].join(",")}),i("button",{type:"submit",class:"jsfiddle-button",innerHTML:bg,"aria-label":"JSFiddle","data-balloon-pos":"up"})]):null,!m.value.isLegal||m.value.codepen!==!1?i("form",{class:"code-demo-codepen",target:"_blank",action:"https://codepen.io/pen/define",method:"post"},[i("input",{type:"hidden",name:"data",value:JSON.stringify({html:m.value.html,js:m.value.js,css:m.value.css,js_external:m.value.jsLib.join(";"),css_external:m.value.cssLib.join(";"),layout:m.value.codepenLayout,html_pre_processor:r.value?r.value.html[1]:"none",js_pre_processor:r.value?r.value.js[1]:m.value.jsx?"babel":"none",css_pre_processor:r.value?r.value.css[1]:"none",editors:m.value.codepenEditors})}),i("button",{type:"submit",innerHTML:_g,class:"codepen-button","aria-label":"Codepen","data-balloon-pos":"up"})]):null]),p.value?null:i(po,{class:"vp-code-demo-loading"}),i("div",{ref:e,class:"vp-code-demo-display",style:{display:d.value&&p.value?"block":"none"}}),i("div",{class:"vp-code-demo-code-wrapper",style:{height:o.value}},i("div",{ref:l,class:"vp-code-demo-codes"},(y=a.default)==null?void 0:y.call(a)))])}}}),Fg=z({name:"MdDemo",props:{id:{type:String,required:!0},title:{type:String,default:""}},slots:Object,setup(s,{slots:a}){const[n,t]=he(!1),e=Ts(),l=Q("0");return Ms("beforeprint",()=>{t(!0)}),()=>{var o,p;return i("div",{class:"vp-md-demo",id:s.id},[i("div",{class:"vp-md-demo-header"},[i("button",{type:"button",title:"toggle","aria-hidden":!0,class:["vp-md-demo-toggle-button",n.value?"down":"end"],onClick:()=>{l.value=n.value?"0":`${e.value.clientHeight+13.8}px`,t()}}),s.title?decodeURIComponent(s.title):null]),i("div",{class:"vp-md-demo-display"},(o=a.default)==null?void 0:o.call(a)),i("div",{class:"vp-md-demo-code-wrapper",style:{height:l.value}},i("div",{ref:e,class:"vp-md-demo-codes"},(p=a.code)==null?void 0:p.call(a)))])}}});const $g=()=>{Ms("beforeprint",()=>{document.querySelectorAll("details").forEach(s=>{s.open=!0})})};let Hg={};const gc=Symbol(""),Ng=()=>bs(gc),jg=s=>{s.provide(gc,Hg)},Up=()=>{const s=document.documentElement;return s.classList.contains("dark")||s.getAttribute("data-theme")==="dark"},kn={useMaxWidth:!1},qg=s=>({dark:s,background:s?"#1e1e1e":"#fff",primaryColor:s?"#389d70":"#4abf8a",primaryBorderColor:s?"#389d70":"#4abf8a",primaryTextColor:s?"#fff":"#000",secondaryColor:"#ffb500",secondaryBorderColor:s?"#fff":"#000",secondaryTextColor:s?"#ddd":"#333",tertiaryColor:s?"#282828":"#efeef4",tertiaryBorderColor:s?"#bbb":"#242424",tertiaryTextColor:s?"#ddd":"#333",noteBkgColor:s?"#f6d365":"#fff5ad",noteTextColor:"#242424",noteBorderColor:s?"#f6d365":"#333",lineColor:s?"#d3d3d3":"#333",textColor:s?"#fff":"#242424",mainBkg:s?"#389d70":"#4abf8a",errorBkgColor:"#eb4d5d",errorTextColor:"#fff",nodeBorder:s?"#389d70":"#4abf8a",nodeTextColor:s?"#fff":"#242424",signalTextColor:s?"#9e9e9e":"#242424",classText:"#fff",labelColor:"#fff",attributeBackgroundColorEven:s?"#0d1117":"#fff",attributeBackgroundColorOdd:s?"#161b22":"#f8f8f8",fillType0:s?"#cf1322":"#f1636e",fillType1:"#f39c12",fillType2:"#2ecc71",fillType3:"#fa541c",fillType4:"#25a55b",fillType5:"#13c2c2",fillType6:"#096dd9",fillType7:"#aa6fe9"});var Ug=z({name:"Mermaid",props:{id:{type:String,required:!0},code:{type:String,required:!0},title:{type:String,default:""}},setup(s){const{themeVariables:a,...n}=Ng(),t=Ts(),e=b(()=>de(s.code)),l=Q(""),o=Q(!1);let p=!1;const c=async()=>{const[{default:d}]=await Promise.all([u(()=>import("./mermaid.core-MDyo0-zX.js").then(h=>h.b6),__vite__mapDeps([])),p?Promise.resolve():(p=!0,new Promise(h=>setTimeout(h,800)))]);d.initialize({theme:"base",themeVariables:{...qg(o.value),...fh(a)?a(o.value):a},flowchart:kn,sequence:kn,journey:kn,gantt:kn,er:kn,pie:kn,...n,startOnLoad:!1}),l.value=(await d.render(s.id,e.value)).svg},r=()=>{const{body:d}=document,h=document.createElement("div");h.classList.add("mermaid-preview"),h.innerHTML=l.value,d.appendChild(h),h.addEventListener("click",()=>{d.removeChild(h)})},m=()=>{const d=`data:image/svg+xml;charset=utf8,${l.value.replace(/<br>/g,"<br />").replace(/%/g,"%25").replace(/"/g,"%22").replace(/'/g,"%27").replace(/&/g,"%26").replace(/#/g,"%23").replace(/{/g,"%7B").replace(/}/g,"%7D").replace(/</g,"%3C").replace(/>/g,"%3E")}`,h=document.createElement("a");h.setAttribute("href",d),h.setAttribute("download",`${s.title?de(s.title):s.id}.svg`),h.click()};return ys(()=>{o.value=Up(),c(),A1(document.documentElement,()=>{o.value=Up()},{attributeFilter:["class","data-theme"],attributes:!0}),cs(o,()=>c())}),()=>[i("div",{class:"mermaid-actions"},[i("button",{class:"preview-button",onClick:()=>r(),title:"preview",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1316 1024" fill="currentColor"><path d="M658.286 0C415.89 0 0 297.106 0 512c0 214.82 415.89 512 658.286 512 242.322 0 658.285-294.839 658.285-512S900.608 0 658.286 0zm0 877.714c-161.573 0-512-221.769-512-365.714 0-144.018 350.427-365.714 512-365.714 161.572 0 512 217.16 512 365.714s-350.428 365.714-512 365.714z"/><path d="M658.286 292.571a219.429 219.429 0 1 0 0 438.858 219.429 219.429 0 0 0 0-438.858zm0 292.572a73.143 73.143 0 1 1 0-146.286 73.143 73.143 0 0 1 0 146.286z"/></svg>'}),i("button",{class:"download-button",onClick:()=>m(),title:"download",innerHTML:'<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 1024 1024" fill="currentColor"><path d="M828.976 894.125H190.189c-70.55 0-127.754-57.185-127.754-127.753V606.674c0-17.634 14.31-31.933 31.933-31.933h63.889c17.634 0 31.932 14.299 31.932 31.933v95.822c0 35.282 28.596 63.877 63.877 63.877h511.033c35.281 0 63.877-28.595 63.877-63.877v-95.822c0-17.634 14.298-31.933 31.943-31.933h63.878c17.635 0 31.933 14.299 31.933 31.933v159.7c0 70.566-57.191 127.751-127.754 127.751zM249.939 267.51c12.921-12.92 33.885-12.92 46.807 0l148.97 148.972V94.893c0-17.634 14.302-31.947 31.934-31.947h63.876c17.638 0 31.946 14.313 31.946 31.947v321.589l148.97-148.972c12.922-12.92 33.876-12.92 46.797 0l46.814 46.818c12.922 12.922 12.922 33.874 0 46.807L552.261 624.93c-1.14 1.138-21.664 13.684-42.315 13.693-20.877.01-41.88-12.542-43.021-13.693L203.122 361.135c-12.923-12.934-12.923-33.885 0-46.807l46.817-46.818z"/></svg>'})]),i("div",{ref:t,class:"mermaid-wrapper"},l.value?i("div",{class:"mermaid-content",innerHTML:l.value}):i(po,{class:"mermaid-loading",height:96}))]}});const nl=Xn("VUEPRESS_TAB_STORE",{});var Gg=z({name:"Tabs",props:{active:{type:Number,default:0},data:{type:Array,required:!0},id:{type:String,required:!0},tabId:{type:String,default:""}},slots:Object,setup(s,{slots:a}){const n=Q(s.active),t=Ts([]),e=()=>{s.tabId&&(nl.value[s.tabId]=s.data[n.value].id)},l=(r=n.value)=>{n.value=r<t.value.length-1?r+1:0,t.value[n.value].focus()},o=(r=n.value)=>{n.value=r>0?r-1:t.value.length-1,t.value[n.value].focus()},p=(r,m)=>{r.key===" "||r.key==="Enter"?(r.preventDefault(),n.value=m):r.key==="ArrowRight"?(r.preventDefault(),l()):r.key==="ArrowLeft"&&(r.preventDefault(),o()),e()},c=()=>{if(s.tabId){const r=s.data.findIndex(({id:m})=>nl.value[s.tabId]===m);if(r!==-1)return r}return s.active};return ys(()=>{n.value=c(),cs(()=>nl.value[s.tabId],(r,m)=>{if(s.tabId&&r!==m){const d=s.data.findIndex(({id:h})=>h===r);d!==-1&&(n.value=d)}})}),()=>s.data.length?i("div",{class:"vp-tabs"},[i("div",{class:"vp-tabs-nav",role:"tablist"},s.data.map(({id:r},m)=>{const d=m===n.value;return i("button",{type:"button",ref:h=>{h&&(t.value[m]=h)},class:["vp-tab-nav",{active:d}],role:"tab","aria-controls":`tab-${s.id}-${m}`,"aria-selected":d,onClick:()=>{n.value=m,e()},onKeydown:h=>p(h,m)},a[`title${m}`]({value:r,isActive:d}))})),s.data.map(({id:r},m)=>{const d=m===n.value;return i("div",{class:["vp-tab",{active:d}],id:`tab-${s.id}-${m}`,role:"tabpanel","aria-expanded":d},[i("div",{class:"vp-tab-title"},a[`title${m}`]({value:r,isActive:d})),a[`tab${m}`]({value:r,isActive:d})])})]):null}});const Wg=va({enhance:({app:s})=>{s.component("CodeTabs",yg),ga("CodeGroup",s)||s.component("CodeGroup",kg),ga("CodeGroupItem",s)||s.component("CodeGroupItem",mc),s.component("CodeDemo",zg),s.component("MdDemo",Fg),jg(s),s.component("Mermaid",Ug),s.component("Tabs",Gg)},setup:()=>{$g()}});let Kg={};const fc=Symbol(""),Xg=()=>bs(fc),Yg=s=>{s.provide(fc,Kg)},Qg='<div class="photo-swipe-loading"><svg xmlns="http://www.w3.org/2000/svg" width="48" height="48" preserveAspectRatio="xMidYMid" viewBox="25 25 50 50"><animateTransform attributeName="transform" type="rotate" dur="2s" keyTimes="0;1" repeatCount="indefinite" values="0;360"></animateTransform><circle cx="50" cy="50" r="20" fill="none" stroke="currentColor" stroke-width="4" stroke-linecap="round"><animate attributeName="stroke-dasharray" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="1,200;90,200;1,200"></animate><animate attributeName="stroke-dashoffset" dur="1.5s" keyTimes="0;0.5;1" repeatCount="indefinite" values="0;-35px;-125px"></animate></circle></svg></div>',Jg=s=>Ss(s)?Array.from(document.querySelectorAll(s)):s.map(a=>Array.from(document.querySelectorAll(a))).flat(),vc=s=>new Promise((a,n)=>{s.complete?a({type:"image",element:s,src:s.src,width:s.naturalWidth,height:s.naturalHeight,alt:s.alt,msrc:s.src}):(s.onload=()=>a(vc(s)),s.onerror=t=>n(t))}),Zg=s=>{const{isSupported:a,toggle:n}=co();s.on("uiRegister",()=>{a.value&&s.ui.registerElement({name:"fullscreen",order:7,isButton:!0,html:'<svg class="pswp__icn" viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg"><path d="M249.5 270.833H437v-75H212a37.5 37.5 0 0 0-37.5 37.5v225h75v-187.5zm-37.5 600h225v-75H249.5v-187.5h-75v225a37.5 37.5 0 0 0 37.5 37.5zm637.5-37.5v-225h-75v187.5H587v75h225a37.5 37.5 0 0 0 37.5-37.5zM587 270.833h187.5v187.5h75v-225a37.5 37.5 0 0 0-37.5-37.5H587v75z"/></svg>',onClick:()=>{n()}}),s.ui.registerElement({name:"download",order:8,isButton:!0,tagName:"a",html:{isCustomSVG:!0,inner:'<path d="M20.5 14.3 17.1 18V10h-2.2v7.9l-3.4-3.6L10 16l6 6.1 6-6.1-1.5-1.6ZM23 23H9v2h14" id="pswp__icn-download"/>',outlineID:"pswp__icn-download"},onInit:(t,e)=>{t.setAttribute("download",""),t.setAttribute("target","_blank"),t.setAttribute("rel","noopener"),e.on("change",()=>{t.setAttribute("href",e.currSlide.data.src)})}}),s.ui.registerElement({name:"bulletsIndicator",className:"photo-swipe-bullets-indicator",appendTo:"wrapper",onInit:(t,e)=>{const l=[];let o=-1;for(let p=0;p<e.getNumItems();p++){const c=document.createElement("div");c.className="photo-swipe-bullet",c.onclick=r=>{e.goTo(l.indexOf(r.target))},l.push(c),t.appendChild(c)}e.on("change",()=>{o>=0&&l[o].classList.remove("active"),l[e.currIndex].classList.add("active"),o=e.currIndex})}})})},s2=(s,a,n=!0)=>u(()=>import("./photoswipe.esm-SzV8tJDW.js"),__vite__mapDeps([])).then(({default:t})=>{let e=null;const l=s.map(o=>({html:Qg,element:o,msrc:o.src}));return s.forEach((o,p)=>{const c=()=>{e==null||e.destroy(),e=new t({preloaderDelay:0,showHideAnimationType:"zoom",...a,dataSource:l,index:p,...n?{closeOnVerticalDrag:!0,wheelToZoom:!1}:{}}),Zg(e),e.addFilter("thumbEl",()=>o),e.addFilter("placeholderSrc",()=>o.src),e.init()};o.getAttribute("photo-swipe")||(o.style.cursor="zoom-in",o.addEventListener("click",()=>{c()}),o.addEventListener("keypress",({key:r})=>{r==="Enter"&&c()}),o.setAttribute("photo-swipe","")),vc(o).then(r=>{l.splice(p,1,r),e==null||e.refreshSlideContent(p)})}),n?Ms("wheel",()=>{e==null||e.close()}):()=>{}}),a2=({selector:s,locales:a,delay:n=500,scrollToClose:t=!0})=>{const e=Xg(),l=Pt(a),o=hs();let p=null;const c=()=>new Promise(r=>setTimeout(r,n)).then(()=>Ja()).then(async()=>{p=await s2(Jg(s),{...e,...l.value},t)});ys(()=>{c(),cs(()=>o.value.path,()=>{p==null||p(),c()})}),qn(()=>{p==null||p()})};var n2={"/":{closeTitle:"关闭",downloadTitle:"下载图片",fullscreenTitle:"切换全屏",zoomTitle:"缩放",arrowPrevTitle:"上一个 (左箭头)",arrowNextTitle:"下一个 (右箭头)"}};const t2=".theme-hope-content :not(a) > img:not([no-view])",e2=n2,l2=800,o2=!0,p2=va({enhance:({app:s})=>{Yg(s)},setup:()=>{a2({selector:t2,delay:l2,locales:e2,scrollToClose:o2})}}),yc=()=>{const s=hs();return b(()=>s.value.readingTime??null)},kc=(s,a)=>{const{minutes:n,words:t}=s,{less1Minute:e,word:l,time:o}=a;return{time:n<1?e:o.replace("$time",Math.round(n).toString()),words:l.replace("$word",t.toString())}};var Gp={"/":{word:"约 $word 字",less1Minute:"小于 1 分钟",time:"大约 $time 分钟"}};const Wp={words:"",time:""},Al=typeof Gp>"u"?null:Gp,_c=()=>Al?Pt(Al):b(()=>null),i2=()=>{if(typeof Al>"u")return b(()=>Wp);const s=yc(),a=_c();return b(()=>s.value&&a.value?kc(s.value,a.value):Wp)},Ma=()=>rc(),ls=()=>eg(),vn=()=>{const s=Ma();return b(()=>!!s.value.pure)},tl=()=>null,r2="719px",c2="1440px",m2="false",ho={mobileBreakPoint:r2,pcBreakPoint:c2,enableThemeColor:m2},go={"/zh/demo/":[],"/zh/posts/":[]},bc=s=>{const{icon:a="",color:n,size:t}=s,e=n||t?{}:null;return n&&(e.color=n),t&&(e.height=Number.isNaN(Number(t))?t:`${t}px`),Za(a)?i("img",{class:"icon",src:a,alt:"","no-view":"",style:e}):Ce(a)?i("img",{class:"icon",src:As(a),alt:"","aria-hidden":"","no-view":"",style:e}):i(ia("FontIcon"),s)};bc.displayName="HopeIcon";var js=bc;const Dt=()=>{const s=Da(),a=Aa();return n=>{if(n)if(Ce(n))a.path!==n&&s.push(n);else if(ur(n))window&&window.open(n);else{const t=a.path.slice(0,a.path.lastIndexOf("/"));s.push(`${t}/${encodeURI(n)}`)}}},Ec=()=>{const s=ls(),a=ks();return b(()=>{const{author:n}=a.value;return n?bt(n):n===!1?[]:bt(s.value.author,!1)})},u2=()=>{const s=ks(),a=bs(Symbol.for("categoryMap"));return b(()=>Wr(s.value.category).map(n=>{var t;return{name:n,path:((t=a==null?void 0:a.value.map[n])==null?void 0:t.path)||""}}))},d2=()=>{const s=ks(),a=bs(Symbol.for("tagMap"));return b(()=>Kr(s.value.tag).map(n=>{var t;return{name:n,path:((t=a==null?void 0:a.value.map[n])==null?void 0:t.path)||""}}))},h2=()=>{const s=ks(),a=hs();return b(()=>{const n=oo(s.value.date);if(n)return n;const{createdTime:t}=a.value.git||{};return t?new Date(t):null})},g2=()=>{const s=ls(),a=hs(),n=ks(),t=Ec(),e=u2(),l=d2(),o=h2(),p=yc(),c=i2(),r=b(()=>({author:t.value,category:e.value,date:o.value,localizedDate:a.value.localizedDate,tag:l.value,isOriginal:n.value.isOriginal||!1,readingTime:p.value,readingTimeLocale:c.value,pageview:"pageview"in n.value?n.value.pageview:!0})),m=b(()=>"pageInfo"in n.value?n.value.pageInfo:"pageInfo"in s.value?s.value.pageInfo:null);return{info:r,items:m}},{mobileBreakPoint:f2,pcBreakPoint:v2}=ho,Kp=s=>s.endsWith("px")?Number(s.slice(0,-2)):null,Rt=()=>{const s=Q(!1),a=Q(!1),n=()=>{s.value=window.innerWidth<=(Kp(f2)??719),a.value=window.innerWidth>=(Kp(v2)??1440)};return ys(()=>{n(),Ms("resize",n,!1),Ms("orientationchange",n,!1)}),{isMobile:s,isPC:a}},wc=Symbol(""),Mt=()=>{const s=bs(wc);if(!s)throw new Error("useDarkmode() is called without provider.");return s},y2=s=>{const a=Ma(),n=x1(),t=b(()=>a.value.darkmode||"switch"),e=Xn("vuepress-theme-hope-scheme","auto"),l=b(()=>{const p=t.value;return p==="disable"?!1:p==="enable"?!0:p==="auto"?n.value:p==="toggle"?e.value==="dark":e.value==="dark"||e.value==="auto"&&n.value}),o=b(()=>{const p=t.value;return p==="switch"||p==="toggle"});s.provide(wc,{canToggle:o,config:t,isDarkmode:l,status:e}),Object.defineProperties(s.config.globalProperties,{$isDarkmode:{get:()=>l.value}})},k2=()=>{const{config:s,isDarkmode:a,status:n}=Mt();Ri(()=>{s.value==="disable"?n.value="light":s.value==="enable"?n.value="dark":s.value==="toggle"&&n.value==="auto"&&(n.value="light")}),ys(()=>{cs(a,t=>document.documentElement.setAttribute("data-theme",t?"dark":"light"),{immediate:!0})})};var Ws=z({name:"AutoLink",inheritAttrs:!1,props:{config:{type:Object,required:!0},exact:Boolean,noExternalLinkIcon:Boolean},emits:["focusout"],slots:Object,setup(s,{attrs:a,emit:n,slots:t}){const e=Aa(),l=Ar(),o=jn(s,"config"),p=b(()=>Za(o.value.link)),c=b(()=>!p.value&&ur(o.value.link)),r=b(()=>o.value.target||(p.value?"_blank":void 0)),m=b(()=>r.value==="_blank"),d=b(()=>!p.value&&!c.value&&!m.value),h=b(()=>o.value.rel||(m.value?"noopener noreferrer":null)),g=b(()=>o.value.ariaLabel||o.value.text),y=b(()=>{if(s.exact)return!1;const w=sa(l.value.locales);return w.length?w.every(k=>k!==o.value.link):o.value.link!=="/"}),E=b(()=>d.value?o.value.activeMatch?new RegExp(o.value.activeMatch,"u").test(e.path):y.value?Fn(e.path,o.value.link):e.path===o.value.link:!1);return()=>{const{before:w,after:k,default:C}=t,{text:_,icon:I,link:M}=o.value;return d.value?i(Ls,{to:M,"aria-label":g.value,...a,class:["nav-link",{active:E.value},a.class],onFocusout:()=>n("focusout")},()=>C?C():[w?w():i(js,{icon:I}),_,k==null?void 0:k()]):i("a",{href:M,rel:h.value,target:r.value,"aria-label":g.value,...a,class:["nav-link",a.class],onFocusout:()=>n("focusout")},C?C():[w?w():i(js,{icon:I}),_,s.noExternalLinkIcon?null:i(pc),k==null?void 0:k()])}}});const $n=(s,a,n=!1)=>"activeMatch"in a?new RegExp(a.activeMatch,"u").test(s.path):jr(s,a.link)?!0:a.children&&!n?a.children.some(t=>$n(s,t)):!1,xc=(s,a)=>a.type==="group"?a.children.some(n=>n.type==="group"?xc(s,n):n.type==="page"&&$n(s,n,!0))||"prefix"in a&&jr(s,a.prefix):!1,Ac=(s,a)=>Ss(s.link)?i(Ws,{...a,config:s}):i("p",a,[i(js,{icon:s.icon}),s.text]),Cc=s=>{const a=Aa();return s?i("ul",{class:"vp-sidebar-sub-headers"},s.map(n=>i("li",{class:"vp-sidebar-sub-header"},[Ac(n,{class:["vp-sidebar-link","vp-heading",{active:$n(a,n,!0)}]}),Cc(n.children)]))):null};var fs=(s=>(s.type="y",s.title="t",s.shortTitle="s",s.icon="i",s.author="a",s.date="d",s.localizedDate="l",s.category="c",s.tag="g",s.isEncrypted="n",s.isOriginal="o",s.readingTime="r",s.excerpt="e",s.sticky="u",s.cover="v",s.index="I",s.order="O",s))(fs||{}),Ic=(s=>(s.article="a",s.home="h",s.slide="s",s.page="p",s))(Ic||{});const on=(s="",a="")=>Ce(a)?a:`${mr(s)}${a}`,Sn=(s,a=!1)=>{const{meta:n,path:t}=Wn(s);return n?{text:!a&&n[fs.shortTitle]?n[fs.shortTitle]:n[fs.title]||t,link:t,...n[fs.icon]?{icon:n[fs.icon]}:{}}:{text:t,link:t}},Te=(s,a,n)=>n>0?a.map(t=>({type:"heading",text:t.title,link:`${s.path}#${t.slug}`,children:Te(s,t.children,n-1)})):[],Cl=({config:s,page:a,headerDepth:n,prefix:t=""})=>{const e=(l,o=t)=>{var c;const p=Ss(l)?Sn(on(o,l)):l.link?{...l,...Vn(l.link)?{}:{link:Sn(on(o,l.link)).link}}:l;if("children"in p){const r=on(o,p.prefix),m=p.children==="structure"?go[r]:p.children;return{type:"group",...p,prefix:r,children:m.map(d=>e(d,r))}}return{type:"page",...p,children:p.link===a.path?Te(a,((c=a.headers[0])==null?void 0:c.level)===1?a.headers[0].children:a.headers,n):[]}};return s.map(l=>e(l))},_2=({config:s,page:a,headerDepth:n})=>{const t=sa(s).sort((e,l)=>l.length-e.length);for(const e of t)if(Fn(decodeURI(a.path),e)){const l=s[e];return l?Cl({config:l==="structure"?go[e]:l==="heading"?Te(a,a.headers,n):l,page:a,headerDepth:n,prefix:e}):[]}return console.warn(`${a.path} is missing sidebar config.`),[]},b2=({config:s,routeLocale:a,page:n,headerDepth:t})=>s==="heading"?Te(n,n.headers,t):s==="structure"?Cl({config:go[a],page:n,headerDepth:t,prefix:a}):xl(s)?Cl({config:s,page:n,headerDepth:t}):Gn(s)?_2({config:s,page:n,headerDepth:t}):[],Lc=Symbol(""),E2=()=>{const s=ks(),a=ls(),n=hs(),t=Ra(),e=b(()=>s.value.home?!1:s.value.sidebar??a.value.sidebar??"structure"),l=b(()=>s.value.headerDepth??a.value.headerDepth??2),o=io(()=>[e.value,l.value,n.value.path,null],()=>b2({config:e.value,routeLocale:t.value,page:n.value,headerDepth:l.value}));ha(Lc,o)},fo=()=>{const s=bs(Lc);if(!s)throw new Error("useSidebarItems() is called without provider.");return s};var w2=z({name:"PageFooter",setup(){const s=Ma(),a=ls(),n=ks(),t=Ec(),e=b(()=>{const{copyright:r,footer:m}=n.value;return m!==!1&&!!(r||m||a.value.displayFooter)}),l=b(()=>{const{footer:r}=n.value;return r===!1?!1:Ss(r)?r:a.value.footer||""}),o=b(()=>t.value.map(({name:r})=>r).join(", ")),p=r=>`Copyright © ${new Date().getFullYear()} ${o.value} ${r?`${r} Licensed`:""}`,c=b(()=>{const{copyright:r,license:m=""}=n.value,{license:d}=s.value,{copyright:h}=a.value;return r??(m?p(m):Ss(h)?h:o.value||d?p(d):!1)});return()=>e.value?i("footer",{class:"vp-footer-wrapper"},[l.value?i("div",{class:"vp-footer",innerHTML:l.value}):null,c.value?i("div",{class:"vp-copyright",innerHTML:c.value}):null]):null}}),x2=z({name:"NavbarDropdownLink",props:{config:{type:Object,required:!0}},slots:Object,setup(s,{slots:a}){const n=hs(),t=jn(s,"config"),e=b(()=>t.value.ariaLabel||t.value.text),l=Q(!1);cs(()=>n.value.path,()=>{l.value=!1});const o=p=>{p.detail===0&&(l.value=!l.value)};return()=>{var p;return i("div",{class:["dropdown-wrapper",{open:l.value}]},[i("button",{type:"button",class:"dropdown-title","aria-label":e.value,onClick:o},[((p=a.title)==null?void 0:p.call(a))||i("span",{class:"title"},[i(js,{icon:t.value.icon}),s.config.text]),i("span",{class:"arrow"}),i("ul",{class:"nav-dropdown"},t.value.children.map((c,r)=>{const m=r===t.value.children.length-1;return i("li",{class:"dropdown-item"},"children"in c?[i("h4",{class:"dropdown-subtitle"},c.link?i(Ws,{config:c,onFocusout:()=>{c.children.length===0&&m&&(l.value=!1)}}):i("span",c.text)),i("ul",{class:"dropdown-subitem-wrapper"},c.children.map((d,h)=>i("li",{class:"dropdown-subitem"},i(Ws,{config:d,onFocusout:()=>{h===c.children.length-1&&m&&(l.value=!1)}}))))]:i(Ws,{config:c,onFocusout:()=>{m&&(l.value=!1)}}))}))])])}}});const Tc=(s,a="")=>Ss(s)?Sn(on(a,s)):"children"in s?{...s,...s.link&&!Vn(s.link)?Sn(on(a,s.link)):{},children:s.children.map(n=>Tc(n,on(a,s.prefix)))}:{...s,link:Vn(s.link)?s.link:Sn(on(a,s.link)).link},Pc=()=>{const s=ls(),a=()=>(s.value.navbar||[]).map(n=>Tc(n));return io(()=>s.value.navbar,()=>a())},A2=()=>{const s=ls(),a=b(()=>s.value.repo||null),n=b(()=>a.value?a1(a.value):null),t=b(()=>a.value?qr(a.value):null),e=b(()=>n.value?s.value.repoLabel??(t.value===null?"Source":t.value):null);return b(()=>!n.value||!e.value||s.value.repoDisplay===!1?null:{type:t.value||"Source",label:e.value,link:n.value})};var C2=z({name:"NavScreenDropdown",props:{config:{type:Object,required:!0}},setup(s){const a=hs(),n=jn(s,"config"),t=b(()=>n.value.ariaLabel||n.value.text),e=Q(!1);cs(()=>a.value.path,()=>{e.value=!1});const l=(o,p)=>p[p.length-1]===o;return()=>[i("button",{type:"button",class:["nav-screen-dropdown-title",{active:e.value}],"aria-label":t.value,onClick:()=>{e.value=!e.value}},[i("span",{class:"title"},[i(js,{icon:n.value.icon}),s.config.text]),i("span",{class:["arrow",e.value?"down":"end"]})]),i("ul",{class:["nav-screen-dropdown",{hide:!e.value}]},n.value.children.map(o=>i("li",{class:"dropdown-item"},"children"in o?[i("h4",{class:"dropdown-subtitle"},o.link?i(Ws,{config:o,onFocusout:()=>{l(o,n.value.children)&&o.children.length===0&&(e.value=!1)}}):i("span",o.text)),i("ul",{class:"dropdown-subitem-wrapper"},o.children.map(p=>i("li",{class:"dropdown-subitem"},i(Ws,{config:p,onFocusout:()=>{l(p,o.children)&&l(o,n.value.children)&&(e.value=!1)}}))))]:i(Ws,{config:o,onFocusout:()=>{l(o,n.value.children)&&(e.value=!1)}}))))]}}),I2=z({name:"NavScreenLinks",setup(){const s=Pc();return()=>s.value.length?i("nav",{class:"nav-screen-links"},s.value.map(a=>i("div",{class:"navbar-links-item"},"children"in a?i(C2,{config:a}):i(Ws,{config:a})))):null}});const Sc=()=>i(us,{name:"dark"},()=>i("path",{d:"M524.8 938.667h-4.267a439.893 439.893 0 0 1-313.173-134.4 446.293 446.293 0 0 1-11.093-597.334A432.213 432.213 0 0 1 366.933 90.027a42.667 42.667 0 0 1 45.227 9.386 42.667 42.667 0 0 1 10.24 42.667 358.4 358.4 0 0 0 82.773 375.893 361.387 361.387 0 0 0 376.747 82.774 42.667 42.667 0 0 1 54.187 55.04 433.493 433.493 0 0 1-99.84 154.88 438.613 438.613 0 0 1-311.467 128z"}));Sc.displayName="DarkIcon";const Oc=()=>i(us,{name:"light"},()=>i("path",{d:"M952 552h-80a40 40 0 0 1 0-80h80a40 40 0 0 1 0 80zM801.88 280.08a41 41 0 0 1-57.96-57.96l57.96-58a41.04 41.04 0 0 1 58 58l-58 57.96zM512 752a240 240 0 1 1 0-480 240 240 0 0 1 0 480zm0-560a40 40 0 0 1-40-40V72a40 40 0 0 1 80 0v80a40 40 0 0 1-40 40zm-289.88 88.08-58-57.96a41.04 41.04 0 0 1 58-58l57.96 58a41 41 0 0 1-57.96 57.96zM192 512a40 40 0 0 1-40 40H72a40 40 0 0 1 0-80h80a40 40 0 0 1 40 40zm30.12 231.92a41 41 0 0 1 57.96 57.96l-57.96 58a41.04 41.04 0 0 1-58-58l58-57.96zM512 832a40 40 0 0 1 40 40v80a40 40 0 0 1-80 0v-80a40 40 0 0 1 40-40zm289.88-88.08 58 57.96a41.04 41.04 0 0 1-58 58l-57.96-58a41 41 0 0 1 57.96-57.96z"}));Oc.displayName="LightIcon";const Dc=()=>i(us,{name:"auto"},()=>i("path",{d:"M512 992C246.92 992 32 777.08 32 512S246.92 32 512 32s480 214.92 480 480-214.92 480-480 480zm0-840c-198.78 0-360 161.22-360 360 0 198.84 161.22 360 360 360s360-161.16 360-360c0-198.78-161.22-360-360-360zm0 660V212c165.72 0 300 134.34 300 300 0 165.72-134.28 300-300 300z"}));Dc.displayName="AutoIcon";const Rc=()=>i(us,{name:"enter-fullscreen"},()=>i("path",{d:"M762.773 90.24h-497.28c-96.106 0-174.4 78.293-174.4 174.4v497.28c0 96.107 78.294 174.4 174.4 174.4h497.28c96.107 0 175.04-78.293 174.4-174.4V264.64c0-96.213-78.186-174.4-174.4-174.4zm-387.2 761.173H215.04c-21.867 0-40.427-17.92-41.067-41.066V649.92c0-22.507 17.92-40.427 40.427-40.427 11.307 0 21.227 4.694 28.48 11.947 7.253 7.253 11.947 17.92 11.947 28.48v62.293l145.28-145.28c15.893-15.893 41.813-15.893 57.706 0 15.894 15.894 15.894 41.814 0 57.707l-145.28 145.28h62.294c22.506 0 40.426 17.92 40.426 40.427s-17.173 41.066-39.68 41.066zM650.24 165.76h160.427c21.866 0 40.426 17.92 41.066 41.067v160.426c0 22.507-17.92 40.427-40.426 40.427-11.307 0-21.227-4.693-28.48-11.947-7.254-7.253-11.947-17.92-11.947-28.48v-62.186L625.6 450.347c-15.893 15.893-41.813 15.893-57.707 0-15.893-15.894-15.893-41.814 0-57.707l145.28-145.28H650.88c-22.507 0-40.427-17.92-40.427-40.427s17.174-41.173 39.787-41.173z"}));Rc.displayName="EnterFullScreenIcon";const Mc=()=>i(us,{name:"cancel-fullscreen"},()=>i("path",{d:"M778.468 78.62H247.922c-102.514 0-186.027 83.513-186.027 186.027V795.08c0 102.514 83.513 186.027 186.027 186.027h530.432c102.514 0 186.71-83.513 186.026-186.027V264.647C964.494 162.02 880.981 78.62 778.468 78.62zM250.88 574.35h171.122c23.324 0 43.122 19.115 43.804 43.805v171.121c0 24.008-19.114 43.122-43.122 43.122-12.06 0-22.641-5.006-30.378-12.743s-12.743-19.115-12.743-30.379V722.83L224.597 877.91c-16.953 16.952-44.6 16.952-61.553 0-16.953-16.954-16.953-44.602 0-61.554L318.009 661.39h-66.446c-24.007 0-43.122-19.114-43.122-43.122 0-24.12 18.432-43.918 42.439-43.918zm521.899-98.873H601.657c-23.325 0-43.122-19.114-43.805-43.804V260.55c0-24.007 19.115-43.122 43.122-43.122 12.06 0 22.642 5.007 30.379 12.743s12.743 19.115 12.743 30.38v66.445l154.965-154.965c16.953-16.953 44.601-16.953 61.554 0 16.953 16.953 16.953 44.6 0 61.554L705.536 388.55h66.446c24.007 0 43.122 19.115 43.122 43.122.114 24.007-18.318 43.804-42.325 43.804z"}));Mc.displayName="CancelFullScreenIcon";const Vc=()=>i(us,{name:"outlook"},()=>[i("path",{d:"M224 800c0 9.6 3.2 44.8 6.4 54.4 6.4 48-48 76.8-48 76.8s80 41.6 147.2 0 134.4-134.4 38.4-195.2c-22.4-12.8-41.6-19.2-57.6-19.2C259.2 716.8 227.2 761.6 224 800zM560 675.2l-32 51.2c-51.2 51.2-83.2 32-83.2 32 25.6 67.2 0 112-12.8 128 25.6 6.4 51.2 9.6 80 9.6 54.4 0 102.4-9.6 150.4-32l0 0c3.2 0 3.2-3.2 3.2-3.2 22.4-16 12.8-35.2 6.4-44.8-9.6-12.8-12.8-25.6-12.8-41.6 0-54.4 60.8-99.2 137.6-99.2 6.4 0 12.8 0 22.4 0 12.8 0 38.4 9.6 48-25.6 0-3.2 0-3.2 3.2-6.4 0-3.2 3.2-6.4 3.2-6.4 6.4-16 6.4-16 6.4-19.2 9.6-35.2 16-73.6 16-115.2 0-105.6-41.6-198.4-108.8-268.8C704 396.8 560 675.2 560 675.2zM224 419.2c0-28.8 22.4-51.2 51.2-51.2 28.8 0 51.2 22.4 51.2 51.2 0 28.8-22.4 51.2-51.2 51.2C246.4 470.4 224 448 224 419.2zM320 284.8c0-22.4 19.2-41.6 41.6-41.6 22.4 0 41.6 19.2 41.6 41.6 0 22.4-19.2 41.6-41.6 41.6C339.2 326.4 320 307.2 320 284.8zM457.6 208c0-12.8 12.8-25.6 25.6-25.6 12.8 0 25.6 12.8 25.6 25.6 0 12.8-12.8 25.6-25.6 25.6C470.4 233.6 457.6 220.8 457.6 208zM128 505.6C128 592 153.6 672 201.6 736c28.8-60.8 112-60.8 124.8-60.8-16-51.2 16-99.2 16-99.2l316.8-422.4c-48-19.2-99.2-32-150.4-32C297.6 118.4 128 291.2 128 505.6zM764.8 86.4c-22.4 19.2-390.4 518.4-390.4 518.4-22.4 28.8-12.8 76.8 22.4 99.2l9.6 6.4c35.2 22.4 80 12.8 99.2-25.6 0 0 6.4-12.8 9.6-19.2 54.4-105.6 275.2-524.8 288-553.6 6.4-19.2-3.2-32-19.2-32C777.6 76.8 771.2 80 764.8 86.4z"})]);Vc.displayName="OutlookIcon";var Bc=z({name:"AppearanceSwitch",setup(){const{config:s,isDarkmode:a,status:n}=Mt(),t=vn(),e=()=>{s.value==="switch"?n.value={light:"dark",dark:"auto",auto:"light"}[n.value]:n.value=n.value==="light"?"dark":"light"},l=async o=>{if(!(document.startViewTransition&&!window.matchMedia("(prefers-reduced-motion: reduce)").matches&&!t.value)||!o){e();return}const p=o.clientX,c=o.clientY,r=Math.hypot(Math.max(p,innerWidth-p),Math.max(c,innerHeight-c)),m=a.value;await document.startViewTransition(async()=>{e(),await Ja()}).ready,a.value!==m&&document.documentElement.animate({clipPath:a.value?[`circle(${r}px at ${p}px ${c}px)`,`circle(0px at ${p}px ${c}px)`]:[`circle(0px at ${p}px ${c}px)`,`circle(${r}px at ${p}px ${c}px)`]},{duration:400,pseudoElement:a.value?"::view-transition-old(root)":"::view-transition-new(root)"})};return()=>i("button",{type:"button",id:"appearance-switch",onClick:l},[i(Dc,{style:{display:n.value==="auto"?"block":"none"}}),i(Sc,{style:{display:n.value==="dark"?"block":"none"}}),i(Oc,{style:{display:n.value==="light"?"block":"none"}})])}}),L2=z({name:"AppearanceMode",setup(){const s=ls(),{canToggle:a}=Mt(),n=b(()=>s.value.outlookLocales.darkmode);return()=>a.value?i("div",{class:"appearance-wrapper"},[i("label",{class:"appearance-title",for:"appearance-switch"},n.value),i(Bc)]):null}});const el="VUEPRESS_THEME_COLOR";var T2=z({name:"ThemeColorPicker",props:{themeColor:{type:Object,required:!0}},setup(s){const a=(n="")=>{const t=document.documentElement.classList,e=sa(s.themeColor);if(!n){localStorage.removeItem(el),t.remove(...e);return}t.remove(...e.filter(l=>l!==n)),t.add(n),localStorage.setItem(el,n)};return ys(()=>{const n=localStorage.getItem(el);n&&a(n)}),()=>i("ul",{id:"theme-color-picker"},[i("li",i("span",{class:"theme-color",onClick:()=>a()})),gn(s.themeColor).map(([n,t])=>i("li",i("span",{style:{background:t},onClick:()=>a(n)})))])}});const On=ho.enableThemeColor==="true",P2=On?J0(gn(ho).filter(([s])=>s.startsWith("theme-"))):{};var S2=z({name:"ThemeColor",setup(){const s=ls(),a=b(()=>s.value.outlookLocales.themeColor);return()=>On?i("div",{class:"theme-color-wrapper"},[i("label",{class:"theme-color-title",for:"theme-color-picker"},a.value),i(T2,{themeColor:P2})]):null}}),zc=z({name:"ToggleFullScreenButton",setup(){const s=ls(),{isSupported:a,isFullscreen:n,toggle:t}=co(),e=b(()=>s.value.outlookLocales.fullscreen);return()=>a?i("div",{class:"full-screen-wrapper"},[i("label",{class:"full-screen-title",for:"full-screen-switch"},e.value),i("button",{type:"button",id:"full-screen-switch",class:"full-screen",ariaPressed:n.value,onClick:()=>t()},n.value?i(Mc):i(Rc))]):null}}),Fc=z({name:"OutlookSettings",setup(){const s=Ma(),a=vn(),n=b(()=>!a.value&&s.value.fullscreen);return()=>i(Ae,()=>[On?i(S2):null,i(L2),n.value?i(zc):null])}}),O2=z({name:"NavScreen",props:{show:Boolean},emits:["close"],slots:Object,setup(s,{emit:a,slots:n}){const t=hs(),{isMobile:e}=Rt(),l=Ts(),o=ac(l);return ys(()=>{l.value=document.body,cs(e,p=>{!p&&s.show&&(o.value=!1,a("close"))}),cs(()=>t.value.path,()=>{o.value=!1,a("close")})}),qn(()=>{o.value=!1}),()=>i(Qa,{name:"fade",onEnter:()=>{o.value=!0},onAfterLeave:()=>{o.value=!1}},()=>{var p,c;return s.show?i("div",{id:"nav-screen"},i("div",{class:"vp-nav-screen-container"},[(p=n.before)==null?void 0:p.call(n),i(I2),i("div",{class:"vp-outlook-wrapper"},i(Fc)),(c=n.after)==null?void 0:c.call(n)])):null})}}),D2=z({name:"NavbarBrand",setup(){const s=Ra(),a=Tt(),n=ls(),t=b(()=>n.value.home||s.value),e=b(()=>a.value.title),l=b(()=>n.value.navTitle??e.value),o=b(()=>n.value.logo?As(n.value.logo):null),p=b(()=>n.value.logoDark?As(n.value.logoDark):null);return()=>i(Ls,{to:t.value,class:"vp-brand"},()=>[o.value?i("img",{class:["vp-nav-logo",{light:!!p.value}],src:o.value,alt:""}):null,p.value?i("img",{class:["vp-nav-logo dark"],src:p.value,alt:""}):null,l.value?i("span",{class:["vp-site-name",{"hide-in-pad":o.value&&n.value.hideSiteNameOnMobile!==!1}]},l.value):null])}}),R2=z({name:"NavbarLinks",setup(){const s=Pc();return()=>s.value.length?i("nav",{class:"vp-nav-links"},s.value.map(a=>i("div",{class:"nav-item hide-in-mobile"},"children"in a?i(x2,{config:a}):i(Ws,{config:a})))):null}}),M2=z({name:"RepoLink",components:{BitbucketIcon:$r,GiteeIcon:Fr,GitHubIcon:Br,GitLabIcon:zr,SourceIcon:Hr},setup(){const s=A2();return()=>s.value?i("div",{class:"nav-item vp-repo"},i("a",{class:"vp-repo-link",href:s.value.link,target:"_blank",rel:"noopener noreferrer","aria-label":s.value.label},i(ia(`${s.value.type}Icon`),{style:{width:"1.25rem",height:"1.25rem",verticalAlign:"middle"}}))):null}});const $c=({active:s=!1},{emit:a})=>i("button",{type:"button",class:["vp-toggle-navbar-button",{"is-active":s}],"aria-label":"Toggle Navbar","aria-expanded":s,"aria-controls":"nav-screen",onClick:()=>a("toggle")},i("span",[i("span",{class:"vp-top"}),i("span",{class:"vp-middle"}),i("span",{class:"vp-bottom"})]));$c.displayName="ToggleNavbarButton";var V2=$c;const Il=(s,{emit:a})=>i("button",{type:"button",class:"vp-toggle-sidebar-button",title:"Toggle Sidebar",onClick:()=>a("toggle")},i("span",{class:"icon"}));Il.displayName="ToggleSidebarButton",Il.emits=["toggle"];var B2=Il,z2=z({name:"OutlookButton",setup(){const{isSupported:s}=co(),a=Ma(),n=vn(),t=hs(),{canToggle:e}=Mt(),l=Q(!1),o=b(()=>!n.value&&a.value.fullscreen&&s);return cs(()=>t.value.path,()=>{l.value=!1}),()=>e.value||o.value||On?i("div",{class:"nav-item hide-in-mobile"},e.value&&!o.value&&!On?i(Bc):o.value&&!e.value&&!On?i(zc):i("button",{type:"button",class:["outlook-button",{open:l.value}],tabindex:"-1","aria-hidden":!0},[i(Vc),i("div",{class:"outlook-dropdown"},i(Fc))])):null}}),F2=z({name:"NavBar",emits:["toggleSidebar"],slots:Object,setup(s,{emit:a,slots:n}){const t=ls(),{isMobile:e}=Rt(),l=Q(!1),o=b(()=>{const{navbarAutoHide:m="mobile"}=t.value;return m!=="none"&&(m==="always"||e.value)}),p=b(()=>t.value.navbarLayout||{start:["Brand"],center:["Links"],end:["Language","Repo","Outlook","Search"]}),c={Brand:D2,Language:tl,Links:R2,Repo:M2,Outlook:z2,Search:ga("Docsearch")?ia("Docsearch"):ga("SearchBox")?ia("SearchBox"):tl},r=m=>c[m]??(ga(m)?ia(m):tl);return()=>{var m,d,h,g,y,E;return[i("header",{id:"navbar",class:["vp-navbar",{"auto-hide":o.value,"hide-icon":t.value.navbarIcon===!1}]},[i("div",{class:"vp-navbar-start"},[i(B2,{onToggle:()=>{l.value&&(l.value=!1),a("toggleSidebar")}}),(m=n.startBefore)==null?void 0:m.call(n),(p.value.start||[]).map(w=>i(r(w))),(d=n.startAfter)==null?void 0:d.call(n)]),i("div",{class:"vp-navbar-center"},[(h=n.centerBefore)==null?void 0:h.call(n),(p.value.center||[]).map(w=>i(r(w))),(g=n.centerAfter)==null?void 0:g.call(n)]),i("div",{class:"vp-navbar-end"},[(y=n.endBefore)==null?void 0:y.call(n),(p.value.end||[]).map(w=>i(r(w))),(E=n.endAfter)==null?void 0:E.call(n),i(V2,{active:l.value,onToggle:()=>{l.value=!l.value}})])]),i(O2,{show:l.value,onClose:()=>{l.value=!1}},{before:()=>{var w;return(w=n.screenTop)==null?void 0:w.call(n)},after:()=>{var w;return(w=n.screenBottom)==null?void 0:w.call(n)}})]}}}),$2=z({name:"SidebarChild",props:{config:{type:Object,required:!0}},setup(s){const a=Aa();return()=>[Ac(s.config,{class:["vp-sidebar-link",`vp-sidebar-${s.config.type}`,{active:$n(a,s.config,!0)}],exact:!0}),Cc(s.config.children)]}}),H2=z({name:"SidebarGroup",props:{config:{type:Object,required:!0},open:{type:Boolean,required:!0}},emits:["toggle"],setup(s,{emit:a}){const n=Aa(),t=b(()=>$n(n,s.config)),e=b(()=>$n(n,s.config,!0));return()=>{const{collapsible:l,children:o=[],icon:p,prefix:c,link:r,text:m}=s.config;return i("section",{class:"vp-sidebar-group"},[i(l?"button":"p",{class:["vp-sidebar-heading",{clickable:l||r,exact:e.value,active:t.value}],...l?{type:"button",onClick:()=>a("toggle"),onKeydown:d=>{d.key==="Enter"&&a("toggle")}}:{}},[i(js,{icon:p}),r?i(Ws,{class:"vp-sidebar-title",config:{text:m,link:r},noExternalLinkIcon:!0}):i("span",{class:"vp-sidebar-title"},m),l?i("span",{class:["vp-arrow",s.open?"down":"end"]}):null]),s.open||!l?i(Hc,{key:c,config:o}):null])}}}),Hc=z({name:"SidebarLinks",props:{config:{type:Array,required:!0}},setup(s){const a=Aa(),n=Q(-1),t=e=>{n.value=e===n.value?-1:e};return cs(()=>a.path,()=>{const e=s.config.findIndex(l=>xc(a,l));n.value=e},{immediate:!0,flush:"post"}),()=>i("ul",{class:"vp-sidebar-links"},s.config.map((e,l)=>i("li",e.type==="group"?i(H2,{config:e,open:l===n.value,onToggle:()=>t(l)}):i($2,{config:e}))))}}),N2=z({name:"SideBar",slots:Object,setup(s,{slots:a}){const n=Aa(),t=ls(),e=fo(),l=Ts();return ys(()=>{cs(()=>n.hash,o=>{const p=document.querySelector(`.vp-sidebar a.vp-sidebar-link[href="${n.path}${o}"]`);if(!p)return;const{top:c,height:r}=l.value.getBoundingClientRect(),{top:m,height:d}=p.getBoundingClientRect();m<c?p.scrollIntoView(!0):m+d>c+r&&p.scrollIntoView(!1)},{immediate:!0})}),()=>{var o,p,c;return i("aside",{ref:l,id:"sidebar",class:["vp-sidebar",{"hide-icon":t.value.sidebarIcon===!1}]},[(o=a.top)==null?void 0:o.call(a),((p=a.default)==null?void 0:p.call(a))||i(Hc,{config:e.value}),(c=a.bottom)==null?void 0:c.call(a)])}}}),vo=z({name:"CommonWrapper",props:{containerClass:{type:String,default:""},noNavbar:Boolean,noSidebar:Boolean,noToc:Boolean},slots:Object,setup(s,{slots:a}){const n=Da(),t=hs(),e=ks(),l=ls(),{isMobile:o,isPC:p}=Rt(),[c,r]=he(!1),[m,d]=he(!1),h=fo(),g=Q(!1),y=b(()=>s.noNavbar||e.value.navbar===!1||l.value.navbar===!1?!1:!!(t.value.title||l.value.logo||l.value.repo||l.value.navbar)),E=b(()=>s.noSidebar?!1:e.value.sidebar!==!1&&h.value.length!==0&&!e.value.home),w=b(()=>s.noToc||e.value.home?!1:e.value.toc||l.value.toc!==!1&&e.value.toc!==!1),k={x:0,y:0},C=A=>{k.x=A.changedTouches[0].clientX,k.y=A.changedTouches[0].clientY},_=A=>{const R=A.changedTouches[0].clientX-k.x,O=A.changedTouches[0].clientY-k.y;Math.abs(R)>Math.abs(O)*1.5&&Math.abs(R)>40&&(R>0&&k.x<=80?r(!0):r(!1))},I=()=>window.pageYOffset||document.documentElement.scrollTop||document.body.scrollTop||0;let M=0;return Ms("scroll",u1(()=>{const A=I();A<=58||A<M?g.value=!1:M+200<A&&!c.value&&(g.value=!0),M=A},300,!0)),cs(o,A=>{A||r(!1)}),ys(()=>{const A=ac(document.body);cs(c,O=>{A.value=O});const R=n.afterEach(()=>{r(!1)});qn(()=>{A.value=!1,R()})}),()=>i(ga("GlobalEncrypt")?ia("GlobalEncrypt"):Vr,()=>i("div",{class:["theme-container",{"no-navbar":!y.value,"no-sidebar":!E.value&&!(a.sidebar||a.sidebarTop||a.sidebarBottom),"has-toc":w.value,"hide-navbar":g.value,"sidebar-collapsed":!o.value&&!p.value&&m.value,"sidebar-open":o.value&&c.value},s.containerClass,e.value.containerClass||""],onTouchStart:C,onTouchEnd:_},[y.value?i(F2,{onToggleSidebar:()=>r()},{startBefore:()=>{var A;return(A=a.navbarStartBefore)==null?void 0:A.call(a)},startAfter:()=>{var A;return(A=a.navbarStartAfter)==null?void 0:A.call(a)},centerBefore:()=>{var A;return(A=a.navbarCenterBefore)==null?void 0:A.call(a)},centerAfter:()=>{var A;return(A=a.navbarCenterAfter)==null?void 0:A.call(a)},endBefore:()=>{var A;return(A=a.navbarEndBefore)==null?void 0:A.call(a)},endAfter:()=>{var A;return(A=a.navbarEndAfter)==null?void 0:A.call(a)},screenTop:()=>{var A;return(A=a.navScreenTop)==null?void 0:A.call(a)},screenBottom:()=>{var A;return(A=a.navScreenBottom)==null?void 0:A.call(a)}}):null,i(Qa,{name:"fade"},()=>c.value?i("div",{class:"vp-sidebar-mask",onClick:()=>r(!1)}):null),i(Qa,{name:"fade"},()=>o.value?null:i("div",{class:"toggle-sidebar-wrapper",onClick:()=>d()},i("span",{class:["arrow",m.value?"end":"start"]}))),i(N2,{},{...a.sidebar?{default:()=>a.sidebar()}:{},top:()=>{var A;return(A=a.sidebarTop)==null?void 0:A.call(a)},bottom:()=>{var A;return(A=a.sidebarBottom)==null?void 0:A.call(a)}}),a.default(),i(w2)]))}}),ms=z({name:"DropTransition",props:{type:{type:String,default:"single"},delay:{type:Number,default:0},duration:{type:Number,default:.25},appear:Boolean},slots:Object,setup(s,{slots:a}){const n=e=>{e.style.transition=`transform ${s.duration}s ease-in-out ${s.delay}s, opacity ${s.duration}s ease-in-out ${s.delay}s`,e.style.transform="translateY(-20px)",e.style.opacity="0"},t=e=>{e.style.transform="translateY(0)",e.style.opacity="1"};return()=>i(s.type==="single"?Qa:Jd,{name:"drop",appear:s.appear,onAppear:n,onAfterAppear:t,onEnter:n,onAfterEnter:t,onBeforeLeave:n},()=>a.default())}});const Ll=({custom:s})=>i(Lr,{class:["theme-hope-content",{custom:s}]});Ll.displayName="MarkdownContent",Ll.props={custom:Boolean};var yo=Ll;const Nc=()=>i(us,{name:"author"},()=>i("path",{d:"M649.6 633.6c86.4-48 147.2-144 147.2-249.6 0-160-128-288-288-288s-288 128-288 288c0 108.8 57.6 201.6 147.2 249.6-121.6 48-214.4 153.6-240 288-3.2 9.6 0 19.2 6.4 25.6 3.2 9.6 12.8 12.8 22.4 12.8h704c9.6 0 19.2-3.2 25.6-12.8 6.4-6.4 9.6-16 6.4-25.6-25.6-134.4-121.6-240-243.2-288z"}));Nc.displayName="AuthorIcon";const jc=()=>i(us,{name:"calendar"},()=>i("path",{d:"M716.4 110.137c0-18.753-14.72-33.473-33.472-33.473-18.753 0-33.473 14.72-33.473 33.473v33.473h66.993v-33.473zm-334.87 0c0-18.753-14.72-33.473-33.473-33.473s-33.52 14.72-33.52 33.473v33.473h66.993v-33.473zm468.81 33.52H716.4v100.465c0 18.753-14.72 33.473-33.472 33.473a33.145 33.145 0 01-33.473-33.473V143.657H381.53v100.465c0 18.753-14.72 33.473-33.473 33.473a33.145 33.145 0 01-33.473-33.473V143.657H180.6A134.314 134.314 0 0046.66 277.595v535.756A134.314 134.314 0 00180.6 947.289h669.74a134.36 134.36 0 00133.94-133.938V277.595a134.314 134.314 0 00-133.94-133.938zm33.473 267.877H147.126a33.145 33.145 0 01-33.473-33.473c0-18.752 14.72-33.473 33.473-33.473h736.687c18.752 0 33.472 14.72 33.472 33.473a33.145 33.145 0 01-33.472 33.473z"}));jc.displayName="CalendarIcon";const qc=()=>i(us,{name:"category"},()=>i("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));qc.displayName="CategoryIcon";const Uc=()=>i(us,{name:"print"},()=>i("path",{d:"M819.2 364.8h-44.8V128c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v236.8h-44.8C145.067 364.8 96 413.867 96 473.6v192c0 59.733 49.067 108.8 108.8 108.8h44.8V896c0 17.067 14.933 32 32 32h460.8c17.067 0 32-14.933 32-32V774.4h44.8c59.733 0 108.8-49.067 108.8-108.8v-192c0-59.733-49.067-108.8-108.8-108.8zM313.6 160h396.8v204.8H313.6V160zm396.8 704H313.6V620.8h396.8V864zM864 665.6c0 25.6-19.2 44.8-44.8 44.8h-44.8V588.8c0-17.067-14.933-32-32-32H281.6c-17.067 0-32 14.933-32 32v121.6h-44.8c-25.6 0-44.8-19.2-44.8-44.8v-192c0-25.6 19.2-44.8 44.8-44.8h614.4c25.6 0 44.8 19.2 44.8 44.8v192z"}));Uc.displayName="PrintIcon";const Gc=()=>i(us,{name:"tag"},()=>i("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Gc.displayName="TagIcon";const Wc=()=>i(us,{name:"timer"},()=>i("path",{d:"M799.387 122.15c4.402-2.978 7.38-7.897 7.38-13.463v-1.165c0-8.933-7.38-16.312-16.312-16.312H256.33c-8.933 0-16.311 7.38-16.311 16.312v1.165c0 5.825 2.977 10.874 7.637 13.592 4.143 194.44 97.22 354.963 220.201 392.763-122.204 37.542-214.893 196.511-220.2 389.397-4.661 5.049-7.638 11.651-7.638 19.03v5.825h566.49v-5.825c0-7.379-2.849-13.981-7.509-18.9-5.049-193.016-97.867-351.985-220.2-389.527 123.24-37.67 216.446-198.453 220.588-392.892zM531.16 450.445v352.632c117.674 1.553 211.787 40.778 211.787 88.676H304.097c0-48.286 95.149-87.382 213.728-88.676V450.445c-93.077-3.107-167.901-81.297-167.901-177.093 0-8.803 6.99-15.793 15.793-15.793 8.803 0 15.794 6.99 15.794 15.793 0 80.261 63.69 145.635 142.01 145.635s142.011-65.374 142.011-145.635c0-8.803 6.99-15.793 15.794-15.793s15.793 6.99 15.793 15.793c0 95.019-73.789 172.82-165.96 177.093z"}));Wc.displayName="TimerIcon";const Kc=()=>i(us,{name:"word"},()=>[i("path",{d:"M518.217 432.64V73.143A73.143 73.143 0 01603.43 1.097a512 512 0 01419.474 419.474 73.143 73.143 0 01-72.046 85.212H591.36a73.143 73.143 0 01-73.143-73.143z"}),i("path",{d:"M493.714 566.857h340.297a73.143 73.143 0 0173.143 85.577A457.143 457.143 0 11371.566 117.76a73.143 73.143 0 0185.577 73.143v339.383a36.571 36.571 0 0036.571 36.571z"})]);Kc.displayName="WordIcon";const sn=()=>{const s=ls();return b(()=>s.value.metaLocales)};var j2=z({name:"AuthorInfo",inheritAttrs:!1,props:{author:{type:Array,required:!0},pure:Boolean},setup(s){const a=sn();return()=>s.author.length?i("span",{class:"page-author-info","aria-label":`${a.value.author}${s.pure?"":"🖊"}`,...s.pure?{}:{"data-balloon-pos":"down"}},[i(Nc),i("span",s.author.map(n=>n.url?i("a",{class:"page-author-item",href:n.url,target:"_blank",rel:"noopener noreferrer"},n.name):i("span",{class:"page-author-item"},n.name))),i("span",{property:"author",content:s.author.map(n=>n.name).join(", ")})]):null}}),q2=z({name:"CategoryInfo",inheritAttrs:!1,props:{category:{type:Array,required:!0},pure:Boolean},setup(s){const a=Da(),n=hs(),t=sn(),e=(l,o="")=>{o&&n.value.path!==o&&(l.preventDefault(),a.push(o))};return()=>s.category.length?i("span",{class:"page-category-info","aria-label":`${t.value.category}${s.pure?"":"🌈"}`,...s.pure?{}:{"data-balloon-pos":"down"}},[i(qc),s.category.map(({name:l,path:o})=>i("span",{class:["page-category-item",{[`category${Ie(l,9)}`]:!s.pure,clickable:o}],role:o?"navigation":"",onClick:p=>e(p,o)},l)),i("meta",{property:"articleSection",content:s.category.map(({name:l})=>l).join(",")})]):null}}),U2=z({name:"DateInfo",inheritAttrs:!1,props:{date:{type:Object,default:null},localizedDate:{type:String,default:""},pure:Boolean},setup(s){const a=xr(),n=sn();return()=>s.date?i("span",{class:"page-date-info","aria-label":`${n.value.date}${s.pure?"":"📅"}`,...s.pure?{}:{"data-balloon-pos":"down"}},[i(jc),i("span",i(Ae,()=>s.localizedDate||s.date.toLocaleDateString(a.value))),i("meta",{property:"datePublished",content:s.date.toISOString()||""})]):null}}),G2=z({name:"OriginalInfo",inheritAttrs:!1,props:{isOriginal:Boolean},setup(s){const a=sn();return()=>s.isOriginal?i("span",{class:"page-original-info"},a.value.origin):null}}),W2=z({name:"ReadingTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null},pure:Boolean},setup(s){const a=sn(),n=b(()=>{if(!s.readingTime)return null;const{minutes:t}=s.readingTime;return t<1?"PT1M":`PT${Math.round(t)}M`});return()=>{var t,e;return(t=s.readingTimeLocale)!=null&&t.time?i("span",{class:"page-reading-time-info","aria-label":`${a.value.readingTime}${s.pure?"":"⌛"}`,...s.pure?{}:{"data-balloon-pos":"down"}},[i(Wc),i("span",(e=s.readingTimeLocale)==null?void 0:e.time),i("meta",{property:"timeRequired",content:n.value})]):null}}}),K2=z({name:"TagInfo",inheritAttrs:!1,props:{tag:{type:Array,default:()=>[]},pure:Boolean},setup(s){const a=Da(),n=hs(),t=sn(),e=(l,o="")=>{o&&n.value.path!==o&&(l.preventDefault(),a.push(o))};return()=>s.tag.length?i("span",{class:"page-tag-info","aria-label":`${t.value.tag}${s.pure?"":"🏷"}`,...s.pure?{}:{"data-balloon-pos":"down"}},[i(Gc),s.tag.map(({name:l,path:o})=>i("span",{class:["page-tag-item",{[`tag${Ie(l,9)}`]:!s.pure,clickable:o}],role:o?"navigation":"",onClick:p=>e(p,o)},l)),i("meta",{property:"keywords",content:s.tag.map(({name:l})=>l).join(",")})]):null}}),X2=z({name:"ReadTimeInfo",inheritAttrs:!1,props:{readingTime:{type:Object,default:()=>null},readingTimeLocale:{type:Object,default:()=>null},pure:Boolean},setup(s){const a=sn();return()=>{var n,t,e;return(n=s.readingTimeLocale)!=null&&n.words?i("span",{class:"page-word-info","aria-label":`${a.value.words}${s.pure?"":"🔠"}`,...s.pure?{}:{"data-balloon-pos":"down"}},[i(Kc),i("span",(t=s.readingTimeLocale)==null?void 0:t.words),i("meta",{property:"wordCount",content:(e=s.readingTime)==null?void 0:e.words})]):null}}}),Xc=z({name:"PageInfo",components:{AuthorInfo:j2,CategoryInfo:q2,DateInfo:U2,OriginalInfo:G2,PageViewInfo:()=>null,ReadingTimeInfo:W2,TagInfo:K2,WordInfo:X2},props:{items:{type:[Array,Boolean],default:()=>["Author","Original","Date","PageView","ReadingTime","Category","Tag"]},info:{type:Object,required:!0}},setup(s){const a=vn();return()=>s.items?i("div",{class:"page-info"},s.items.map(n=>i(ia(`${n}Info`),{...s.info,pure:a.value}))):null}}),Y2=z({name:"PrintButton",setup(){const s=Ma(),a=ls();return()=>s.value.print===!1?null:i("button",{type:"button",class:"print-button",title:a.value.metaLocales.print,onClick:()=>{window.print()}},i(Uc))}});const Q2=({title:s,level:a,slug:n})=>i(Ls,{to:`#${n}`,class:["toc-link",`level${a}`]},()=>s),Tl=(s,a)=>{const n=Aa();return s.length&&a>0?i("ul",{class:"toc-list"},s.map(t=>{const e=Tl(t.children,a-1);return[i("li",{class:["toc-item",{active:n.hash===`#${t.slug}`}]},Q2(t)),e?i("li",e):null]})):null};var Yc=z({name:"TOC",props:{items:{type:Array,default:()=>[]},headerDepth:{type:Number,default:2}},slots:Object,setup(s,{slots:a}){const n=Aa(),t=hs(),e=sn(),l=Ts(),o=Q("-1.7rem"),p=r=>{var m;(m=l.value)==null||m.scrollTo({top:r,behavior:"smooth"})},c=()=>{if(l.value){const r=document.querySelector(".toc-item.active");r?o.value=`${r.getBoundingClientRect().top-l.value.getBoundingClientRect().top+l.value.scrollTop}px`:o.value="-1.7rem"}else o.value="-1.7rem"};return ys(()=>{cs(()=>n.hash,r=>{if(l.value){const m=document.querySelector(`#toc a.toc-link[href$="${r}"]`);if(!m)return;const{top:d,height:h}=l.value.getBoundingClientRect(),{top:g,height:y}=m.getBoundingClientRect();g<d?p(l.value.scrollTop+g-d):g+y>d+h&&p(l.value.scrollTop+g+y-d-h)}}),cs(()=>n.fullPath,c,{flush:"post",immediate:!0})}),()=>{var m,d;const r=s.items.length?Tl(s.items,s.headerDepth):t.value.headers?Tl(t.value.headers,s.headerDepth):null;return r?i("div",{class:"toc-place-holder"},[i("aside",{id:"toc"},[(m=a.before)==null?void 0:m.call(a),i("div",{class:"toc-header"},[e.value.toc,i(Y2)]),i("div",{class:"toc-wrapper",ref:l},[r,i("div",{class:"toc-marker",style:{top:o.value}})]),(d=a.after)==null?void 0:d.call(a)])]):null}}}),ko=z({name:"SkipLink",props:{content:{type:String,default:"main-content"}},setup(s){const a=hs(),n=ls(),t=Ts(),e=({target:l})=>{const o=document.querySelector(l.hash);if(o){const p=()=>{o.removeAttribute("tabindex"),o.removeEventListener("blur",p)};o.setAttribute("tabindex","-1"),o.addEventListener("blur",p),o.focus(),window.scrollTo(0,0)}};return ys(()=>{cs(()=>a.value.path,()=>t.value.focus())}),()=>[i("span",{ref:t,tabindex:"-1"}),i("a",{href:`#${s.content}`,class:"vp-skip-link sr-only",onClick:e},n.value.routeLocales.skipToContent)]}});let ll=null,Zn=null;const J2={wait:()=>ll,pending:()=>{ll=new Promise(s=>{Zn=s})},resolve:()=>{Zn==null||Zn(),ll=null,Zn=null}},Qc=()=>J2;var Jc=z({name:"FadeSlideY",slots:Object,setup(s,{slots:a}){const{resolve:n,pending:t}=Qc();return()=>i(Qa,{name:"fade-slide-y",mode:"out-in",onBeforeEnter:n,onBeforeLeave:t},()=>{var e;return(e=a.default)==null?void 0:e.call(a)})}});const Z2=(s,a)=>{const n=s.replace(a,"/").split("/"),t=[];let e=ao(a);return n.forEach((l,o)=>{o!==n.length-1?(e+=`${l}/`,t.push({link:e,name:l||"Home"})):l!==""&&(e+=l,t.push({link:e,name:l}))}),t},Zc=(s,{slots:a})=>{var d,h;const{bgImage:n,bgImageDark:t,bgImageStyle:e,color:l,description:o,image:p,imageDark:c,header:r,features:m=[]}=s;return i("div",{class:"vp-feature-wrapper"},[n?i("div",{class:["vp-feature-bg",{light:t}],style:[{"background-image":`url(${n})`},e]}):null,t?i("div",{class:"vp-feature-bg dark",style:[{"background-image":`url(${t})`},e]}):null,i("div",{class:"vp-feature",style:l?{color:l}:{}},[((d=a.image)==null?void 0:d.call(a,s))||[p?i("img",{class:["vp-feature-image",{light:c}],src:As(p),alt:""}):null,c?i("img",{class:"vp-feature-image dark",src:As(c),alt:""}):null],((h=a.info)==null?void 0:h.call(a,s))||[r?i("h2",{class:"vp-feature-header"},r):null,o?i("p",{class:"vp-feature-description",innerHTML:o}):null],m.length?i("div",{class:"vp-features"},m.map(({icon:g,title:y,details:E,link:w})=>{const k=[i("h3",{class:"vp-feature-title"},[i(js,{icon:g}),i("span",{innerHTML:y})]),i("p",{class:"vp-feature-details",innerHTML:E})];return w?Vn(w)?i("a",{class:"vp-feature-item link",href:w,"aria-label":y,target:"_blank"},k):i(Ls,{class:"vp-feature-item link",to:w,"aria-label":y},()=>k):i("div",{class:"vp-feature-item"},k)})):null])])};Zc.displayName="FeaturePanel";var Xp=Zc,sf=z({name:"HeroInfo",slots:Object,setup(s,{slots:a}){const n=ks(),t=Tt(),e=b(()=>n.value.heroFullScreen??!1),l=b(()=>{const{heroText:r,tagline:m}=n.value;return{text:r??t.value.title??"Hello",tagline:m??t.value.description??"",isFullScreen:e.value}}),o=b(()=>{const{heroText:r,heroImage:m,heroImageDark:d,heroAlt:h,heroImageStyle:g}=n.value;return{image:m?As(m):null,imageDark:d?As(d):null,heroStyle:g,alt:h||r||"",isFullScreen:e.value}}),p=b(()=>{const{bgImage:r,bgImageDark:m,bgImageStyle:d}=n.value;return{image:Ss(r)?As(r):null,imageDark:Ss(m)?As(m):null,bgStyle:d,isFullScreen:e.value}}),c=b(()=>n.value.actions??[]);return()=>{var r,m,d;return i("header",{class:["vp-hero-info-wrapper",{fullscreen:e.value}]},[((r=a.heroBg)==null?void 0:r.call(a,p.value))||[p.value.image?i("div",{class:["vp-hero-mask",{light:p.value.imageDark}],style:[{"background-image":`url(${p.value.image})`},p.value.bgStyle]}):null,p.value.imageDark?i("div",{class:"vp-hero-mask dark",style:[{"background-image":`url(${p.value.imageDark})`},p.value.bgStyle]}):null],i("div",{class:"vp-hero-info"},[((m=a.heroImage)==null?void 0:m.call(a,o.value))||i(ms,{appear:!0,type:"group"},()=>[o.value.image?i("img",{key:"light",class:["vp-hero-image",{light:o.value.imageDark}],style:o.value.heroStyle,src:o.value.image,alt:o.value.alt}):null,o.value.imageDark?i("img",{key:"dark",class:"vp-hero-image dark",style:o.value.heroStyle,src:o.value.imageDark,alt:o.value.alt}):null]),((d=a.heroInfo)==null?void 0:d.call(a,l.value))??i("div",{class:"vp-hero-infos"},[l.value.text?i(ms,{appear:!0,delay:.04},()=>i("h1",{id:"main-title"},l.value.text)):null,l.value.tagline?i(ms,{appear:!0,delay:.08},()=>i("p",{id:"main-description",innerHTML:l.value.tagline})):null,c.value.length?i(ms,{appear:!0,delay:.12},()=>i("p",{class:"vp-hero-actions"},c.value.map(h=>i(Ws,{class:["vp-hero-action",h.type||"default"],config:h,noExternalLinkIcon:!0},h.icon?{before:()=>i(js,{icon:h.icon})}:{})))):null])])])}}});const sm=(s,{slots:a})=>{var h,g,y;const{bgImage:n,bgImageDark:t,bgImageStyle:e,color:l,description:o,image:p,imageDark:c,header:r,highlights:m=[],type:d="un-order"}=s;return i("div",{class:"vp-highlight-wrapper",style:l?{color:l}:{}},[n?i("div",{class:["vp-highlight-bg",{light:t}],style:[{"background-image":`url(${n})`},e]}):null,t?i("div",{class:"vp-highlight-bg dark",style:[{"background-image":`url(${t})`},e]}):null,i("div",{class:"vp-highlight"},[((h=a.image)==null?void 0:h.call(a,s))||[p?i("img",{class:["vp-highlight-image",{light:c}],src:As(p),alt:""}):null,c?i("img",{class:"vp-highlight-image dark",src:As(c),alt:""}):null],((g=a.info)==null?void 0:g.call(a,s))||[i("div",{class:"vp-highlight-info-wrapper"},i("div",{class:"vp-highlight-info"},[r?i("h2",{class:"vp-highlight-header",innerHTML:r}):null,o?i("p",{class:"vp-highlight-description",innerHTML:o}):null,((y=a.highlights)==null?void 0:y.call(a,m))||i(d==="order"?"ol":d==="no-order"?"dl":"ul",{class:"vp-highlights"},m.map(({icon:E,title:w,details:k,link:C})=>{const _=[i(d==="no-order"?"dt":"h3",{class:"vp-highlight-title"},[E?i(js,{class:"vp-highlight-icon",icon:E}):null,i("span",{innerHTML:w})]),k?i(d==="no-order"?"dd":"p",{class:"vp-highlight-details",innerHTML:k}):null];return i(d==="no-order"?"div":"li",{class:["vp-highlight-item-wrapper",{link:C}]},C?Vn(C)?i("a",{class:"vp-highlight-item link",href:C,"aria-label":w,target:"_blank"},_):i(Ls,{class:"vp-highlight-item link",to:C,"aria-label":w},()=>_):i("div",{class:"vp-highlight-item"},_))}))]))]])])};sm.displayName="HighlightPanel";var af=sm,nf=z({name:"HomePage",slots:Object,setup(s,{slots:a}){const n=vn(),t=ks(),e=b(()=>{const{features:o}=t.value;return xl(o)?o:null}),l=b(()=>{const{highlights:o}=t.value;return xl(o)?o:null});return()=>{var o,p,c,r;return i("main",{id:"main-content",class:["vp-project-home ",{pure:n.value}],"aria-labelledby":t.value.heroText===null?"":"main-title"},[(o=a.top)==null?void 0:o.call(a),i(sf),((p=l.value)==null?void 0:p.map(m=>"features"in m?i(Xp,m):i(af,m)))||(e.value?i(ms,{appear:!0,delay:.24},()=>i(Xp,{features:e.value})):null),(c=a.center)==null?void 0:c.call(a),i(ms,{appear:!0,delay:.32},()=>i(yo)),(r=a.bottom)==null?void 0:r.call(a)])}}}),tf=z({name:"BreadCrumb",setup(){const s=hs(),a=Ra(),n=ks(),t=ls(),e=Ts([]),l=b(()=>(n.value.breadcrumb||n.value.breadcrumb!==!1&&t.value.breadcrumb!==!1)&&e.value.length>1),o=b(()=>n.value.breadcrumbIcon||n.value.breadcrumbIcon!==!1&&t.value.breadcrumbIcon!==!1),p=()=>{const c=Z2(s.value.path,a.value).map(({link:r,name:m})=>{const{path:d,meta:h}=Wn(r);return h?{title:h[fs.shortTitle]||h[fs.title]||m,icon:h[fs.icon],path:d}:null}).filter(r=>r!==null);c.length>1&&(e.value=c)};return ys(()=>{cs(()=>s.value.path,p,{immediate:!0})}),()=>i("nav",{class:["vp-breadcrumb",{disable:!l.value}]},l.value?i("ol",{vocab:"https://schema.org/",typeof:"BreadcrumbList"},e.value.map((c,r)=>i("li",{class:{"is-active":e.value.length-1===r},property:"itemListElement",typeof:"ListItem"},[i(Ls,{to:c.path,property:"item",typeof:"WebPage"},()=>[o.value?i(js,{icon:c.icon}):null,i("span",{property:"name"},c.title||"Unknown")]),i("meta",{property:"position",content:r+1})]))):[])}});const Yp=s=>s===!1||Gn(s)?s:Ss(s)?Sn(s,!0):null,Pl=(s,a,n)=>{const t=s.findIndex(e=>e.link===a);if(t!==-1){const e=s[t+n];return e!=null&&e.link?e:null}for(const e of s)if(e.children){const l=Pl(e.children,a,n);if(l)return l}return null};var ef=z({name:"PageNav",setup(){const s=ls(),a=ks(),n=fo(),t=hs(),e=Dt(),l=b(()=>{const p=Yp(a.value.prev);return p===!1?null:p||(s.value.prevLink===!1?null:Pl(n.value,t.value.path,-1))}),o=b(()=>{const p=Yp(a.value.next);return p===!1?null:p||(s.value.nextLink===!1?null:Pl(n.value,t.value.path,1))});return Ms("keydown",p=>{p.altKey&&(p.key==="ArrowRight"?o.value&&(e(o.value.link),p.preventDefault()):p.key==="ArrowLeft"&&l.value&&(e(l.value.link),p.preventDefault()))}),()=>l.value||o.value?i("nav",{class:"vp-page-nav"},[l.value?i(Ws,{class:"prev",config:l.value},()=>{var p,c;return[i("div",{class:"hint"},[i("span",{class:"arrow start"}),s.value.metaLocales.prev]),i("div",{class:"link"},[i(js,{icon:(p=l.value)==null?void 0:p.icon}),(c=l.value)==null?void 0:c.text])]}):null,o.value?i(Ws,{class:"next",config:o.value},()=>{var p,c;return[i("div",{class:"hint"},[s.value.metaLocales.next,i("span",{class:"arrow end"})]),i("div",{class:"link"},[(p=o.value)==null?void 0:p.text,i(js,{icon:(c=o.value)==null?void 0:c.icon})])]}):null]):null}});const lf={GitHub:":repo/edit/:branch/:path",GitLab:":repo/-/edit/:branch/:path",Gitee:":repo/edit/:branch/:path",Bitbucket:":repo/src/:branch/:path?mode=edit&spa=0&at=:branch&fileviewer=file-view-default"},of=({docsRepo:s,docsBranch:a,docsDir:n,filePathRelative:t,editLinkPattern:e})=>{if(!t)return null;const l=qr(s);let o;return e?o=e:l!==null&&(o=lf[l]),o?o.replace(/:repo/u,Za(s)?s:`https://github.com/${s}`).replace(/:branch/u,a).replace(/:path/u,dr(`${ao(n)}/${t}`)):null},pf=()=>{const s=ls(),a=hs(),n=ks();return b(()=>{const{repo:t,docsRepo:e=t,docsBranch:l="main",docsDir:o="",editLink:p,editLinkPattern:c=""}=s.value;if(!(n.value.editLink??p??!0)||!e)return null;const r=of({docsRepo:e,docsBranch:l,docsDir:o,editLinkPattern:c,filePathRelative:a.value.filePathRelative});return r?{text:s.value.metaLocales.editLink,link:r}:null})},rf=()=>{const s=Tt(),a=ls(),n=hs(),t=ks();return b(()=>{var e,l;return!(t.value.lastUpdated??a.value.lastUpdated??!0)||!((e=n.value.git)!=null&&e.updatedTime)?null:new Date((l=n.value.git)==null?void 0:l.updatedTime).toLocaleString(s.value.lang)})},cf=()=>{const s=ls(),a=hs(),n=ks();return b(()=>{var t;return n.value.contributors??s.value.contributors??!0?((t=a.value.git)==null?void 0:t.contributors)??null:null})};var mf=z({name:"PageTitle",setup(){const s=hs(),a=ks(),n=ls(),{info:t,items:e}=g2();return()=>i("div",{class:"vp-page-title"},[i("h1",[n.value.titleIcon===!1?null:i(js,{icon:a.value.icon}),s.value.title]),i(Xc,{info:t.value,...e.value===null?{}:{items:e.value}}),i("hr")])}});const am=()=>i(us,{name:"edit"},()=>[i("path",{d:"M430.818 653.65a60.46 60.46 0 0 1-50.96-93.281l71.69-114.012 7.773-10.365L816.038 80.138A60.46 60.46 0 0 1 859.225 62a60.46 60.46 0 0 1 43.186 18.138l43.186 43.186a60.46 60.46 0 0 1 0 86.373L588.879 565.55l-8.637 8.637-117.466 68.234a60.46 60.46 0 0 1-31.958 11.229z"}),i("path",{d:"M728.802 962H252.891A190.883 190.883 0 0 1 62.008 771.98V296.934a190.883 190.883 0 0 1 190.883-192.61h267.754a60.46 60.46 0 0 1 0 120.92H252.891a69.962 69.962 0 0 0-69.098 69.099V771.98a69.962 69.962 0 0 0 69.098 69.098h475.911A69.962 69.962 0 0 0 797.9 771.98V503.363a60.46 60.46 0 1 1 120.922 0V771.98A190.883 190.883 0 0 1 728.802 962z"})]);am.displayName="EditIcon";var uf=z({name:"PageMeta",setup(){const s=ls(),a=pf(),n=rf(),t=cf();return()=>{const{metaLocales:e}=s.value;return i("footer",{class:"page-meta"},[a.value?i("div",{class:"meta-item edit-link"},i(Ws,{class:"label",config:a.value},{before:()=>i(am)})):null,i("div",{class:"meta-item git-info"},[n.value?i("div",{class:"update-time"},[i("span",{class:"label"},`${e.lastUpdated}: `),i(Ae,()=>i("span",{class:"info"},n.value))]):null,t.value&&t.value.length?i("div",{class:"contributors"},[i("span",{class:"label"},`${e.contributors}: `),t.value.map(({email:l,name:o},p)=>[i("span",{class:"contributor",title:`email: ${l}`},o),p!==t.value.length-1?",":""])]):null])])}}}),df=z({name:"NormalPage",slots:Object,setup(s,{slots:a}){const n=ks(),{isDarkmode:t}=Mt(),e=ls(),l=b(()=>n.value.toc||n.value.toc!==!1&&e.value.toc!==!1);return()=>i("main",{id:"main-content",class:"vp-page"},i(ga("LocalEncrypt")?ia("LocalEncrypt"):Vr,()=>{var o,p,c,r;return[(o=a.top)==null?void 0:o.call(a),n.value.cover?i("div",{class:"page-cover"},i("img",{src:As(n.value.cover),alt:"","no-view":""})):null,i(tf),i(mf),l.value?i(Yc,{headerDepth:n.value.headerDepth??e.value.headerDepth??2},{before:()=>{var m;return(m=a.tocBefore)==null?void 0:m.call(a)},after:()=>{var m;return(m=a.tocAfter)==null?void 0:m.call(a)}}):null,(p=a.contentBefore)==null?void 0:p.call(a),i(yo),(c=a.contentAfter)==null?void 0:c.call(a),i(uf),i(ef),ga("CommentService")?i(ia("CommentService"),{darkmode:t.value}):null,(r=a.bottom)==null?void 0:r.call(a)]}))}}),hf=z({name:"Layout",slots:Object,setup(s,{slots:a}){const n=Ma(),t=ls(),e=hs(),l=ks(),{isMobile:o}=Rt(),p=b(()=>{var c,r;return((c=t.value.blog)==null?void 0:c.sidebarDisplay)||((r=n.value.blog)==null?void 0:r.sidebarDisplay)||"mobile"});return()=>[i(ko),i(vo,{},{default:()=>{var c;return((c=a.default)==null?void 0:c.call(a))||(l.value.home?i(nf):i(Jc,()=>i(df,{key:e.value.path},{top:()=>{var r;return(r=a.top)==null?void 0:r.call(a)},bottom:()=>{var r;return(r=a.bottom)==null?void 0:r.call(a)},contentBefore:()=>{var r;return(r=a.contentBefore)==null?void 0:r.call(a)},contentAfter:()=>{var r;return(r=a.contentAfter)==null?void 0:r.call(a)},tocBefore:()=>{var r;return(r=a.tocBefore)==null?void 0:r.call(a)},tocAfter:()=>{var r;return(r=a.tocAfter)==null?void 0:r.call(a)}})))},...p.value==="none"?{}:{navScreenBottom:()=>i(ia("BloggerInfo"))},...!o.value&&p.value==="always"?{sidebar:()=>i(ia("BloggerInfo"))}:{}})]}}),gf=z({name:"NotFoundHint",setup(){const s=ls(),a=()=>{const n=s.value.routeLocales.notFoundMsg;return n[Math.floor(Math.random()*n.length)]};return()=>i("div",{class:"not-found-hint"},[i("p",{class:"error-code"},"404"),i("h1",{class:"error-title"},s.value.routeLocales.notFoundTitle),i("p",{class:"error-hint"},a())])}}),ff=z({name:"NotFound",slots:Object,setup(s,{slots:a}){const n=Da(),t=Ra(),e=ls();return()=>[i(ko),i(vo,{noSidebar:!0},()=>{var l;return i("main",{id:"main-content",class:"vp-page not-found"},((l=a.default)==null?void 0:l.call(a))||[i(gf),i("div",{class:"actions"},[i("button",{type:"button",class:"action-button",onClick:()=>{window.history.go(-1)}},e.value.routeLocales.back),i("button",{type:"button",class:"action-button",onClick:()=>{n.push(e.value.home??t.value)}},e.value.routeLocales.home)])])})]}});const vf={},yf={category:{"/":{path:"/category/",map:{RPC:{path:"/category/rpc/",indexes:[0]},嵌入式:{path:"/category/嵌入式/",indexes:[1]},软件工程:{path:"/category/软件工程/",indexes:[2,3,4]},语言学习:{path:"/category/语言学习/",indexes:[5]},乐理:{path:"/category/乐理/",indexes:[6,7]},随笔:{path:"/category/随笔/",indexes:[8,9,10,11,12]},编译原理:{path:"/category/编译原理/",indexes:[13,9]},读后感:{path:"/category/读后感/",indexes:[8]},计算机图形:{path:"/category/计算机图形/",indexes:[14]},CV:{path:"/category/cv/",indexes:[15]},机器学习:{path:"/category/机器学习/",indexes:[16,17,18,19,20]},NLP:{path:"/category/nlp/",indexes:[21]},CSAPP学习笔记:{path:"/category/csapp学习笔记/",indexes:[22,23,24,25,26,27,28]},数据库原理:{path:"/category/数据库原理/",indexes:[29,30,31]},database:{path:"/category/database/",indexes:[32,33,34,35,36,37,38]},计算机组成原理:{path:"/category/计算机组成原理/",indexes:[39]},"computer organization":{path:"/category/computer-organization/",indexes:[40,41]},compiler:{path:"/category/compiler/",indexes:[42,43,44,45,46,47,48,49,50,51,52,53,54]},LeetCode练习:{path:"/category/leetcode练习/",indexes:[55]},形式语言与自动机:{path:"/category/形式语言与自动机/",indexes:[56,57,58,59,60]},算法:{path:"/category/算法/",indexes:[61,62]},数据结构:{path:"/category/数据结构/",indexes:[62]},设计模式:{path:"/category/设计模式/",indexes:[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86]},课程复习:{path:"/category/课程复习/",indexes:[87,88]},数学基础:{path:"/category/数学基础/",indexes:[89]},信号与系统:{path:"/category/信号与系统/",indexes:[90,91]},CFT题目随笔:{path:"/category/cft题目随笔/",indexes:[92,93]},反思:{path:"/category/反思/",indexes:[94,95,96,97,98,99]},笔记:{path:"/category/笔记/",indexes:[95,97]},翻译:{path:"/category/翻译/",indexes:[95,97]},练习:{path:"/category/练习/",indexes:[100,101,102,103,104]},计算机网络:{path:"/category/计算机网络/",indexes:[100,101,102,103,104]},OS:{path:"/category/os/",indexes:[105,106,107,108,109,110,111,112]},操作系统:{path:"/category/操作系统/",indexes:[113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133]},"Three-Easy-Pieces":{path:"/category/three-easy-pieces/",indexes:[115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133]},"C++学习记录":{path:"/category/c++学习记录/",indexes:[134,135,136,137,138,139,140,141,142,143,144,145]},"C#学习记录":{path:"/category/c#学习记录/",indexes:[146,147,148,149]},golang:{path:"/category/golang/",indexes:[150,151]},rust:{path:"/category/rust/",indexes:[152]},OI算法和数据结构:{path:"/category/oi算法和数据结构/",indexes:[153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169]},OI练习:{path:"/category/oi练习/",indexes:[170,171,172,173,174,175,176]}}}},tag:{"/":{path:"/tag/",map:{RPC:{path:"/tag/rpc/",indexes:[0]},IDL:{path:"/tag/idl/",indexes:[0]},thrift:{path:"/tag/thrift/",indexes:[0]},硬件:{path:"/tag/硬件/",indexes:[1]},嵌入式:{path:"/tag/嵌入式/",indexes:[1]},verilog:{path:"/tag/verilog/",indexes:[1]},需求:{path:"/tag/需求/",indexes:[3,4]},项目管理:{path:"/tag/项目管理/",indexes:[3,4]},软件工程:{path:"/tag/软件工程/",indexes:[3,4]},SE:{path:"/tag/se/",indexes:[2]},note:{path:"/tag/note/",indexes:[2]},英语:{path:"/tag/英语/",indexes:[5]},语法:{path:"/tag/语法/",indexes:[5,55,147,149]},乐理:{path:"/tag/乐理/",indexes:[6,7]},游戏编程:{path:"/tag/游戏编程/",indexes:[10]},unity:{path:"/tag/unity/",indexes:[10]},地图生成:{path:"/tag/地图生成/",indexes:[10]},Linux:{path:"/tag/linux/",indexes:[11]},ubuntu:{path:"/tag/ubuntu/",indexes:[11]},SCIM:{path:"/tag/scim/",indexes:[11]},输入法:{path:"/tag/输入法/",indexes:[11]},数据流分析:{path:"/tag/数据流分析/",indexes:[9]},compiler:{path:"/tag/compiler/",indexes:[13,9,42,43,44,45,46,47,48,49,50,51,52,53,54]},代码优化:{path:"/tag/代码优化/",indexes:[9,42]},编码规范:{path:"/tag/编码规范/",indexes:[8]},代码能力:{path:"/tag/代码能力/",indexes:[8]},随笔:{path:"/tag/随笔/",indexes:[12]},感想:{path:"/tag/感想/",indexes:[12]},动画:{path:"/tag/动画/",indexes:[12]},计算机图形:{path:"/tag/计算机图形/",indexes:[14]},渲染:{path:"/tag/渲染/",indexes:[14]},CV:{path:"/tag/cv/",indexes:[15]},计算机视觉:{path:"/tag/计算机视觉/",indexes:[15]},机器学习:{path:"/tag/机器学习/",indexes:[21,16]},EM算法:{path:"/tag/em算法/",indexes:[16]},math:{path:"/tag/math/",indexes:[17,89]},HMM:{path:"/tag/hmm/",indexes:[17]},"machine learning":{path:"/tag/machine-learning/",indexes:[18,19]},SVM:{path:"/tag/svm/",indexes:[18]},"mechine learning":{path:"/tag/mechine-learning/",indexes:[20]},"decision tree":{path:"/tag/decision-tree/",indexes:[20]},algorithm:{path:"/tag/algorithm/",indexes:[20]},perceptron:{path:"/tag/perceptron/",indexes:[19]},nlp:{path:"/tag/nlp/",indexes:[21]},自然语言处理:{path:"/tag/自然语言处理/",indexes:[21]},二进制:{path:"/tag/二进制/",indexes:[22,23,28]},编码:{path:"/tag/编码/",indexes:[22,23,28]},计算机系统:{path:"/tag/计算机系统/",indexes:[22,23,24,25,26,27,28,122,123,124,125,126,127,128,129,130,131,132,133]},汇编:{path:"/tag/汇编/",indexes:[23,25]},cpu原理:{path:"/tag/cpu原理/",indexes:[24]},优化程序性能:{path:"/tag/优化程序性能/",indexes:[25]},编译器优化:{path:"/tag/编译器优化/",indexes:[25]},"operating-system":{path:"/tag/operating-system/",indexes:[113,109,110,41,114,115,116,117,118,119,120,121,26,27,122,123,124,125,126,127,128,129,130,131,132,133]},链接:{path:"/tag/链接/",indexes:[26]},异常控制流:{path:"/tag/异常控制流/",indexes:[27]},数据库:{path:"/tag/数据库/",indexes:[29,30,31]},mysql:{path:"/tag/mysql/",indexes:[29,30,31]},database:{path:"/tag/database/",indexes:[32,33,34,35,36,37,38]},SQL:{path:"/tag/sql/",indexes:[32,33,38]},"ER-model":{path:"/tag/er-model/",indexes:[37]},"ER-diagram":{path:"/tag/er-diagram/",indexes:[37]},schema:{path:"/tag/schema/",indexes:[36]},storage:{path:"/tag/storage/",indexes:[35]},index:{path:"/tag/index/",indexes:[34]},计算机组成原理:{path:"/tag/计算机组成原理/",indexes:[39]},考研:{path:"/tag/考研/",indexes:[39]},OS:{path:"/tag/os/",indexes:[105,106,107,108,112,41,114]},缓存:{path:"/tag/缓存/",indexes:[41]},计组原理:{path:"/tag/计组原理/",indexes:[41]},computer:{path:"/tag/computer/",indexes:[40]},organization:{path:"/tag/organization/",indexes:[40]},machine:{path:"/tag/machine/",indexes:[40]},code:{path:"/tag/code/",indexes:[40]},词法分析:{path:"/tag/词法分析/",indexes:[43,44,45,46,47,48,49,50,51,52,54]},语法分析:{path:"/tag/语法分析/",indexes:[13,43,44,45,46,47,48,49,50,51,52,54]},语义分析:{path:"/tag/语义分析/",indexes:[13,43,44,45,46,47,48,49,50,51,52,54]},中间代码生成:{path:"/tag/中间代码生成/",indexes:[43,44,45,46,47,48,49,50,51,52,54]},静态分析:{path:"/tag/静态分析/",indexes:[42]},特性:{path:"/tag/特性/",indexes:[55,147,149]},"c#":{path:"/tag/c#/",indexes:[55,146,147,148,149]},Leetcode:{path:"/tag/leetcode/",indexes:[55]},形式语言:{path:"/tag/形式语言/",indexes:[56,57,58,59,60]},自动机:{path:"/tag/自动机/",indexes:[56,57,58,59,60]},语言:{path:"/tag/语言/",indexes:[56,57,58,59,60]},离散数学:{path:"/tag/离散数学/",indexes:[56,57,58,59,60]},计算机理论:{path:"/tag/计算机理论/",indexes:[56,57,58,59,60]},数据结构:{path:"/tag/数据结构/",indexes:[163,167,62]},树:{path:"/tag/树/",indexes:[62]},平衡树:{path:"/tag/平衡树/",indexes:[153,62]},算法:{path:"/tag/算法/",indexes:[61]},分治:{path:"/tag/分治/",indexes:[61]},主定理:{path:"/tag/主定理/",indexes:[61]},"design-pattern":{path:"/tag/design-pattern/",indexes:[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86]},面向对象:{path:"/tag/面向对象/",indexes:[63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,134,137,142]},数学:{path:"/tag/数学/",indexes:[87,88,172]},概率论:{path:"/tag/概率论/",indexes:[87,88]},convolution:{path:"/tag/convolution/",indexes:[89]},signal:{path:"/tag/signal/",indexes:[90,91]},system:{path:"/tag/system/",indexes:[90,91]},"special function":{path:"/tag/special-function/",indexes:[91]},"fourier transform":{path:"/tag/fourier-transform/",indexes:[90]},CTF:{path:"/tag/ctf/",indexes:[92,93]},linux:{path:"/tag/linux/",indexes:[93,121]},upload:{path:"/tag/upload/",indexes:[92]},文件上传攻击:{path:"/tag/文件上传攻击/",indexes:[92]},"Computer-Network":{path:"/tag/computer-network/",indexes:[100,101,102,94,95,96,97,98,103,104]},C计算机网络:{path:"/tag/c计算机网络/",indexes:[99]},wireshark:{path:"/tag/wireshark/",indexes:[100,101,102,103,104]},HTTP:{path:"/tag/http/",indexes:[104]},DNS:{path:"/tag/dns/",indexes:[100,102]},TCP:{path:"/tag/tcp/",indexes:[101]},process:{path:"/tag/process/",indexes:[112]},thread:{path:"/tag/thread/",indexes:[112]},"Operating system":{path:"/tag/operating-system/",indexes:[111]},"CPU Scheduling":{path:"/tag/cpu-scheduling/",indexes:[111]},deadlock:{path:"/tag/deadlock/",indexes:[107,108]},synchronization:{path:"/tag/synchronization/",indexes:[107,108]},"memory-management":{path:"/tag/memory-management/",indexes:[106]},"storage-management":{path:"/tag/storage-management/",indexes:[105]},内存空间:{path:"/tag/内存空间/",indexes:[122,128]},内存虚拟化:{path:"/tag/内存虚拟化/",indexes:[122]},内存地址:{path:"/tag/内存地址/",indexes:[122]},cpu:{path:"/tag/cpu/",indexes:[123]},进程调度:{path:"/tag/进程调度/",indexes:[123]},多级反馈队列:{path:"/tag/多级反馈队列/",indexes:[124]},调度算法:{path:"/tag/调度算法/",indexes:[124]},内存管理:{path:"/tag/内存管理/",indexes:[125,127]},段式内存管理:{path:"/tag/段式内存管理/",indexes:[125]},段式内存:{path:"/tag/段式内存/",indexes:[125]},直接运行程序:{path:"/tag/直接运行程序/",indexes:[126]},进程:{path:"/tag/进程/",indexes:[126,130,131]},内存:{path:"/tag/内存/",indexes:[126]},空闲内存:{path:"/tag/空闲内存/",indexes:[127]},空闲链表:{path:"/tag/空闲链表/",indexes:[127]},碎片:{path:"/tag/碎片/",indexes:[127]},内存分配:{path:"/tag/内存分配/",indexes:[127]},地址翻译:{path:"/tag/地址翻译/",indexes:[128]},分页:{path:"/tag/分页/",indexes:[129]},API:{path:"/tag/api/",indexes:[130]},UNIX:{path:"/tag/unix/",indexes:[130]},Virtualization:{path:"/tag/virtualization/",indexes:[131]},上下文切换:{path:"/tag/上下文切换/",indexes:[131]},分比例调度:{path:"/tag/分比例调度/",indexes:[132]},彩票调度:{path:"/tag/彩票调度/",indexes:[132]},"Stride Scheduling":{path:"/tag/stride-scheduling/",indexes:[132]},"Three-Easy-Pieces":{path:"/tag/three-easy-pieces/",indexes:[121]},"VAX/VMS":{path:"/tag/vaxvms/",indexes:[121]},concurrency:{path:"/tag/concurrency/",indexes:[113,115,117,118,119,120]},"data-structure":{path:"/tag/data-structure/",indexes:[113]},"file-system":{path:"/tag/file-system/",indexes:[116]},"C++":{path:"/tag/c++/",indexes:[134,135,136,137,138,139,140,141,142,143,144,145]},动态内存:{path:"/tag/动态内存/",indexes:[135]},智能指针:{path:"/tag/智能指针/",indexes:[135]},浅拷贝:{path:"/tag/浅拷贝/",indexes:[135]},深拷贝:{path:"/tag/深拷贝/",indexes:[135]},文件操作:{path:"/tag/文件操作/",indexes:[136]},IO:{path:"/tag/io/",indexes:[136]},文件:{path:"/tag/文件/",indexes:[136]},Lambda表达式:{path:"/tag/lambda表达式/",indexes:[137]},"C++学习记录":{path:"/tag/c++学习记录/",indexes:[138]},容器:{path:"/tag/容器/",indexes:[140]},STL:{path:"/tag/stl/",indexes:[140]},顺序容器:{path:"/tag/顺序容器/",indexes:[140]},关联容器:{path:"/tag/关联容器/",indexes:[140]},无序容器:{path:"/tag/无序容器/",indexes:[140]},OI:{path:"/tag/oi/",indexes:[141]},继承:{path:"/tag/继承/",indexes:[142]},预处理指令:{path:"/tag/预处理指令/",indexes:[144]},预处理宏:{path:"/tag/预处理宏/",indexes:[144]},模板:{path:"/tag/模板/",indexes:[145,159]},编译:{path:"/tag/编译/",indexes:[145]},分布式编译:{path:"/tag/分布式编译/",indexes:[145]},数组:{path:"/tag/数组/",indexes:[146]},golang:{path:"/tag/golang/",indexes:[150,151]},编程语言:{path:"/tag/编程语言/",indexes:[150,151]},rust:{path:"/tag/rust/",indexes:[152]},language:{path:"/tag/language/",indexes:[152]},basic:{path:"/tag/basic/",indexes:[152]},二叉查找树:{path:"/tag/二叉查找树/",indexes:[153]},割点:{path:"/tag/割点/",indexes:[154]},Tarjan:{path:"/tag/tarjan/",indexes:[154,160]},图论:{path:"/tag/图论/",indexes:[154,157,169]},二分:{path:"/tag/二分/",indexes:[155,156]},二分图:{path:"/tag/二分图/",indexes:[157]},网络流:{path:"/tag/网络流/",indexes:[157,169]},博弈论:{path:"/tag/博弈论/",indexes:[158]},nim博弈:{path:"/tag/nim博弈/",indexes:[158]},巴什博弈:{path:"/tag/巴什博弈/",indexes:[158]},SG函数:{path:"/tag/sg函数/",indexes:[158]},二叉堆:{path:"/tag/二叉堆/",indexes:[159,176]},LCA:{path:"/tag/lca/",indexes:[160]},树上倍增:{path:"/tag/树上倍增/",indexes:[160]},并查集:{path:"/tag/并查集/",indexes:[161]},集合:{path:"/tag/集合/",indexes:[161]},ST表:{path:"/tag/st表/",indexes:[162]},区间最大值:{path:"/tag/区间最大值/",indexes:[162]},线段树:{path:"/tag/线段树/",indexes:[163]},区间维护:{path:"/tag/区间维护/",indexes:[163,165,166]},最小生成树:{path:"/tag/最小生成树/",indexes:[164]},Kruskal:{path:"/tag/kruskal/",indexes:[164]},Prim:{path:"/tag/prim/",indexes:[164]},树形数组:{path:"/tag/树形数组/",indexes:[165]},区间查询:{path:"/tag/区间查询/",indexes:[165]},前缀和:{path:"/tag/前缀和/",indexes:[165]},差分:{path:"/tag/差分/",indexes:[165,174,175]},树链剖分:{path:"/tag/树链剖分/",indexes:[166]},教学资料:{path:"/tag/教学资料/",indexes:[167]},最短路:{path:"/tag/最短路/",indexes:[168]},dijkstra:{path:"/tag/dijkstra/",indexes:[168]},"Bellman-ford":{path:"/tag/bellman-ford/",indexes:[168]},SPFA:{path:"/tag/spfa/",indexes:[168]},最大流:{path:"/tag/最大流/",indexes:[169]},最大字串和:{path:"/tag/最大字串和/",indexes:[170]},DP:{path:"/tag/dp/",indexes:[170]},矩阵:{path:"/tag/矩阵/",indexes:[171]},不等式:{path:"/tag/不等式/",indexes:[172]},优先队列:{path:"/tag/优先队列/",indexes:[173]},贪心:{path:"/tag/贪心/",indexes:[173]},线性:{path:"/tag/线性/",indexes:[174,175]}}}}},nm=["/posts/IDL-practice1.html","/posts/verilog.html","/posts/SE/SE-note.html","/posts/SE/SE-design.html","/posts/SE/SE-req.html","/posts/eng/GrammarClub.html","/posts/music/2022-1-8.html","/posts/music/guitae-1.html","/posts/essay/afterReadingCleanCode.html","/posts/essay/Data-Flow-Conclusion.html","/posts/essay/2022-1-19.html","/posts/essay/2022-1-8.html","/posts/essay/Anime.html","/posts/CS/compiler/TypeCheck-20230815.html","/posts/openGL/2022-9-2.html","/posts/AI/CV/CV_coin.html","/posts/AI/ML/EM.html","/posts/AI/ML/HMM.html","/posts/AI/ML/SVM.html","/posts/AI/ML/perceptron.html","/posts/AI/ML/decision_tree.html","/posts/AI/NLP/nplReading.html","/posts/CS/CSAPP-notes/Chapter2.html","/posts/CS/CSAPP-notes/Chapter3.html","/posts/CS/CSAPP-notes/Chapter4.html","/posts/CS/CSAPP-notes/Chapter5.html","/posts/CS/CSAPP-notes/Chapter6.html","/posts/CS/CSAPP-notes/Chapter8.html","/posts/CS/CSAPP-notes/Practice-1.html","/posts/CS/DB/database-3(CH34).html","/posts/CS/DB/database-2.html","/posts/CS/DB/database-1.html","/posts/CS/DB/database-10(CH16).html","/posts/CS/DB/database-9(CH15).html","/posts/CS/DB/database-8(CH14).html","/posts/CS/DB/database-7(CH13).html","/posts/CS/DB/database-6.html","/posts/CS/DB/database-5.html","/posts/CS/DB/database-4.html","/posts/CS/PC_oranization/CH_1.html","/posts/CS/PC_oranization/encode_calculate.html","/posts/CS/PC_oranization/MESI.html","/posts/CS/compiler/staticProgramAnalysis.html","/posts/CS/compiler/CH9-MechineDependentOptimism.html","/posts/CS/compiler/CH8-CodeGeneration.html","/posts/CS/compiler/CH7-Environment.html","/posts/CS/compiler/CH6-IR-Generation.html","/posts/CS/compiler/CH5-SDD.html","/posts/CS/compiler/CH4-yacc-and-lex.html","/posts/CS/compiler/CH4-Bottom-Up-Parse.html","/posts/CS/compiler/CH4-Top-Down-Parse.html","/posts/CS/compiler/CH4-note.html","/posts/CS/compiler/CH3-note.html","/posts/CS/compiler/CH1-note.html","/posts/CS/compiler/CH2-note.html","/posts/algorithm/Leetcode/2.html","/posts/algorithm/automata-theory/CH6-CFG-reduction.html","/posts/algorithm/automata-theory/CH45-RL-MyhillNerode.html","/posts/algorithm/automata-theory/CH3-DFA.html","/posts/algorithm/automata-theory/CH2-grammar.html","/posts/algorithm/automata-theory/CH1-language.html","/posts/algorithm/discrete-mathematic/master-theorem.html","/posts/algorithm/data-struct/RBTree.html","/posts/SE/design-pattern/CoR.html","/posts/SE/design-pattern/Facade.html","/posts/SE/design-pattern/State.html","/posts/SE/design-pattern/abstract-factory.html","/posts/SE/design-pattern/adapter.html","/posts/SE/design-pattern/bridge.html","/posts/SE/design-pattern/builder.html","/posts/SE/design-pattern/command.html","/posts/SE/design-pattern/composite.html","/posts/SE/design-pattern/decorator.html","/posts/SE/design-pattern/factoryMethod.html","/posts/SE/design-pattern/flyweight.html","/posts/SE/design-pattern/iterator.html","/posts/SE/design-pattern/learnFromJAVA.html","/posts/SE/design-pattern/mediator.html","/posts/SE/design-pattern/memento.html","/posts/SE/design-pattern/observer.html","/posts/SE/design-pattern/principle.html","/posts/SE/design-pattern/prototype.html","/posts/SE/design-pattern/proxy.html","/posts/SE/design-pattern/singleton.html","/posts/SE/design-pattern/strategy.html","/posts/SE/design-pattern/template.html","/posts/SE/design-pattern/visitor.html","/posts/math/probability-theory/importance-of-probability-distibution.html","/posts/math/probability-theory/probability-theory.html","/posts/math/signal/convolution.html","/posts/math/signal/signal_2.html","/posts/math/signal/signal.html","/posts/network/ctf-note/upload-attack.html","/posts/network/ctf-note/linux-usage.html","/posts/network/self-studying-notes/2022-10-25.html","/posts/network/self-studying-notes/2022-10-30.html","/posts/network/self-studying-notes/2022-10-9.html","/posts/network/self-studying-notes/2022-11-5.html","/posts/network/self-studying-notes/2023-4-21.html","/posts/network/self-studying-notes/notes.html","/posts/network/works-projects/wireShark-5-DHCP.html","/posts/network/works-projects/wireShark-4-TCP.html","/posts/network/works-projects/wireShark-3.html","/posts/network/works-projects/wireShark-1-inro.html","/posts/network/works-projects/wireShark-2.html","/posts/operating-system/osc/OSC_7.html","/posts/operating-system/osc/OSC_6.html","/posts/operating-system/osc/OSC_4.html","/posts/operating-system/osc/OSC_5.html","/posts/operating-system/oslab/6.828-2018-lab1.html","/posts/operating-system/oslab/6.828-2018-lab2.html","/posts/operating-system/osc/OSC_3.html","/posts/operating-system/osc/OSC_2.html","/posts/operating-system/ostep/CH2-Concurrency-datastruct.html","/posts/operating-system/ostep/OSC_1.html","/posts/operating-system/ostep/CH3-fileSystem.html","/posts/operating-system/ostep/CH3-linuxFileCommand.html","/posts/operating-system/ostep/CH2-Condition-Varible.html","/posts/operating-system/ostep/CH2-Samephore.html","/posts/operating-system/ostep/CH2-some-error.html","/posts/operating-system/ostep/CH2-Concurrency.html","/posts/operating-system/ostep/CH1-realVM.html","/posts/operating-system/ostep/CH1-2-Memoryspace.html","/posts/operating-system/ostep/CH1-CPUSchedualing.html","/posts/operating-system/ostep/CH1-MLFQ.html","/posts/operating-system/ostep/CH1-Segmentation.html","/posts/operating-system/ostep/CH1-directExecution.html","/posts/operating-system/ostep/CH1-free-memory-management.html","/posts/operating-system/ostep/CH1-memoryTransflate.html","/posts/operating-system/ostep/CH1-paging.html","/posts/operating-system/ostep/CH1-processAPI.html","/posts/operating-system/ostep/CH1-processes.html","/posts/operating-system/ostep/CH1-proportionalShare.html","/posts/operating-system/ostep/leading-chapter.html","/posts/program-language/CPP-notes/CPPofCPP.html","/posts/program-language/CPP-notes/DynamicMemery.html","/posts/program-language/CPP-notes/IOfile.html","/posts/program-language/CPP-notes/Lambda.html","/posts/program-language/CPP-notes/OPPofCPP.html","/posts/program-language/CPP-notes/SomeOfCPP.html","/posts/program-language/CPP-notes/SomeOfContainer.html","/posts/program-language/CPP-notes/SomeOfoi.html","/posts/program-language/CPP-notes/heritedOfCpp.html","/posts/program-language/CPP-notes/overloadAssignment.html","/posts/program-language/CPP-notes/preCompleteCMD.html","/posts/program-language/CPP-notes/template.html","/posts/program-language/Csharp/Array.html","/posts/program-language/Csharp/NullableTypeModifier.html","/posts/program-language/Csharp/SomeofCsharp.html","/posts/program-language/Csharp/TwoKingofConversion.html","/posts/program-language/golang-basic/projectManage.html","/posts/program-language/golang-basic/basic-1.html","/posts/program-language/rust-basic/rust_basic_231027.html","/posts/algorithm/oi/learning-note/BST.html","/posts/algorithm/oi/learning-note/CutPointAndEdge.html","/posts/algorithm/oi/learning-note/Dichotomy-OR.html","/posts/algorithm/oi/learning-note/Dichotomy.html","/posts/algorithm/oi/learning-note/DichotomyGraph.html","/posts/algorithm/oi/learning-note/GameTheory.html","/posts/algorithm/oi/learning-note/HandWrittenHeap.html","/posts/algorithm/oi/learning-note/LCA.html","/posts/algorithm/oi/learning-note/MSSet.html","/posts/algorithm/oi/learning-note/ST-about.html","/posts/algorithm/oi/learning-note/Segment-Tree.html","/posts/algorithm/oi/learning-note/SmallestSpanTree.html","/posts/algorithm/oi/learning-note/Tree-Array.html","/posts/algorithm/oi/learning-note/TreeToList.html","/posts/algorithm/oi/learning-note/dataStruct-S.html","/posts/algorithm/oi/learning-note/distant.html","/posts/algorithm/oi/learning-note/network-flows.html","/posts/algorithm/oi/quiz/1003-hdu.html","/posts/algorithm/oi/quiz/1005-hdu.html","/posts/algorithm/oi/quiz/1006-hdu.html","/posts/algorithm/oi/quiz/ccpc2016-B.html","/posts/algorithm/oi/quiz/csp20210902.html","/posts/algorithm/oi/quiz/csp20210903.html","/posts/algorithm/oi/quiz/luogu-p2085.html","/intro.html","/layouts/vuepress-plugin-obsidian-main/","/logical-and-proof/predicate.html"],kf=Ts(yf),Qp=hn(kf),tm=s=>{const a=hs(),n=ks(),t=Ra();return b(()=>{var p;const e=s??((p=n.value.blog)==null?void 0:p.key)??"";if(!e)return console.warn("useBlogCategory: key not found"),{path:"/",map:{}};if(!Qp.value[e])throw new Error(`useBlogCategory: key ${e} is invalid`);const l=Qp.value[e][t.value],o={path:l.path,map:{}};for(const c in l.map){const r=l.map[c];o.map[c]={path:r.path,items:[]};for(const m of r.indexes){const{path:d,meta:h}=Wn(nm[m]);o.map[c].items.push({path:d,info:h})}a.value.path===r.path&&(o.currentItems=o.map[c].items)}return o})},_f={article:{"/":{path:"/article/",indexes:[177,178,113,15,21,40,39,105,106,107,108,32,33,109,110,34,35,36,37,2,152,38,111,112,3,29,30,4,31,41,114,1,13,0,100,150,8,151,9,42,43,44,45,46,115,116,117,118,119,47,48,49,50,51,52,101,53,54,56,92,93,57,16,17,102,18,58,120,121,19,90,59,89,91,20,5,6,7,10,11,12,14,22,23,24,25,26,27,28,55,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,94,95,96,97,98,99,103,104,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,62,179]}},star:{"/":{path:"/star/",indexes:[]}},timeline:{"/":{path:"/timeline/",indexes:[178,177,113,15,21,40,39,105,106,107,108,32,33,109,110,34,35,36,37,2,152,38,111,112,3,29,30,4,31,41,114,1,13,0,100,150,8,151,9,42,43,44,45,46,115,116,117,118,119,47,48,49,50,51,52,101,53,54,56,92,93,57,16,17,102,18,58,120,121,19,90,59,89,91,20,5,6,7,10,11,12,14,22,23,24,25,26,27,28,55,60,61,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,94,95,96,97,98,99,103,104,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,62]}}},bf=Ts(_f),Jp=hn(bf),Pe=s=>{const a=ks(),n=Ra();return b(()=>{var o;const t=s??((o=a.value.blog)==null?void 0:o.key)??"";if(!t)return console.warn("useBlogType: key not found"),{path:"/",items:[]};if(!Jp.value[t])throw new Error(`useBlogType: key ${s} is invalid`);const e=Jp.value[t][n.value],l={path:e.path,items:[]};for(const p of e.indexes){const{path:c,meta:r}=Wn(nm[p]);l.items.push({path:c,info:r})}return l})},_o=()=>i(us,{name:"lock"},()=>i("path",{d:"M787.168 952.268H236.832c-30.395 0-55.033-24.638-55.033-55.033V429.45c0-30.395 24.638-55.034 55.033-55.034h82.55V264.35c0-106.38 86.238-192.618 192.618-192.618S704.618 157.97 704.618 264.35v110.066h82.55c30.395 0 55.033 24.639 55.033 55.034v467.785c0 30.395-24.639 55.033-55.033 55.033zM484.483 672.046v115.122h55.034V672.046c31.99-11.373 55.033-41.605 55.033-77.496 0-45.592-36.958-82.55-82.55-82.55s-82.55 36.958-82.55 82.55c0 35.89 23.042 66.123 55.033 77.496zM622.067 264.35c0-60.788-49.28-110.067-110.067-110.067s-110.067 49.28-110.067 110.067v110.066h220.135V264.35z"}));_o.displayName="LockIcon";var Ef=[];const em=Symbol.for("categoryMap"),Vt=()=>{const s=bs(em);if(!s)throw new Error("useCategoryMap() is called without provider.");return s},wf=()=>{const s=tm("category");ha(em,s)},Bt=()=>{const s=Ma(),a=ls();return b(()=>({...s.value.blog,...a.value.blog}))},lm=Symbol.for("tagMap"),zt=()=>{const s=bs(lm);if(!s)throw new Error("useTagMap() is called without provider.");return s},xf=()=>{const s=tm("tag");ha(lm,s)},Af=s=>{const a=ls();return b(()=>{const{[fs.author]:n}=s.value;return n?bt(n):n===!1?[]:bt(a.value.author,!1)})},Cf=s=>{const a=Vt();return b(()=>Wr(s.value[fs.category]).map(n=>({name:n,path:a.value.map[n].path})))},If=s=>{const a=zt();return b(()=>Kr(s.value[fs.tag]).map(n=>({name:n,path:a.value.map[n].path})))},Lf=s=>b(()=>{const{[fs.date]:a}=s.value;return oo(a)}),Tf=s=>{const a=jn(s,"info"),n=Bt(),t=Af(a),e=Cf(a),l=If(a),o=Lf(a),p=_c(),c=b(()=>({author:t.value,category:e.value,date:o.value,localizedDate:a.value[fs.localizedDate]||"",tag:l.value,isOriginal:a.value[fs.isOriginal]||!1,readingTime:a.value[fs.readingTime]||null,readingTimeLocale:a.value[fs.readingTime]&&p.value?kc(a.value[fs.readingTime],p.value):null,pageview:s.path})),r=b(()=>n.value.articleInfo);return{info:c,items:r}},om=Symbol(""),Ft=()=>{const s=bs(om);if(!s)throw new Error("useArticles() is called without provider.");return s},Pf=()=>{const s=Pe("article");ha(om,s)},pm=Symbol(""),bo=()=>{const s=bs(pm);if(!s)throw new Error("useStars() is called without provider.");return s},Sf=()=>{const s=Pe("star");ha(pm,s)},im=Symbol(""),Eo=()=>{const s=bs(im);if(!s)throw new Error("useTimelines() is called without provider.");return s},Of=()=>{const s=Pe("timeline"),a=b(()=>{const n=[];return s.value.items.forEach(({info:t,path:e})=>{const l=oo(t[fs.date]);if(l){const o=l.getFullYear(),p=l.getMonth()+1,c=l.getDate();(!n[0]||n[0].year!==o)&&n.unshift({year:o,items:[]}),n[0].items.push({date:`${p}/${c}`,info:t,path:e})}}),{...s.value,config:n.reverse()}});ha(im,a)},Df=()=>{Pf(),wf(),Sf(),xf(),Of()};var Rf=z({name:"SocialMedia",setup(){const s=Bt(),a=vn(),n=b(()=>{const t=s.value.medias;return t?gn(t).map(([e,l])=>({name:e,icon:vf[e],url:l})):[]});return()=>n.value.length?i("div",{class:"vp-social-medias"},n.value.map(({name:t,icon:e,url:l})=>i("a",{class:"vp-social-media",href:l,rel:"noopener noreferrer",target:"_blank","aria-label":t,...a.value?{}:{"data-balloon-pos":"up"},innerHTML:e}))):null}}),wo=z({name:"BloggerInfo",setup(){const s=Bt(),a=Tt(),n=ls(),t=Ft(),e=Vt(),l=zt(),o=Eo(),p=Dt(),c=b(()=>{var h;return s.value.name||((h=bt(n.value.author)[0])==null?void 0:h.name)||a.value.title}),r=b(()=>s.value.avatar||n.value.logo),m=b(()=>n.value.blogLocales),d=b(()=>s.value.intro);return()=>{const{article:h,category:g,tag:y,timeline:E}=m.value,w=[[t.value.path,t.value.items.length,h],[e.value.path,sa(e.value.map).length,g],[l.value.path,sa(l.value.map).length,y],[o.value.path,o.value.items.length,E]];return i("div",{class:"vp-blogger-info",vocab:"https://schema.org/",typeof:"Person"},[i("div",{class:"vp-blogger",...d.value?{style:{cursor:"pointer"},"aria-label":m.value.intro,"data-balloon-pos":"down",role:"link",onClick:()=>p(d.value)}:{}},[r.value?i("img",{class:["vp-blogger-avatar",{round:s.value.roundAvatar}],src:As(r.value),property:"image",alt:"Blogger Avatar",loading:"lazy"}):null,c.value?i("div",{class:"vp-blogger-name",property:"name"},c.value):null,s.value.description?i("div",{class:"vp-blogger-description",innerHTML:s.value.description}):null,d.value?i("meta",{property:"url",content:As(d.value)}):null]),i("div",{class:"vp-blog-counts"},w.map(([k,C,_])=>i(Ls,{class:"vp-blog-count",to:k},()=>[i("div",{class:"count"},C),i("div",_)]))),i(Rf)])}}});const xo=()=>i(us,{name:"category"},()=>i("path",{d:"M148.41 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H148.41c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.311-40.31zM147.556 553.478H429.73c22.263 0 40.311 18.048 40.311 40.31v282.176c0 22.263-18.048 40.312-40.31 40.312H147.555c-22.263 0-40.311-18.049-40.311-40.312V593.79c0-22.263 18.048-40.311 40.31-40.311zM593.927 106.992h282.176c22.263 0 40.31 18.048 40.31 40.31V429.48c0 22.263-18.047 40.31-40.31 40.31H593.927c-22.263 0-40.311-18.047-40.311-40.31V147.302c0-22.263 18.048-40.31 40.31-40.31zM730.22 920.502H623.926c-40.925 0-74.22-33.388-74.22-74.425V623.992c0-41.038 33.387-74.424 74.425-74.424h222.085c41.038 0 74.424 33.226 74.424 74.067v114.233c0 10.244-8.304 18.548-18.547 18.548s-18.548-8.304-18.548-18.548V623.635c0-20.388-16.746-36.974-37.33-36.974H624.13c-20.585 0-37.331 16.747-37.331 37.33v222.086c0 20.585 16.654 37.331 37.126 37.331H730.22c10.243 0 18.547 8.304 18.547 18.547 0 10.244-8.304 18.547-18.547 18.547z"}));xo.displayName="CategoryIcon";const Ao=()=>i(us,{name:"tag"},()=>i("path",{d:"M939.902 458.563L910.17 144.567c-1.507-16.272-14.465-29.13-30.737-30.737L565.438 84.098h-.402c-3.215 0-5.726 1.005-7.634 2.913l-470.39 470.39a10.004 10.004 0 000 14.164l365.423 365.424c1.909 1.908 4.42 2.913 7.132 2.913s5.223-1.005 7.132-2.913l470.39-470.39c2.01-2.11 3.014-5.023 2.813-8.036zm-240.067-72.121c-35.458 0-64.286-28.828-64.286-64.286s28.828-64.285 64.286-64.285 64.286 28.828 64.286 64.285-28.829 64.286-64.286 64.286z"}));Ao.displayName="TagIcon";const Co=()=>i(us,{name:"timeline"},()=>i("path",{d:"M511.997 70.568c-243.797 0-441.429 197.633-441.429 441.435 0 243.797 197.632 441.429 441.43 441.429S953.431 755.8 953.431 512.002c0-243.796-197.637-441.434-441.435-441.434zm150.158 609.093-15.605 15.61c-8.621 8.615-22.596 8.615-31.215 0L472.197 552.126c-4.95-4.944-4.34-14.888-4.34-24.677V247.14c0-12.19 9.882-22.07 22.07-22.07h22.07c12.19 0 22.07 9.882 22.07 22.07v273.218l128.088 128.088c8.62 8.62 8.62 22.595 0 31.215zm0 0"}));Co.displayName="TimelineIcon";const rm=()=>i(us,{name:"slides"},()=>i("path",{d:"M896 170.667v426.666a85.333 85.333 0 0 1-85.333 85.334h-256v61.184l192.597 115.584-43.861 73.13-148.736-89.173v95.275h-85.334v-95.318l-148.736 89.216-43.861-73.13 192.597-115.627v-61.141h-256A85.333 85.333 0 0 1 128 597.333V170.667H85.333V85.333h853.334v85.334H896zm-682.667 0v426.666h597.334V170.667H213.333zM426.667 512h-85.334V341.333h85.334V512zm128 0h-85.334V256h85.334v256zm128 0h-85.334V384h85.334v128z"}));rm.displayName="SlideIcon";const cm=()=>i(us,{name:"sticky"},()=>[i("path",{d:"m381.3 733.8l-161.9 118c-5.9 4.5-13.2 6.6-20.1 6.6-8.7 0-17.7-3.4-24.3-10-12.2-12.2-13.9-31.3-3.5-45.2l144.5-195.5-113.6-112.9c-11.1-11.1-13.2-28.4-5.5-42 5.5-8.7 52.1-76.4 155.5-51 1.8 0.3 3.5 0.3 5.6 0.7 4.2 0.3 9 0.7 14.2 1.7 21.9 3.5 60.8-13.9 94.5-42.7 32.3-27.5 53.1-59.4 53.1-81.6 0-5.2 0-10.8-0.3-16-0.7-20.8-2.1-52.8 21.5-76.4 28.1-28.1 72.9-30.6 103.9-5.2 0.6 0.3 1 1 1.7 1.7 16.7 16.3 187.5 187.2 189.3 188.9 14.5 14.6 22.9 34.4 22.9 55.3 0 20.8-8 40.2-22.9 54.8-23.7 23.6-56 22.6-77.1 21.6-4.9 0-10.5-0.4-15.7-0.4-20.8 0-45.8 14.6-70.5 41.3-34.3 37.5-55.5 85.8-53.8 107.7 0.7 6.9 2.1 19.1 2.4 20.8 25 101.4-42.7 147.6-50.7 152.8-13.9 8.4-31.6 6.3-42.7-4.8l-112.1-112.2z"})]);cm.displayName="StickyIcon";const Se=()=>i(us,{name:"article"},()=>i("path",{d:"M853.333 938.667H170.667A42.667 42.667 0 0 1 128 896V128a42.667 42.667 0 0 1 42.667-42.667h682.666A42.667 42.667 0 0 1 896 128v768a42.667 42.667 0 0 1-42.667 42.667zm-42.666-85.334V170.667H213.333v682.666h597.334zM298.667 256h170.666v170.667H298.667V256zm0 256h426.666v85.333H298.667V512zm0 170.667h426.666V768H298.667v-85.333zm256-384h170.666V384H554.667v-85.333z"}));Se.displayName="ArticleIcon";const mm=()=>i(us,{name:"book"},()=>i("path",{d:"M256 853.333h426.667A85.333 85.333 0 0 0 768 768V256a85.333 85.333 0 0 0-85.333-85.333H469.333a42.667 42.667 0 0 1 0-85.334h213.334A170.667 170.667 0 0 1 853.333 256v512a170.667 170.667 0 0 1-170.666 170.667H213.333A42.667 42.667 0 0 1 170.667 896V128a42.667 42.667 0 0 1 42.666-42.667h128A42.667 42.667 0 0 1 384 128v304.256l61.653-41.088a42.667 42.667 0 0 1 47.36 0l61.654 41.045V256A42.667 42.667 0 0 1 640 256v256a42.667 42.667 0 0 1-66.347 35.499l-104.32-69.547-104.32 69.547A42.667 42.667 0 0 1 298.667 512V170.667H256v682.666z"}));mm.displayName="BookIcon";const um=()=>i(us,{name:"link"},()=>i("path",{d:"M460.8 584.533c17.067 17.067 17.067 42.667 0 59.734-17.067 17.066-42.667 17.066-59.733 0-85.334-85.334-85.334-217.6 0-302.934L554.667 192C640 110.933 776.533 110.933 857.6 196.267c81.067 81.066 81.067 213.333 0 294.4l-68.267 64c0-34.134-4.266-68.267-17.066-102.4l21.333-21.334c51.2-46.933 55.467-128 4.267-179.2s-128-55.466-179.2-4.266c-4.267 0-4.267 4.266-4.267 4.266L465.067 401.067c-51.2 51.2-51.2 132.266-4.267 183.466m123.733-183.466C601.6 384 627.2 384 644.267 401.067c85.333 85.333 85.333 217.6 0 302.933l-153.6 149.333C405.333 934.4 268.8 934.4 187.733 849.067c-81.066-81.067-81.066-213.334 0-294.4l68.267-64c0 34.133 4.267 72.533 17.067 102.4L251.733 614.4C204.8 665.6 204.8 746.667 256 793.6c51.2 46.933 123.733 46.933 174.933 0l149.334-149.333c51.2-51.2 51.2-128 0-179.2-12.8-17.067-17.067-46.934 4.266-64z"}));um.displayName="LinkIcon";const dm=()=>i(us,{name:"project"},()=>i("path",{d:"M987.456 425.152H864V295.296a36.48 36.48 0 0 0-36.544-36.544h-360l-134.08-128.256A9.344 9.344 0 0 0 327.04 128H36.48A36.48 36.48 0 0 0 0 164.544v676.608a36.48 36.48 0 0 0 36.544 36.544h797.76a36.672 36.672 0 0 0 33.92-22.848L1021.44 475.52a36.48 36.48 0 0 0-33.92-50.304zM82.304 210.304h215.424l136.64 130.752h347.328v84.096H198.848A36.672 36.672 0 0 0 164.928 448L82.304 652.8V210.304zM808.32 795.456H108.544l118.08-292.608h699.904L808.32 795.52z"}));dm.displayName="ProjectIcon";const hm=()=>i(us,{name:"friend"},()=>i("path",{d:"M860.16 213.333A268.373 268.373 0 0 0 512 186.027a267.52 267.52 0 0 0-348.16 404.48L428.8 855.893a118.613 118.613 0 0 0 166.4 0l264.96-265.386a267.52 267.52 0 0 0 0-377.174zM800 531.627l-264.96 264.96a32.427 32.427 0 0 1-46.08 0L224 530.347a183.04 183.04 0 0 1 0-256 182.187 182.187 0 0 1 256 0 42.667 42.667 0 0 0 60.587 0 182.187 182.187 0 0 1 256 0 183.04 183.04 0 0 1 3.413 256z"}));hm.displayName="FriendIcon";const Sl=()=>i(us,{name:"slide-down"},()=>i("path",{d:"M108.775 312.23c13.553 0 27.106 3.734 39.153 11.806l375.205 250.338 363.641-252.808c32.587-21.624 76.499-12.83 98.123 19.757 21.685 32.467 12.95 76.56-19.576 98.184l-402.854 278.89c-23.733 15.901-54.694 15.962-78.547.12L69.501 442.097c-32.647-21.685-41.441-65.777-19.817-98.304 13.734-20.54 36.201-31.563 59.09-31.563Z"}));Sl.displayName="SlideDownIcon";const gm=()=>i("svg",{xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",class:"empty-icon",viewBox:"0 0 1024 1024",innerHTML:'<defs><linearGradient id="f" x1="512.342" y1="2266.13" x2="512.342" y2="666.063" gradientUnits="userSpaceOnUse"><stop offset=".919" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="g" x1="528.912" y1="774" x2="388.088" y2="612" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#e6e6e6" stop-opacity="0"/></linearGradient><linearGradient id="h" x1="213.219" y1="721.704" x2="251.313" y2="683.61" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#d7d7d7"/><stop offset=".485" stop-color="#fafafa"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="i" x1="724.813" y1="821.718" x2="768.656" y2="777.876" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fafafa"/></linearGradient><linearGradient id="a" x1="513.493" y1="714.594" x2="471.007" y2="544.188" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#999"/><stop offset="1" stop-color="#ccc"/></linearGradient><linearGradient id="b" x1="440.156" y1="564.031" x2="508.594" y2="495.594" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="l" x1="660.988" y1="754.156" x2="608.637" y2="544.188" xlink:href="#a"/><linearGradient id="m" x1="479.188" y1="774.219" x2="649.782" y2="603.625" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#b3b3b3"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="n" x1="447.121" y1="774.219" x2="394.661" y2="563.813" xlink:href="#a"/><linearGradient id="o" x1="494" y1="597" x2="628" y2="463" xlink:href="#b"/><linearGradient id="d" x1="610.485" y1="604.938" x2="697.298" y2="518.125" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff"/></linearGradient><linearGradient id="p" x1="457.438" y1="619.25" x2="353.469" y2="619.25" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6" stop-opacity="0"/><stop offset="1" stop-color="#e6e6e6"/></linearGradient><linearGradient id="q" x1="542.734" y1="674.25" x2="615.672" y2="601.313" xlink:href="#b"/><linearGradient id="c" x1="627.933" y1="358.938" x2="685.192" y2="422.531" gradientUnits="userSpaceOnUse"><stop offset=".4" stop-color="#e6e6e6" stop-opacity=".4"/><stop offset=".443" stop-color="#fff"/><stop offset=".6" stop-color="#ccc"/></linearGradient><linearGradient id="r" x1="618.547" y1="422.531" x2="681.547" y2="359.531" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#e6e6e6"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="s" x1="625" y1="441.5" x2="697" y2="369.5" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".761" stop-color="#fff"/><stop offset="1" stop-color="#f0f0f0"/></linearGradient><linearGradient id="t" x1="627.681" y1="361.438" x2="692.257" y2="433.156" xlink:href="#c"/><linearGradient id="u" x1="561.414" y1="735.438" x2="573.149" y2="688.375" xlink:href="#d"/><linearGradient id="v" x1="405" y1="485.875" x2="440" y2="450.875" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".702"/></linearGradient><linearGradient id="w" x1="404.61" y1="486.906" x2="441.86" y2="449.656" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#ccc"/><stop offset=".495" stop-color="#ccc" stop-opacity=".702"/><stop offset=".498" stop-color="#ccc"/><stop offset="1" stop-color="#fff" stop-opacity=".302"/></linearGradient><radialGradient id="e" cx="329.297" cy="647.578" r="8.172" gradientUnits="userSpaceOnUse"><stop offset="0" stop-color="#fafafa"/><stop offset="1.2" stop-color="#e6e6e6"/></radialGradient><radialGradient id="j" cx="802.297" cy="673.578" r="8.172" xlink:href="#e"/><radialGradient id="k" cx="774.844" cy="642.75" r="5.531" xlink:href="#e"/></defs><path d="M512.33 666.07c441.828 0 800 358.18 800 800.03s-358.172 800.02-800 800.02-800-358.18-800-800.02 358.17-800.03 800-800.03z" style="fill:url(#f);fill-rule:evenodd"/><path d="m272 694 242-82 131 119-188 43z" style="fill:url(#g);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M232.391 723.534a2.4 2.4 0 0 1 2.4 2.4v17.725a2.4 2.4 0 0 1-4.8 0v-17.725a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M232.255 676.559c10.33 0 17.067 15.408 18.7 28.493 1.619 12.942-2.372 23.694-18.7 23.694-16.878 0-20.213-10.733-18.7-23.694 1.633-14.061 8.37-28.493 18.7-28.493z" style="fill:url(#h);fill-rule:evenodd"/><path fill="#b3b3b3" fill-rule="evenodd" d="M745.853 826h.938a2.4 2.4 0 0 1 2.4 2.4v22.238a2.4 2.4 0 0 1-2.4 2.4h-.938a2.4 2.4 0 0 1-2.4-2.4V828.4a2.4 2.4 0 0 1 2.4-2.4z"/><path d="M746.727 830.3c-19.438 0-23.278-9.326-21.541-20.59a34.467 34.467 0 0 1 3.289-10.369 16.628 16.628 0 0 1 0-9.112c2.889-12.327 12.059-20.911 18.356-20.911 6.56 0 15.468 9.1 18.356 20.911a14.589 14.589 0 0 1-.335 9.217 34.36 34.36 0 0 1 3.419 10.264c1.861 11.243-2.735 20.59-21.544 20.59z" style="fill:url(#i);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M328.841 654.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.109.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M328.383 653.73a6.567 6.567 0 0 0-5.2-5.027q-4.109-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#e);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M801.841 680.562a6.571 6.571 0 0 0-5.2-5.027q-4.107-.952-.034-2.045a6.571 6.571 0 0 0 5.027-5.2q.952-4.109 2.045-.035a6.569 6.569 0 0 0 5.2 5.027q4.108.954.035 2.045a6.569 6.569 0 0 0-5.027 5.2q-.955 4.108-2.046.035z"/><path d="M801.383 679.73a6.567 6.567 0 0 0-5.2-5.027q-4.108-.954-.035-2.045a6.568 6.568 0 0 0 5.027-5.2q.954-4.107 2.046-.034a6.568 6.568 0 0 0 5.2 5.027q4.107.952.035 2.045a6.568 6.568 0 0 0-5.027 5.2q-.954 4.104-2.046.034z" style="fill:url(#j);fill-rule:evenodd"/><path d="M774.21 646.9a4.446 4.446 0 0 0-3.517-3.4q-2.778-.643-.023-1.383a4.443 4.443 0 0 0 3.4-3.517q.645-2.778 1.383-.023a4.443 4.443 0 0 0 3.517 3.4q2.778.645.023 1.383a4.446 4.446 0 0 0-3.4 3.517q-.645 2.78-1.383.023z" style="fill:url(#k);fill-rule:evenodd"/><path d="m385.6 714.6.158-150.658L598.9 544.174l-.158 150.658z" style="fill:url(#a);fill-rule:evenodd"/><path d="m385.474 564.031 214.763-19.383-36.171-49.067-215.559 17.634z" style="fill:url(#b);fill-rule:evenodd"/><path d="m598.744 694.832.156-150.658 71.975 59.319-.158 150.658z" style="fill:url(#l);fill-rule:evenodd"/><path d="m457.064 774.209.158-150.658 214.691-19.914-.158 150.663z" style="fill:url(#m);fill-rule:evenodd"/><path d="m384.566 714.459.158-150.659 72.5 59.75-.158 150.658z" style="fill:url(#n);fill-rule:evenodd"/><path d="M494 640s75.357-58.4 42-83-38.887 1.663-37 14 53.847 12.465 54-26c.2-49.979 75-125 75-125" style="fill:none;stroke-width:3px;stroke-dasharray:12 6;stroke:url(#o);fill-rule:evenodd"/><path d="m670.275 604.939-72.041-59.9 38.476-26.909 72.86 58.159z" style="fill:url(#d);fill-rule:evenodd"/><path d="m425.5 674.383-72.042-59.9 31.109-50.347 72.86 58.16z" style="fill:url(#p);fill-rule:evenodd"/><path d="m487.918 674.235 214.482-22.57-31.1-50.346-215.309 20.833z" style="fill:url(#q);fill-rule:evenodd"/><path style="fill:#fff;fill-rule:evenodd" d="m697.363 358.927-69.58 62.511-12.035 1.082z"/><path d="m697.363 358.927-69.58 62.511-12.035 1.082z" style="fill:url(#c);fill-rule:evenodd"/><path d="M615.748 422.52 604 413l92.089-53.46" style="fill:url(#r);fill-rule:evenodd"/><path d="m625 432 12 18 60-89" style="fill:url(#s);fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:#fff;fill-rule:evenodd"/><path d="m626.98 421.335-2.471 11.828 70.918-71.735" style="fill:url(#t);fill-rule:evenodd"/><path d="m494.814 735.44 21.293-2.1v-6.613l-13.4 1.319v-6.965l10.977-1.08v-6.613l-10.977 1.08v-6.084l12.917-1.27v-6.525l-20.808 2.047v32.8zM521 732.863l7.054-.694v-11.241a106.361 106.361 0 0 0-1.014-11.274l.176-.017 2.645 7.586 4.453 11.553 4.32-.425 4.408-12.424 2.733-8.116.177-.018a111.811 111.811 0 0 0-1.014 11.474v11.241l7.185-.707V697l-8.552.841-5.025 14.646c-.618 1.956-1.147 4.08-1.808 6.173l-.22.022c-.617-1.968-1.146-3.987-1.808-5.818l-5.2-13.639-8.508.837v32.8zm37.213-3.661 7.891-.776v-10.889l3.835-.377c6.922-.681 12.961-4.714 12.961-12.517 0-8.111-5.951-10.082-13.181-9.371l-11.504 1.128v32.8zm7.891-17.881v-9.478l3.218-.316c3.792-.373 5.908.565 5.908 3.871 0 3.218-1.852 5.208-5.687 5.585zM594 725.682l7.891-.777v-26.274l8.905-.876v-6.524l-25.657 2.524v6.524l8.861-.871v26.274zm27.991-2.754 7.847-.772v-11.594l9.919-22.18-8.244.811-2.733 7.542c-.925 2.56-1.807 4.939-2.733 7.587l-.176.018c-.926-2.466-1.764-4.676-2.645-7.058l-2.734-7-8.375.824 9.874 20.233v11.594z" style="fill:url(#u);fill-rule:evenodd"/><path fill="#ccc" fill-rule="evenodd" d="M408.938 457.309a17.5 17.5 0 0 0 21.374 26.725 17.5 17.5 0 1 1-16.306-30.955 17.442 17.442 0 0 0-5.068 4.23z"/><circle cx="422.5" cy="468.375" r="17.5" style="fill:url(#v)"/><path fill="#ccc" fill-rule="evenodd" d="M391.76 451.5c-2.358 4.419 9.827 15.52 27.215 24.8 15.131 8.071 29.212 12.1 34.166 10.093-4.191 2.772-18.943-1.24-34.86-9.73-17.388-9.275-29.573-20.376-27.215-24.8a2.96 2.96 0 0 1 1.585-1.3 2.606 2.606 0 0 0-.891.937z"/><path d="M418.975 476.29c-17.388-9.275-29.573-20.376-27.215-24.8s18.363-.484 35.751 8.791 29.572 20.376 27.215 24.8-18.364.483-35.751-8.791zm31.634 5.732c1.824-3.42-8.789-12.642-23.7-20.6s-28.486-11.633-30.31-8.213 8.789 12.642 23.7 20.6 28.486 11.633 30.31 8.213zm-36.645-29.008-2.775 1.452.032 1.751 28.637 14.183.266-4.559z" style="fill:url(#w);fill-rule:evenodd"/><g class="people"><path style="fill:#f8cfad;fill-rule:evenodd" d="m612.131 676.5 1.362 3.532 3.255-2.324-1.361-3.532zM629.131 665.5l1.362 3.532 3.255-2.324-1.361-3.532z"/><path style="fill:#141a33;fill-rule:evenodd" d="m617.764 678.184-3.162-.078a11.028 11.028 0 0 0-1.034 3.454c-.258 2.006-1.177 5-.449 5.367 1.5 2.659 4.118-.215 4.118-.215s2.187-2.848 1.925-5.265c-.106-.973-1.181-1.869-1.398-3.263zM633.781 665.855l3.019.945a11.008 11.008 0 0 1-.137 3.6c-.4 1.981-.179 4.166-.986 4.277-2.283 2.03-3.827-1.533-3.827-1.533s-1.473-2.456-.444-4.659c.412-.88 1.718-1.385 2.375-2.63z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M599.935 592.534s10.293 9.761 11.95 7.564 3.536-3.463-6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M611.3 596.361c1.674-1.105 11.5 7.048 14.5 11.774s-12.705-4.36-14.632-6.776-1.54-3.893.132-4.998z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M621.815 607.988s1.809 2.549 2.433 1.756 2.475-1.064 2.449-1.138.1-.819 1.288-2.331-3.8-3.632-5.81-.494a2.556 2.556 0 0 0-.36 2.207z"/><path fill="#232c57" fill-rule="evenodd" d="M598 617s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s12.666 11.836 16 19c0 0-4.753-1.629-4 2 0 0-18.132-14.647-19-19s-9.148-18.716-12-31z"/><path d="M589 622s14.968-5.618 17 7a150.235 150.235 0 0 1 2 22s4.666 17.836 8 25c0 0-4.753-1.629-4 2 0 0-10.132-20.647-11-25s-9.148-18.716-12-31z" style="fill:#292966;fill-rule:evenodd"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M585.626 597.7s-10.292 9.761-11.95 7.563-3.536-3.463 6.758-13.65z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M574.259 601.529c-1.675-1.105-11.5 7.049-14.5 11.774s12.7-4.36 14.631-6.775 1.543-3.894-.131-4.999z"/><path style="fill:#f0c5a8;fill-rule:evenodd" d="M591.715 577.752s-.606 1.681 1.48 3.716-3.615 5.307-4.645 2.85-.48-2.716-.48-2.716z"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M583.527 574.123c-.839 1.043.491 3.873 1.453 5.449s2.749 2.833 3.364 2.428 4.088-2.657 4-4-.228-3.4-.228-3.4 2.562-1.641 2.154-2.916-2.916-.154-2.916-.154a15.853 15.853 0 0 0-.227-2.224c-.189-.929-6.887-1.445-7.827 2.6s.558 1.805.227 2.217z"/><path fill="#232c57" fill-rule="evenodd" d="M584.227 567.758c2.1-.885 7.2-3.684 10.125.318s.842 4.385.989 5.294-1.894 5.69-1.341 6.63-3.865.8-4.657-1.179-2.844-.539-2.227-1.224-1.3-4.456-2.916-2.154a9.252 9.252 0 0 0 .309-1.38c-.115.192.259-3.257-.673-1.32s-2.1 1.037-3.069.762-1.8-1.118-1.071-1.689c.023-.016 2.436-3.172 4.531-4.058z"/><path d="M589 585c-2.584-.47-10.055.362-13 13 0 0 1.9 3.349 5 4s6 21 6 21 24.016 11.06 27-3c-.07-13.826-8-21-8-21s5.829-3.2 5-6-8.016-10.153-11-10-6 0-6 0-2.416 2.47-5 2z" style="fill:#f6bb07;fill-rule:evenodd"/><path style="fill:#f8cfad;fill-rule:evenodd" d="M563.284 612.581s-.986 2.965-1.814 2.389-2.678-.3-2.675-.374-.333-.755-1.912-1.854 2.577-4.583 5.414-2.167a2.551 2.551 0 0 1 .987 2.006z"/></g>'});gm.displayName="EmptyIcon";var Mf=z({name:"ArticleItem",props:{info:{type:Object,required:!0},path:{type:String,required:!0}},slots:Object,setup(s,{slots:a}){const n=jn(s,"info"),{info:t,items:e}=Tf(s);return()=>{var h,g,y;const{[fs.title]:l,[fs.type]:o,[fs.isEncrypted]:p=!1,[fs.cover]:c,[fs.excerpt]:r,[fs.sticky]:m}=n.value,d=t.value;return i("div",{class:"vp-article-wrapper"},i("article",{class:"vp-article-item",vocab:"https://schema.org/",typeof:"Article"},[((h=a.cover)==null?void 0:h.call(a,{cover:c}))||(c?[i("img",{class:"vp-article-cover",src:As(c),loading:"lazy"}),i("meta",{property:"image",content:As(c)})]:[]),m?i(cm):null,i(Ls,{to:s.path},()=>{var E;return((E=a.title)==null?void 0:E.call(a,{title:l,isEncrypted:p,type:o}))||i("header",{class:"vp-article-title"},[p?i(_o):null,o===Ic.slide?i(rm):null,i("span",{property:"headline"},l)])}),((g=a.excerpt)==null?void 0:g.call(a,{excerpt:r}))||(r?i("div",{class:"vp-article-excerpt",innerHTML:r}):null),i("hr",{class:"vp-article-hr"}),((y=a.info)==null?void 0:y.call(a,{info:d}))||i(Xc,{info:d,...e.value?{items:e.value}:{}})]))}}}),Vf=z({name:"Pagination",props:{total:{type:Number,default:10},perPage:{type:Number,default:10},current:{type:Number,default:1}},emits:["updateCurrentPage"],setup(s,{emit:a}){let n;const t=ls(),e=Q(""),l=b(()=>t.value.paginationLocales),o=b(()=>Math.ceil(s.total/s.perPage)),p=b(()=>!!o.value&&o.value!==1),c=b(()=>o.value<7?!1:s.current>4),r=b(()=>o.value<7?!1:s.current<o.value-3),m=b(()=>{const{current:g}=s;let y=1,E=o.value;const w=[];o.value>=7&&(g<=4&&g<o.value-3?(y=1,E=5):g>4&&g>=o.value-3?(E=o.value,y=o.value-4):o.value>7&&(y=g-2,E=g+2));for(let k=y;k<=E;k++)w.push(k);return w}),d=g=>a("updateCurrentPage",g),h=g=>{const y=parseInt(g,10);y<=o.value&&y>0?d(y):n.pop(`<svg viewBox="0 0 1024 1024" xmlns="http://www.w3.org/2000/svg" width="16" height="16"><path d="M64 512a448 448 0 1 0 896 0 448 448 0 1 0-896 0Z" fill="#FA5151"/><path d="m557.3 512 113.1-113.1c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L512 466.7 398.9 353.6c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L466.7 512 353.6 625.1c-12.5 12.5-12.5 32.8 0 45.3 6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4L512 557.3l113.1 113.1c6.2 6.2 14.4 9.4 22.6 9.4s16.4-3.1 22.6-9.4c12.5-12.5 12.5-32.8 0-45.3L557.3 512z" fill="#FFF"/></svg>${l.value.errorText.replace(/\$page/gu,o.value.toString())}`)};return ys(()=>{n=new Z0}),()=>i("div",{class:"vp-pagination"},p.value?i("nav",{class:"vp-pagination-list"},[i("div",{class:"vp-pagination-number "},[s.current>1?i("div",{class:"prev",role:"navigation",unselectable:"on",onClick:()=>d(s.current-1)},l.value.prev):null,c.value?[i("div",{role:"navigation",onClick:()=>d(1)},1),i("div",{class:"ellipsis"},"...")]:null,m.value.map(g=>i("div",{key:g,class:{active:s.current===g},role:"navigation",onClick:()=>d(g)},g)),r.value?[i("div",{class:"ellipsis"},"..."),i("div",{role:"navigation",onClick:()=>d(o.value)},o.value)]:null,s.current<o.value?i("div",{class:"next",role:"navigation",unselectable:"on",onClick:()=>d(s.current+1)},l.value.next):null]),i("div",{class:"vp-pagination-nav"},[i("label",{for:"navigation-text"},`${l.value.navigate}: `),i("input",{id:"navigation-text",value:e.value,onInput:({target:g})=>{e.value=g.value},onKeydown:g=>{g.key==="Enter"&&(g.preventDefault(),h(e.value))}}),i("button",{class:"vp-pagination-button",role:"navigation",title:l.value.action,onClick:()=>h(e.value)},l.value.action)])]):[])}}),Io=z({name:"ArticleList",props:{items:{type:Array,default:()=>[]}},setup(s){const a=Aa(),n=Da(),t=Bt(),e=Q(1),l=b(()=>t.value.articlePerPage||10),o=b(()=>s.items.slice((e.value-1)*l.value,e.value*l.value)),p=async c=>{e.value=c;const r={...a.query};!(r.page===c.toString()||c===1&&!r.page)&&(c===1?delete r.page:r.page=c.toString(),await n.push({path:a.path,query:r}))};return ys(()=>{const{page:c}=a.query;p(c?Number(c):1),cs(e,()=>{const r=document.querySelector("#article-list").getBoundingClientRect().top+window.scrollY;setTimeout(()=>{window.scrollTo(0,r)},100)})}),()=>i("div",{id:"article-list",class:"vp-article-list",role:"feed"},o.value.length?[...o.value.map(({info:c,path:r},m)=>i(ms,{appear:!0,delay:m*.04},()=>i(Mf,{key:r,info:c,path:r}))),i(Vf,{current:e.value,perPage:l.value,total:s.items.length,onUpdateCurrentPage:p})]:i(gm))}}),fm=z({name:"CategoryList",setup(){const s=hs(),a=Vt();return()=>i("ul",{class:"vp-category-list"},gn(a.value.map).sort(([,n],[,t])=>t.items.length-n.items.length).map(([n,{path:t,items:e}])=>i("li",{class:["vp-category",`vp-category${Ie(n,9)}`,{active:t===s.value.path}]},i(Ls,{to:t},()=>[n,i("span",{class:"count"},e.length)]))))}}),vm=z({name:"TagList",setup(){const s=ks(),a=zt(),n=t=>{var e;return t===((e=s.value.blog)==null?void 0:e.name)};return()=>i("ul",{class:"tag-list-wrapper"},gn(a.value.map).sort(([,t],[,e])=>e.items.length-t.items.length).map(([t,{path:e,items:l}])=>i("li",{class:["tag",`tag${Ie(t,9)}`,{active:n(t)}]},i(Ls,{to:e},()=>[t,i("span",{class:"tag-num"},l.length)]))))}}),Bf=z({name:"TimelineList",setup(){const s=ls(),a=Eo(),n=Dt(),t=b(()=>s.value.blogLocales.timeline);return()=>i("div",{class:"timeline-list-wrapper"},[i("div",{class:"timeline-list-title",onClick:()=>n(a.value.path)},[i(Co),i("span",{class:"num"},a.value.items.length),t.value]),i("hr"),i("div",{class:"timeline-content"},i("ul",{class:"timeline-list"},a.value.config.map(({year:e,items:l},o)=>i(ms,{appear:!0,delay:.08*(o+1)},()=>i("li",[i("h3",{class:"timeline-year"},e),i("ul",{class:"timeline-year-wrapper"},l.map(({date:p,info:c,path:r})=>i("li",{class:"timeline-item"},[i("span",{class:"timeline-date"},p),i(Ls,{class:"timeline-title",to:r},()=>c[fs.title])])))])))))])}});const zf={article:Se,category:xo,tag:Ao,timeline:Co};var ym=z({name:"InfoList",setup(){const s=ls(),a=Ft(),n=Vt(),t=b(()=>sa(n.value.map).length),e=bo(),l=zt(),o=b(()=>sa(l.value.map).length),p=Dt(),c=Q("article"),r=b(()=>s.value.blogLocales);return()=>i("div",{class:"vp-blog-infos"},[i("div",{class:"vp-blog-type-switcher"},gn(zf).map(([m,d])=>i("button",{type:"button",class:"vp-blog-type-button",onClick:()=>{c.value=m}},i("div",{class:["icon-wrapper",{active:c.value===m}],"aria-label":r.value[m],"data-balloon-pos":"up"},i(d))))),i(ms,()=>c.value==="article"?i("div",{class:"vp-star-article-wrapper"},[i("div",{class:"title",onClick:()=>p(a.value.path)},[i(Se),i("span",{class:"num"},a.value.items.length),r.value.article]),i("hr"),e.value.items.length?i("ul",{class:"vp-star-articles"},e.value.items.map(({info:m,path:d},h)=>i(ms,{appear:!0,delay:.08*(h+1)},()=>i("li",{class:"vp-star-article"},i(Ls,{to:d},()=>m[fs.title]))))):i("div",{class:"vp-star-article-empty"},r.value.empty.replace("$text",r.value.star))]):c.value==="category"?i("div",{class:"vp-category-wrapper"},[t.value?[i("div",{class:"title",onClick:()=>p(n.value.path)},[i(xo),i("span",{class:"num"},t.value),r.value.category]),i("hr"),i(ms,{delay:.04},()=>i(fm))]:i("div",{class:"vp-category-empty"},r.value.empty.replace("$text",r.value.category))]):c.value==="tag"?i("div",{class:"vp-tag-wrapper"},[o.value?[i("div",{class:"title",onClick:()=>p(l.value.path)},[i(Ao),i("span",{class:"num"},o.value),r.value.tag]),i("hr"),i(ms,{delay:.04},()=>i(vm))]:i("div",{class:"vp-tag-empty"},r.value.empty.replace("$text",r.value.tag))]):i(ms,()=>i(Bf)))])}}),Oe=z({name:"BlogWrapper",slots:Object,setup(s,{slots:a}){const{isMobile:n}=Rt();return()=>[i(ko),i(vo,{noSidebar:!0,noToc:!0},{default:()=>a.default(),navScreenBottom:()=>i(wo),...n.value?{sidebar:()=>i(ym)}:{}})]}});const km=()=>i("aside",{class:"vp-blog-info-wrapper"},[i(ms,()=>i(wo)),i(ms,{delay:.04},()=>i(ym))]);km.displayName="InfoPanel";var De=km,Ff=z({name:"BlogPage",setup(){const s=hs(),a=ks(),n=Vt(),t=zt();return()=>{const{key:e="",name:l=""}=a.value.blog||{},o=l?e==="category"?n.value.map[l].items:e==="tag"?t.value.map[l].items:[]:[];return i(Oe,()=>i("div",{class:"vp-page vp-blog"},i("div",{class:"blog-page-wrapper"},[i("main",{id:"main-content",class:"vp-blog-main"},[i(ms,()=>e==="category"?i(fm):e==="tag"?i(vm):null),l?i(ms,{appear:!0,delay:.24},()=>i(Io,{key:s.value.path,items:o})):null]),i(ms,{delay:.16},()=>i(De,{key:"blog"}))])))}}});const $f="//theme-hope-assets.vuejs.press/hero/default.jpg";var Hf=z({name:"BlogHero",slots:Object,setup(s,{slots:a}){const n=ks(),t=Tt(),e=Ts(),l=b(()=>n.value.heroFullScreen??!1),o=b(()=>{const{heroText:c,heroImage:r,heroImageDark:m,heroAlt:d,heroImageStyle:h,tagline:g}=n.value;return{text:c??t.value.title??"Hello",image:r?As(r):null,imageDark:m?As(m):null,heroStyle:h,alt:d||c||"",tagline:g??"",isFullScreen:l.value}}),p=b(()=>{const{bgImage:c,bgImageDark:r,bgImageStyle:m}=n.value;return{image:Ss(c)?As(c):c===!1?null:$f,imageDark:Ss(r)?As(r):null,bgStyle:m,isFullScreen:l.value}});return()=>{var c,r;return n.value.hero===!1?null:i("div",{ref:e,class:["vp-blog-hero",{fullscreen:l.value,"no-bg":!p.value.image}]},[((c=a.heroBg)==null?void 0:c.call(a,p.value))||[p.value.image?i("div",{class:["vp-blog-mask",{light:p.value.imageDark}],style:[{background:`url(${p.value.image}) center/cover no-repeat`},p.value.bgStyle]}):null,p.value.imageDark?i("div",{class:"vp-blog-mask dark",style:[{background:`url(${p.value.imageDark}) center/cover no-repeat`},p.value.bgStyle]}):null],((r=a.heroInfo)==null?void 0:r.call(a,o.value))||[i(ms,{appear:!0,type:"group",delay:.04},()=>[o.value.image?i("img",{key:"light",class:["vp-blog-hero-image",{light:o.value.imageDark}],style:o.value.heroStyle,src:o.value.image,alt:o.value.alt}):null,o.value.imageDark?i("img",{key:"dark",class:"vp-blog-hero-image dark",style:o.value.heroStyle,src:o.value.imageDark,alt:o.value.alt}):null]),i(ms,{appear:!0,delay:.08},()=>o.value.text?i("h1",{class:"vp-blog-hero-title"},o.value.text):null),i(ms,{appear:!0,delay:.12},()=>o.value.tagline?i("p",{class:"vp-blog-hero-description",innerHTML:o.value.tagline}):null)],o.value.isFullScreen?i("button",{type:"button",class:"slide-down-button",onClick:()=>{window.scrollTo({top:e.value.clientHeight,behavior:"smooth"})}},[i(Sl),i(Sl)]):null])}}});const Nf=["link","article","book","project","friend"];var jf=z({name:"ProjectPanel",components:{ArticleIcon:Se,BookIcon:mm,FriendIcon:hm,LinkIcon:um,ProjectIcon:dm},props:{items:{type:Array,required:!0}},setup(s){const a=vn(),n=Dt(),t=(e="",l="icon")=>Nf.includes(e)?i(ia(`${e}-icon`)):Za(e)?i("img",{class:"vp-project-image",src:e,alt:l}):Ce(e)?i("img",{class:"vp-project-image",src:As(e),alt:l}):i(js,{icon:e});return()=>i("div",{class:"vp-project-panel"},s.items.map(({icon:e,link:l,name:o,desc:p},c)=>i("div",{class:["vp-project-card",{[`project${c%9}`]:!a.value}],onClick:()=>n(l)},[t(e,o),i("div",{class:"vp-project-name"},o),i("div",{class:"vp-project-desc"},p)])))}}),qf=z({name:"BlogHome",setup(){const s=Ft(),a=ks(),n=b(()=>a.value.projects??[]);return()=>i("div",{class:"vp-page vp-blog"},[i(Hf),i("div",{class:"blog-page-wrapper"},[i("main",{id:"main-content",class:"vp-blog-main"},[n.value.length?i(ms,{appear:!0,delay:.16},()=>i(jf,{items:n.value})):null,i(ms,{appear:!0,delay:.24},()=>i(Io,{items:s.value.items}))]),i(ms,{appear:!0,delay:.16},()=>i(De,{key:"blog"}))]),i(ms,{appear:!0,delay:.28},()=>i(yo))])}});const _m=()=>i(Oe,()=>i(qf));_m.displayName="BlogHomeLayout";var Uf=_m,Gf=z({name:"ArticleType",setup(){const s=hs(),a=Ra(),n=ls(),t=Ft(),e=bo(),l=b(()=>{const o=n.value.blogLocales;return[{text:o.all,path:t.value.path},{text:o.star,path:e.value.path},...Ef.map(({key:p,path:c})=>({text:o[p],path:c.replace(/^\//,a.value)}))]});return()=>i("ul",{class:"vp-article-type-wrapper"},l.value.map(o=>i("li",{class:["vp-article-type",{active:o.path===s.value.path}]},i(Ls,{to:o.path},()=>o.text))))}}),Wf=z({name:"BlogPage",setup(){const s=Pe(),a=ks(),n=hs(),t=Ft(),e=bo(),l=b(()=>{const{key:o="",type:p}=a.value.blog||{};return o==="star"?e.value.items:p==="type"&&o?s.value.items:t.value.items});return()=>i(Oe,()=>i("div",{class:"vp-page vp-blog"},i("div",{class:"blog-page-wrapper"},[i("main",{id:"main-content",class:"vp-blog-main"},[i(ms,()=>i(Gf)),i(ms,{appear:!0,delay:.24},()=>i(Io,{key:n.value.path,items:l.value}))]),i(ms,{delay:.16},()=>i(De,{key:"blog"}))])))}}),Kf=z({name:"TimelineItems",setup(){const s=Bt(),a=ls(),n=Eo(),t=b(()=>s.value.timeline||a.value.blogLocales.timelineTitle),e=b(()=>n.value.config.map(({year:l})=>({title:l.toString(),level:2,slug:l.toString(),children:[]})));return()=>i("div",{class:"timeline-wrapper"},i("ul",{class:"timeline-content"},[i(ms,()=>i("li",{class:"motto"},t.value)),i(Yc,{items:e.value}),n.value.config.map(({year:l,items:o},p)=>i(ms,{appear:!0,delay:.08*(p+1),type:"group"},()=>[i("h3",{key:"title",id:l,class:"timeline-year-title"},i("span",l)),i("li",{key:"content",class:"timeline-year-list"},[i("ul",{class:"timeline-year-wrapper"},o.map(({date:c,info:r,path:m})=>i("li",{class:"timeline-item"},[i("span",{class:"timeline-date"},c),i(Ls,{class:"timeline-title",to:m},()=>r[fs.title])])))])]))]))}});const bm=()=>i(Oe,()=>i("div",{class:"vp-page vp-blog"},i("div",{class:"blog-page-wrapper"},[i("main",{id:"main-content",class:"vp-blog-main"},[i(ms,{appear:!0,delay:.24},()=>i(Kf))]),i(ms,{delay:.16},()=>i(De,{key:"blog"}))])));bm.displayName="Timeline";var Xf=bm,Yf={};const _n="./ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789".split(""),ol=Array.from({length:64},(s,a)=>a),se=s=>Array(s).fill(-1),$a=[...se(46),0,1,...ol.slice(54,64),...se(7),...ol.slice(2,28),...se(6),...ol.slice(28,54),...se(5)],Zp=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],si=[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946,1266315497,3048417604,3681880366,3289982499,290971e4,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055,3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504,976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409e3,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462],Em=[1332899944,1700884034,1701343084,1684370003,1668446532,1869963892],Ol=(s,a)=>{if(a<=0||a>s.length)throw Error(`Illegal len: ${a}`);let n=0,t,e;const l=[];for(;n<a;){if(t=s[n++]&255,l.push(_n[t>>2&63]),t=(t&3)<<4,n>=a){l.push(_n[t&63]);break}if(e=s[n++]&255,t|=e>>4&15,l.push(_n[t&63]),t=(e&15)<<2,n>=a){l.push(_n[t&63]);break}e=s[n++]&255,t|=e>>6&3,l.push(_n[t&63]),l.push(_n[e&63])}return l.join("")},Qf=(s,a)=>{if(a<=0)throw Error(`Illegal len: ${a}`);const n=s.length;let t=0,e=0,l,o,p,c,r,m;const d=[];for(;t<n-1&&e<a&&(m=s.charCodeAt(t++),l=m<$a.length?$a[m]:-1,m=s.charCodeAt(t++),o=m<$a.length?$a[m]:-1,!(l==-1||o==-1||(r=l<<2>>>0,r|=(o&48)>>4,d.push(String.fromCharCode(r)),++e>=a||t>=n)||(m=s.charCodeAt(t++),p=m<$a.length?$a[m]:-1,p==-1)||(r=(o&15)<<4>>>0,r|=(p&60)>>2,d.push(String.fromCharCode(r)),++e>=a||t>=n)));)m=s.charCodeAt(t++),c=m<$a.length?$a[m]:-1,r=(p&3)<<6>>>0,r|=c,d.push(String.fromCharCode(r)),++e;return d.map(h=>h.charCodeAt(0))},Jf=(s,a)=>{let n=null;for(typeof s=="number"&&(n=s,s=()=>null);n!==null||(n=s())!==null;)n<128?a(n&127):n<2048?(a(n>>6&31|192),a(n&63|128)):n<65536?(a(n>>12&15|224),a(n>>6&63|128),a(n&63|128)):(a(n>>18&7|240),a(n>>12&63|128),a(n>>6&63|128),a(n&63|128)),n=null},Zf=(s,a)=>{let n,t=null;for(;(n=t!==null?t:s())!==null;){if(n>=55296&&n<=57343&&(t=s())!==null&&t>=56320&&t<=57343){a((n-55296)*1024+t-56320+65536),t=null;continue}a(n)}t!==null&&a(t)},s3=(s,a)=>{Zf(s,function(n){Jf(n,a)})},a3=typeof process=="object"&&Yf.NEXT_RUNTIME==="edge"?setTimeout:typeof setImmediate=="function"?setImmediate:typeof process=="object"&&typeof process.nextTick=="function"?process.nextTick:setTimeout,n3=s=>{const a=[];let n=0;return s3(()=>n>=s.length?null:s.charCodeAt(n++),t=>{a.push(t)}),a},Et=(s,a,n,t)=>{let e,l=s[a],o=s[a+1];return l^=n[0],e=t[l>>>24],e+=t[256|l>>16&255],e^=t[512|l>>8&255],e+=t[768|l&255],o^=e^n[1],e=t[o>>>24],e+=t[256|o>>16&255],e^=t[512|o>>8&255],e+=t[768|o&255],l^=e^n[2],e=t[l>>>24],e+=t[256|l>>16&255],e^=t[512|l>>8&255],e+=t[768|l&255],o^=e^n[3],e=t[o>>>24],e+=t[256|o>>16&255],e^=t[512|o>>8&255],e+=t[768|o&255],l^=e^n[4],e=t[l>>>24],e+=t[256|l>>16&255],e^=t[512|l>>8&255],e+=t[768|l&255],o^=e^n[5],e=t[o>>>24],e+=t[256|o>>16&255],e^=t[512|o>>8&255],e+=t[768|o&255],l^=e^n[6],e=t[l>>>24],e+=t[256|l>>16&255],e^=t[512|l>>8&255],e+=t[768|l&255],o^=e^n[7],e=t[o>>>24],e+=t[256|o>>16&255],e^=t[512|o>>8&255],e+=t[768|o&255],l^=e^n[8],e=t[l>>>24],e+=t[256|l>>16&255],e^=t[512|l>>8&255],e+=t[768|l&255],o^=e^n[9],e=t[o>>>24],e+=t[256|o>>16&255],e^=t[512|o>>8&255],e+=t[768|o&255],l^=e^n[10],e=t[l>>>24],e+=t[256|l>>16&255],e^=t[512|l>>8&255],e+=t[768|l&255],o^=e^n[11],e=t[o>>>24],e+=t[256|o>>16&255],e^=t[512|o>>8&255],e+=t[768|o&255],l^=e^n[12],e=t[l>>>24],e+=t[256|l>>16&255],e^=t[512|l>>8&255],e+=t[768|l&255],o^=e^n[13],e=t[o>>>24],e+=t[256|o>>16&255],e^=t[512|o>>8&255],e+=t[768|o&255],l^=e^n[14],e=t[l>>>24],e+=t[256|l>>16&255],e^=t[512|l>>8&255],e+=t[768|l&255],o^=e^n[15],e=t[o>>>24],e+=t[256|o>>16&255],e^=t[512|o>>8&255],e+=t[768|o&255],l^=e^n[16],s[a]=o^n[17],s[a+1]=l,s},En=(s,a)=>{let n=0;for(let t=0;t<4;++t)n=n<<8|s[a]&255,a=(a+1)%s.length;return{key:n,offp:a}},ai=(s,a,n)=>{const t=a.length,e=n.length;let l=0,o=[0,0],p;for(let c=0;c<t;c++)p=En(s,l),l=p.offp,a[c]=a[c]^p.key;for(let c=0;c<t;c+=2)o=Et(o,0,a,n),a[c]=o[0],a[c+1]=o[1];for(let c=0;c<e;c+=2)o=Et(o,0,a,n),n[c]=o[0],n[c+1]=o[1]},t3=(s,a,n,t)=>{const e=n.length,l=t.length;let o=0,p=[0,0],c;for(let r=0;r<e;r++)c=En(a,o),o=c.offp,n[r]=n[r]^c.key;o=0;for(let r=0;r<e;r+=2)c=En(s,o),o=c.offp,p[0]^=c.key,c=En(s,o),o=c.offp,p[1]^=c.key,p=Et(p,0,n,t),n[r]=p[0],n[r+1]=p[1];for(let r=0;r<l;r+=2)c=En(s,o),o=c.offp,p[0]^=c.key,c=En(s,o),o=c.offp,p[1]^=c.key,p=Et(p,0,n,t),t[r]=p[0],t[r+1]=p[1]},ni=(s,a,n,t,e)=>{const l=Em.slice(),o=l.length;if(n<4||n>31){const h=new Error(`Illegal number of rounds (4-31): ${n}`);if(t===!1)return Promise.reject(h);throw h}if(a.length!==16){const h=new Error(`Illegal salt length: ${a.length} != 16`);if(t===!1)return Promise.reject(h);throw h}n=1<<n>>>0;let p,c,r=0,m;Int32Array?(p=new Int32Array(Zp),c=new Int32Array(si)):(p=Zp.slice(),c=si.slice()),t3(a,s,p,c);const d=()=>{if(e&&e(r/n),r<n){const h=Date.now();for(;r<n&&(r=r+1,ai(s,p,c),ai(a,p,c),!(Date.now()-h>100)););}else{for(r=0;r<64;r++)for(m=0;m<o>>1;m++)Et(l,m<<1,p,c);const h=[];for(r=0;r<o;r++)h.push((l[r]>>24&255)>>>0),h.push((l[r]>>16&255)>>>0),h.push((l[r]>>8&255)>>>0),h.push((l[r]&255)>>>0);return t===!1?Promise.resolve(h):h}if(t===!1)return new Promise(h=>a3(()=>{d().then(h)}))};if(t===!1)return d();{let h;for(;;)if(typeof(h=d())<"u")return h||[]}},e3=s=>{var a;try{const{crypto:n,msCrypto:t}=window,e=new Uint32Array(s);return(a=n||t)==null||a.getRandomValues(e),Array.from(e)}catch{throw Error("WebCryptoAPI is not available")}},l3=(s=10)=>{if(typeof s!="number")throw Error("Illegal arguments: "+typeof s);s<4?s=4:s>31&&(s=31);const a=[];return a.push("$2a$"),s<10&&a.push("0"),a.push(s.toString()),a.push("$"),a.push(Ol(e3(16),16)),a.join("")};function o3(s,a,n,t){if(typeof s!="string"||typeof a!="string"){const g=new Error("Invalid string / salt: Not a string");if(n===!1)return Promise.reject(g);throw g}let e,l;if(a.charAt(0)!=="$"||a.charAt(1)!=="2"){const g=new Error("Invalid salt version: "+a.substring(0,2));if(n===!1)return Promise.reject(g);throw g}if(a.charAt(2)==="$")e="\0",l=3;else{if(e=a.charAt(2),e!=="a"&&e!=="b"&&e!=="y"||a.charAt(3)!=="$"){const g=Error("Invalid salt revision: "+a.substring(2,4));if(n===!1)return Promise.reject(g);throw g}l=4}if(a.charAt(l+2)>"$"){const g=new Error("Missing salt rounds");if(n===!1)return Promise.reject(g);throw g}const o=parseInt(a.substring(l,l+1),10)*10,p=parseInt(a.substring(l+1,l+2),10),c=o+p,r=a.substring(l+3,l+25);s+=e>="a"?"\0":"";const m=n3(s),d=Qf(r,16),h=g=>{const y=[];return y.push("$2"),e>="a"&&y.push(e),y.push("$"),c<10&&y.push("0"),y.push(c.toString()),y.push("$"),y.push(Ol(d,d.length)),y.push(Ol(g,Em.length*4-1)),y.join("")};return n===!1?ni(m,d,c,!1,t).then(g=>h(g)):h(ni(m,d,c,!0,t))}const p3=(s,a=10)=>{if(typeof a=="number"&&(a=l3(a)),typeof s!="string"||typeof a!="string")throw Error("Illegal arguments: "+typeof s+", "+typeof a);return o3(s,a,!0)},Dl=(s,a)=>{if(typeof s!="string"||typeof a!="string")throw Error("Illegal arguments: "+typeof s+", "+typeof a);return a.length!==60?!1:p3(s,a.substring(0,a.length-31))===a};var wm=z({name:"PasswordModal",props:{full:Boolean},emits:["verify"],setup(s,{emit:a}){const n=ks(),t=ls(),e=Q(""),l=Q(!1),o=Q(!1),p=b(()=>t.value.encryptLocales);let c=null;const r=()=>{c&&clearTimeout(c),l.value=!1,a("verify",e.value,o.value),Ja().then(()=>{l.value=!0,c=setTimeout(()=>{l.value=!1},1e3)})};return()=>i("div",{class:["vp-decrypt-layer",{expand:s.full||n.value.home}]},i("div",{class:"vp-decrypt-modal"},[i("div",{class:["vp-decrypt-hint",{tried:l.value}]},l.value?p.value.errorHint:i(_o,{"aria-label":p.value.iconLabel})),i("div",{class:"vp-decrypt-input"},[i("input",{type:"password",value:e.value,placeholder:p.value.placeholder,onInput:({target:m})=>{e.value=m.value},onKeydown:({key:m})=>{m==="Enter"&&r()}})]),i("div",{class:"vp-remember-password"},[i("input",{type:"checkbox",value:o.value,onChange:()=>o.value=!o.value}),p.value.remember]),i("button",{type:"button",class:"vp-decrypt-submit",onClick:()=>r()},"OK")]))}});const xm=()=>{const s=Ma();return b(()=>s.value.encrypt||{})},ti="VUEPRESS_HOPE_GLOBAL_TOKEN",i3=()=>{const s=xm(),a=Xn(ti,""),n=nc(ti,""),t=b(()=>{const{global:l=!1,admin:o=[]}=s.value;return l&&o.length>0}),e=b(()=>{if(t.value){if(a.value)return s.value.admin.some(l=>Dl(a.value,l));if(n.value)return s.value.admin.some(l=>Dl(n.value,l))}return!1});return{isEncrypted:t,isDecrypted:e,validate:(l,o=!1)=>{(o?a:n).value=l}}},pl=(s="",a)=>!!s&&Dl(s,a),ei="VUEPRESS_HOPE_PATH_TOKEN",r3=()=>{const s=hs(),a=xm(),n=Xn(ei,{}),t=nc(ei,{}),e=o=>Gn(a.value.config)?sa(a.value.config).filter(p=>Fn(decodeURI(o),p)).sort((p,c)=>c.length-p.length):[],l=o=>{const p=e(o);if(p.length>0){const{config:c={}}=a.value;return{isEncrypted:!0,isDecrypted:p.some(r=>n.value[r]&&c[r].some(m=>pl(n.value[r],m))||t.value[r]&&c[r].some(m=>pl(t.value[r],m)))}}return{isDecrypted:!1,isEncrypted:!1}};return{status:b(()=>l(s.value.path)),getStatus:l,validate:(o,p=!1)=>{const{config:c={}}=a.value,r=e(s.value.path);for(const m of r)if(c[m].filter(d=>pl(o,d))){(p?n:t).value[m]=o;break}}}};var c3=z({name:"GlobalEncrypt",slots:Object,setup(s,{slots:a}){const{isDecrypted:n,isEncrypted:t,validate:e}=i3(),l=Q(!1);return ys(()=>{l.value=!0}),()=>i(Jc,()=>t.value?l.value?n.value?a.default():i(wm,{full:!0,onVerify:e}):null:a.default())}}),m3=z({name:"LocalEncrypt",slots:Object,setup(s,{slots:a}){const{status:n,validate:t}=r3(),e=Q(!1);return ys(()=>{e.value=!0}),()=>{const{isEncrypted:l,isDecrypted:o}=n.value;return l?e.value?o?a.default():i(wm,{full:!0,onVerify:t}):null:a.default()}}});F1(s=>{const a=s.t,n=s.I!==!1,t=s.i;return n?{title:a,content:t?()=>[i(js,{icon:t}),a]:null,order:s.O,index:s.I}:null});const u3=va({enhance:({app:s,router:a})=>{const{scrollBehavior:n}=a.options;a.options.scrollBehavior=async(...t)=>(await Qc().wait(),n(...t)),y2(s),s.component("HopeIcon",js),s.component("BloggerInfo",wo),s.component("GlobalEncrypt",c3),s.component("LocalEncrypt",m3)},setup:()=>{k2(),E2(),Df()},layouts:{Layout:hf,NotFound:ff,BlogCategory:Ff,BlogHome:Uf,BlogType:Wf,Timeline:Xf}}),ae=[O0,O1,z1,q1,W1,Q1,ag,og,vg,Wg,p2,u3],d3=JSON.parse(`{"base":"/","lang":"zh-CN","title":"Dnull's Blog","description":"BUPTer在线猝死","head":[],"locales":{}}`);var at=Ts(d3),h3=zh,g3=()=>{const s=E0({history:h3(ao("/")),routes:[{name:"vuepress-route",path:"/:catchAll(.*)",components:{}}],scrollBehavior:(a,n,t)=>t||(a.hash?{el:a.hash}:{top:0})});return s.beforeResolve(async(a,n)=>{if(a.path!==n.path||n===Pa){const t=Wn(a.path);if(t.path!==a.path)return t.path;const e=await t.loader();a.meta={...t.meta,_pageChunk:e}}}),s},f3=s=>{s.component("ClientOnly",Ae),s.component("Content",Lr),s.component("RouteLink",Ls)},v3=(s,a,n)=>{const t=b(()=>a.currentRoute.value.path),e=io(t,()=>a.currentRoute.value.meta._pageChunk),l=b(()=>tn.resolveLayouts(n)),o=b(()=>tn.resolveRouteLocale(at.value.locales,t.value)),p=b(()=>tn.resolveSiteLocaleData(at.value,o.value)),c=b(()=>e.value.comp),r=b(()=>e.value.data),m=b(()=>r.value.frontmatter),d=b(()=>tn.resolvePageHeadTitle(r.value,p.value)),h=b(()=>tn.resolvePageHead(d.value,m.value,p.value)),g=b(()=>tn.resolvePageLang(r.value,p.value)),y=b(()=>tn.resolvePageLayout(r.value,l.value)),E={layouts:l,pageData:r,pageComponent:c,pageFrontmatter:m,pageHead:h,pageHeadTitle:d,pageLang:g,pageLayout:y,redirects:Cr,routeLocale:o,routePath:t,routes:kt,siteData:at,siteLocaleData:p};return s.provide(eo,E),Object.defineProperties(s.config.globalProperties,{$frontmatter:{get:()=>m.value},$head:{get:()=>h.value},$headTitle:{get:()=>d.value},$lang:{get:()=>g.value},$page:{get:()=>r.value},$routeLocale:{get:()=>o.value},$site:{get:()=>at.value},$siteLocale:{get:()=>p.value},$withBase:{get:()=>As}}),E},y3=()=>{const s=A0(),a=xr();let n=[];const t=()=>{s.value.forEach(o=>{const p=k3(o);p&&n.push(p)})},e=()=>{const o=[];return s.value.forEach(p=>{const c=_3(p);c&&o.push(c)}),o},l=()=>{document.documentElement.lang=a.value;const o=e();n.forEach((p,c)=>{const r=o.findIndex(m=>p.isEqualNode(m));r===-1?(p.remove(),delete n[c]):o.splice(r,1)}),o.forEach(p=>document.head.appendChild(p)),n=[...n.filter(p=>!!p),...o]};ha(L0,l),ys(()=>{t(),cs(s,l,{immediate:!1})})},k3=([s,a,n=""])=>{const t=Object.entries(a).map(([p,c])=>Ss(c)?`[${p}=${JSON.stringify(c)}]`:c===!0?`[${p}]`:"").join(""),e=`head > ${s}${t}`;return Array.from(document.querySelectorAll(e)).find(p=>p.innerText===n)||null},_3=([s,a,n])=>{if(!Ss(s))return null;const t=document.createElement(s);return Gn(a)&&Object.entries(a).forEach(([e,l])=>{Ss(l)?t.setAttribute(e,l):l===!0&&t.setAttribute(e,"")}),Ss(n)&&t.appendChild(document.createTextNode(n)),t},b3=lh,E3=async()=>{var n;const s=b3({name:"Vuepress",setup(){var l;y3();for(const o of ae)(l=o.setup)==null||l.call(o);const t=ae.flatMap(({rootComponents:o=[]})=>o.map(p=>i(p))),e=C0();return()=>[i(e.value),t]}}),a=g3();f3(s),v3(s,a,ae);for(const t of ae)await((n=t.enhance)==null?void 0:n.call(t,{app:s,router:a,siteData:at}));return s.use(a),{app:s,router:a}};E3().then(({app:s,router:a})=>{a.isReady().then(()=>{s.mount("#app")})});export{u as _,sr as a,ar as b,w3 as c,E3 as createVueApp,Ps as d,x3 as e,A3 as f,ud as o,ia as r,wu as w};
function __vite__mapDeps(indexes) {
  if (!__vite__mapDeps.viteFileDeps) {
    __vite__mapDeps.viteFileDeps = ["assets/index.html-D96AOurX.js","assets/plugin-vue_export-helper-DlAUqK2U.js","assets/README_.html-fFLQw4pI.js","assets/intro.html-Df58a_Uw.js","assets/predicate.html-29PsPk3U.js","assets/IDL-practice1.html-DPWaEb6I.js","assets/verilog.html-CoLzE0MA.js","assets/index.html-COZjthX4.js","assets/SE-design.html-Cv5Dwnh9.js","assets/SE-note.html-C_Wg2VXF.js","assets/SE-req.html-DgmZKcLc.js","assets/GrammarClub.html-BslvZ7Gc.js","assets/2022-1-8.html-DGDbVBRI.js","assets/guitae-1.html-CdzfVuhp.js","assets/2022-1-19.html-CjAxFXfZ.js","assets/2022-1-8.html-D8hwtis3.js","assets/Data-Flow-Conclusion.html-bDhk7PDX.js","assets/afterReadingCleanCode.html-I59KurGP.js","assets/Anime.html-BS2YXQsm.js","assets/2022-9-2.html-B4aUXf5t.js","assets/CV_coin.html-pbgA6-vN.js","assets/EM.html-h2HU4rK4.js","assets/HMM.html-BY7DZFMH.js","assets/SVM.html-DbEDaJ-w.js","assets/decision_tree.html-DcAiBRwQ.js","assets/perceptron.html-CbVjjqgm.js","assets/nplReading.html-oylSBx9V.js","assets/Chapter2.html-CK4UPi4O.js","assets/Chapter3.html-C3GdE5Pl.js","assets/Chapter4.html-cWe4_Dox.js","assets/Chapter5.html-_SL74mtc.js","assets/Chapter6.html-BabKCJaX.js","assets/Chapter8.html-GE6Y-auw.js","assets/Practice-1.html-kEY-i8C6.js","assets/database-1.html-pF3F1vrI.js","assets/database-10(CH16).html-DpwR4kdl.js","assets/database-2.html-BzBE6up9.js","assets/database-3(CH34).html-BfKoliFN.js","assets/database-4.html-Dsecywwa.js","assets/database-5.html-CIxbOPPc.js","assets/database-6.html-BW_LO7Ul.js","assets/database-7(CH13).html-B1Rg-9QA.js","assets/database-8(CH14).html-BytBQ0Yh.js","assets/database-9(CH15).html-CrPRDEaG.js","assets/CH_1.html-DwUHPXZP.js","assets/MESI.html-7nqwb0B1.js","assets/encode_calculate.html-DRW5uxBM.js","assets/CH1-note.html-BBbDqx8d.js","assets/CH2-note.html-BimRTs6t.js","assets/CH3-note.html-hUoEEOD2.js","assets/CH4-Bottom-Up-Parse.html-Ki4cAxuY.js","assets/CH4-Top-Down-Parse.html-Bt93uh_f.js","assets/CH4-note.html-BLZl78TV.js","assets/CH4-yacc-and-lex.html-sJAKMMLq.js","assets/CH5-SDD.html-DC7HZzqH.js","assets/CH6-IR-Generation.html-CZ6Z72WB.js","assets/CH7-Environment.html-DwqDzOLM.js","assets/CH8-CodeGeneration.html-BA6s8EzD.js","assets/CH9-MechineDependentOptimism.html-C2f5QQCU.js","assets/TypeCheck-20230815.html-CzWt8RNF.js","assets/staticProgramAnalysis.html-BPqlzF8x.js","assets/2.html-B92MdaPF.js","assets/CH1-language.html-BxPHnaOz.js","assets/CH2-grammar.html-vGMo7RFW.js","assets/CH3-DFA.html-UzcbaKMO.js","assets/CH45-RL-MyhillNerode.html-phxyOLS_.js","assets/CH6-CFG-reduction.html-DB9Mba5K.js","assets/RBTree.html-DRWn4xWg.js","assets/master-theorem.html-BmMC_0VB.js","assets/CoR.html-Crr8gWZX.js","assets/Facade.html-4T93bzby.js","assets/State.html-DS8BlzFi.js","assets/abstract-factory.html-m2XOyuKi.js","assets/adapter.html-Dpt2k68V.js","assets/bridge.html-DCBGGzbN.js","assets/builder.html-Cz8CU1iG.js","assets/command.html-Ck4DNCq9.js","assets/composite.html-CWmQ5ouP.js","assets/decorator.html-BsalY92M.js","assets/factoryMethod.html-CUmUFe_u.js","assets/flyweight.html-wN-xZh2N.js","assets/iterator.html-BuLnH0oI.js","assets/learnFromJAVA.html-wwL25mTZ.js","assets/mediator.html-DSn2hbZ3.js","assets/memento.html-BXLMXPGP.js","assets/observer.html-B8vSN54J.js","assets/principle.html-DRoAMfnp.js","assets/prototype.html-I_8l5KYR.js","assets/proxy.html-BrUOsTSG.js","assets/singleton.html-Bqc1MhH1.js","assets/strategy.html-CiYHsLK5.js","assets/template.html-NW5g6x3T.js","assets/visitor.html-CFjEZREy.js","assets/importance-of-probability-distibution.html-DxxgMmSs.js","assets/probability-theory.html-Drc9tZgd.js","assets/convolution.html-yoVmC6Q4.js","assets/signal.html-CiGx3VNn.js","assets/signal_2.html-C4qDbjvI.js","assets/linux-usage.html-BtRmPoAF.js","assets/upload-attack.html-Dw7VYhD7.js","assets/2022-10-25.html-CKUDqQY4.js","assets/2022-10-30.html-9mNoENh1.js","assets/2022-10-9.html-Ct9V7A3R.js","assets/2022-11-5.html-NqSAP5LA.js","assets/2023-4-21.html-BCOL6L76.js","assets/notes.html-CmX2Fo-p.js","assets/wireShark-1-inro.html-nlz3m3_J.js","assets/wireShark-2.html-CJcv3jM8.js","assets/wireShark-3.html-EeteTaOZ.js","assets/wireShark-4-TCP.html-Wofra0_p.js","assets/wireShark-5-DHCP.html-D118FuXx.js","assets/OSC_2.html-CcTuy56J.js","assets/OSC_3.html-BhEOCAHW.js","assets/OSC_4.html-Bjf2KRDw.js","assets/OSC_5.html-CO_kui3l.js","assets/OSC_6.html-JsuWNmi-.js","assets/OSC_7.html-CFNrDfu2.js","assets/6.828-2018-lab1.html-Ddh7HWqD.js","assets/6.828-2018-lab2.html-C9nWDCh1.js","assets/CH1-2-Memoryspace.html-CJYk39cp.js","assets/CH1-CPUSchedualing.html-RS8K0bwL.js","assets/CH1-MLFQ.html-7SnExESs.js","assets/CH1-Segmentation.html-DtKatwlI.js","assets/CH1-directExecution.html-CwD2exvO.js","assets/CH1-free-memory-management.html-Dr3bm9dO.js","assets/CH1-memoryTransflate.html-CsyD0lUO.js","assets/CH1-paging.html-BIRTIMCj.js","assets/CH1-processAPI.html-qAgdEnFv.js","assets/CH1-processes.html-DHyizy9I.js","assets/CH1-proportionalShare.html-xQmwVUJi.js","assets/CH1-realVM.html-BdX3o1Q5.js","assets/CH2-Concurrency-datastruct.html-CNbT_iy5.js","assets/CH2-Concurrency.html-C9cm60WS.js","assets/CH2-Condition-Varible.html-DV4tBmX4.js","assets/CH2-Samephore.html-DDpF3-jJ.js","assets/CH2-some-error.html-DrtcOfjd.js","assets/CH3-fileSystem.html-CmSwA-_C.js","assets/CH3-linuxFileCommand.html-BuGOq6Js.js","assets/OSC_1.html-ByeQdUQn.js","assets/leading-chapter.html-BgTqNPxx.js","assets/CPPofCPP.html-9crtCfGo.js","assets/DynamicMemery.html-kEd4B9on.js","assets/IOfile.html-BQSOmup5.js","assets/Lambda.html-BhYDQ_H6.js","assets/OPPofCPP.html-BdSluQEt.js","assets/SomeOfCPP.html-C0rn5bPO.js","assets/SomeOfContainer.html-BSa66Pyl.js","assets/SomeOfoi.html-DG5SqRFT.js","assets/heritedOfCpp.html-DBuefuUe.js","assets/overloadAssignment.html-B2t992ZT.js","assets/preCompleteCMD.html-BB0aJnMm.js","assets/template.html-DAtC3nr-.js","assets/Array.html-BtV2oCe-.js","assets/NullableTypeModifier.html-BzeG4nkq.js","assets/SomeofCsharp.html-DnOsymQD.js","assets/TwoKingofConversion.html-BBp8xLDV.js","assets/basic-1.html-Ci4wcdsM.js","assets/projectManage.html-C7NenY2f.js","assets/rust_basic_231027.html-CV4ambsj.js","assets/BST.html-D4Pn7gAG.js","assets/CutPointAndEdge.html-DvxNfIn2.js","assets/Dichotomy-OR.html-CDlZeMSw.js","assets/Dichotomy.html-B7kvb2ij.js","assets/DichotomyGraph.html-L1Ud8wpw.js","assets/GameTheory.html-3gomR7GO.js","assets/HandWrittenHeap.html-D1TIuK1n.js","assets/LCA.html-DSKtEwC1.js","assets/MSSet.html-zrYTZiSC.js","assets/ST-about.html-RnAXVKnH.js","assets/Segment-Tree.html-CMHnxtVn.js","assets/SmallestSpanTree.html-Bmo1RA_s.js","assets/Tree-Array.html-BWGY9Xlq.js","assets/TreeToList.html-BBDb2uLN.js","assets/dataStruct-S.html-BMudTS77.js","assets/distant.html-B30g_-CP.js","assets/network-flows.html-CXfsc0LC.js","assets/1003-hdu.html-B4ZNmrfU.js","assets/1005-hdu.html-CIGB3ssu.js","assets/1006-hdu.html-DUf_Ow-B.js","assets/ccpc2016-B.html-CFXT4w0_.js","assets/csp20210902.html-Bq57zIfq.js","assets/csp20210903.html-BEP6kQbv.js","assets/luogu-p2085.html-DuzlNrZk.js","assets/404.html-DUdccAaK.js","assets/index.html-C-MNYuCY.js","assets/index.html-DObf9hbU.js","assets/index.html-xmNI5C7f.js","assets/index.html-DoefUrCU.js","assets/index.html-B9mdIizg.js","assets/index.html-DzHc4qEP.js","assets/index.html-Dge5s2iU.js","assets/index.html-BEv-58jE.js","assets/index.html-BKxTbBYx.js","assets/index.html-DstIwyG9.js","assets/index.html-DGwEBVq3.js","assets/index.html-UoSk44s6.js","assets/index.html-sDPxUQr-.js","assets/index.html-Bb7ep6Cw.js","assets/index.html-DUvBg5U_.js","assets/index.html-B14kwXuz.js","assets/index.html-BIQRMApw.js","assets/index.html-DRyN9Eon.js","assets/index.html-DH4nOeSE.js","assets/index.html-BZmNrSqm.js","assets/index.html-8BquekTM.js","assets/index.html-DpWNwy6a.js","assets/index.html-CR4WIhNS.js","assets/index.html-BS2mGBis.js","assets/index.html-BIh4yQP6.js","assets/index.html-C4e6YynD.js","assets/index.html-d0fI1UW3.js","assets/index.html-CGRhv6V8.js","assets/index.html-C8JZnICW.js","assets/index.html-DWyyEwdC.js","assets/index.html-CHq9LaY5.js","assets/index.html-CvUsFTUz.js","assets/index.html-COq_Mrfz.js","assets/index.html-JfKsM_dx.js","assets/index.html-6Jo23V8g.js","assets/index.html-Daufq7pg.js","assets/index.html-BFcCO-e5.js","assets/index.html-DGYGvDpD.js","assets/index.html-BLRN2HGr.js","assets/index.html-KjVMaZU5.js","assets/index.html-DeZJnJQE.js","assets/index.html-BVtHXeGU.js","assets/index.html-CNqUBZa2.js","assets/index.html-BmrQLot8.js","assets/index.html-DS65Qk8S.js","assets/index.html-FhlJ4LvR.js","assets/index.html-tXgimUbu.js","assets/index.html-Dew8tK2S.js","assets/index.html-C_TTMaak.js","assets/index.html-cQkyIfMB.js","assets/index.html-DtFOi5ae.js","assets/index.html-BAZnqdZv.js","assets/index.html-CFgNYZVF.js","assets/index.html-CnB2wYPq.js","assets/index.html-CFWElisR.js","assets/index.html-BeNXX5_p.js","assets/index.html-D0RRFZTF.js","assets/index.html-CNZ5vSel.js","assets/index.html-dSmdz3dc.js","assets/index.html-CwfHQLIM.js","assets/index.html-D9HpSmA6.js","assets/index.html-DTHtQJQv.js","assets/index.html-CJbiDSln.js","assets/index.html-B6-e9X3a.js","assets/index.html-CnFcY_7v.js","assets/index.html-BsiszSgl.js","assets/index.html-C1pEeSKj.js","assets/index.html-BW2Eg_xk.js","assets/index.html-CeSaVVa5.js","assets/index.html-DgGQ5gpD.js","assets/index.html-CH7yuKjS.js","assets/index.html-CynyKREB.js","assets/index.html-Bh8jXYS0.js","assets/index.html-Cw5K9h2X.js","assets/index.html-jLive8o5.js","assets/index.html-RmKLNw9g.js","assets/index.html-BkkgvNzB.js","assets/index.html-XrajQeKt.js","assets/index.html-Bl-ktbzH.js","assets/index.html-Be3f18ZT.js","assets/index.html-80sxlQGT.js","assets/index.html-CmNUnl6C.js","assets/index.html-oFANHxpV.js","assets/index.html-C5-e8v7r.js","assets/index.html-D9rdc1Rq.js","assets/index.html-K5X6tPKF.js","assets/index.html-DW5_ZiPw.js","assets/index.html-C7F_7b5Q.js","assets/index.html-87vFtU0a.js","assets/index.html-DBEPsKBc.js","assets/index.html-CMrEIy-4.js","assets/index.html-DLUgU9Qu.js","assets/index.html-BI8f_XJ6.js","assets/index.html-MzMw257Y.js","assets/index.html-CR8wv4_C.js","assets/index.html-CfVCJNqt.js","assets/index.html-BL-aTNq2.js","assets/index.html-Dq8gWSFV.js","assets/index.html-BWrbhBBk.js","assets/index.html-DekoO5-g.js","assets/index.html-D9Nb36g2.js","assets/index.html-CVUI1SoC.js","assets/index.html-Dwz-XtUK.js","assets/index.html-v7zwhSqy.js","assets/index.html-DjBejrwY.js","assets/index.html-BqCzXJy7.js","assets/index.html-Czm2gDTD.js","assets/index.html-CI5e-I_N.js","assets/index.html-CfZ7t_6A.js","assets/index.html-I5a7DAHw.js","assets/index.html-OTQbAAjs.js","assets/index.html-be8EdQPH.js","assets/index.html-CoPcOchj.js","assets/index.html-B4gz7FId.js","assets/index.html-BzCPMW5q.js","assets/index.html-CSuc6-9E.js","assets/index.html-CpWA--1K.js","assets/index.html-DkwOJ8gT.js","assets/index.html-BiFqdmPh.js","assets/index.html-Ckx9JQVq.js","assets/index.html-rTuGy-9c.js","assets/index.html-DJf1OXye.js","assets/index.html-BX1fOyjp.js","assets/index.html-DkAmWhvB.js","assets/index.html-D_eRF7O4.js","assets/index.html-Co6mOBdP.js","assets/index.html-BCOPo00s.js","assets/index.html-BgSvWbJw.js","assets/index.html-DVvOggZb.js","assets/index.html-DA-zxAuZ.js","assets/index.html-De5Dsgza.js","assets/index.html-DAjNmU-c.js","assets/index.html-BGyO0aFL.js","assets/index.html-BaIy3DNG.js","assets/index.html-Bjex-csb.js","assets/index.html-Bm8cWUlM.js","assets/index.html-MKGm3hPg.js","assets/index.html-BcfFueII.js","assets/index.html-DwSq8asp.js","assets/index.html-7QnWKy8w.js","assets/index.html-B5n1Kf49.js","assets/index.html-6UuW-1DL.js","assets/index.html-BEh9kscb.js","assets/index.html-1apFzJ2G.js","assets/index.html-18X2XkUg.js","assets/index.html-D-lKlWob.js","assets/index.html-D4jroNx9.js","assets/index.html-C7Ex23N4.js","assets/index.html-e2sLqEwO.js","assets/index.html-C3kFf1tX.js","assets/index.html-ovl1rKU_.js","assets/index.html-BOBhhl9l.js","assets/index.html-BJ2uRL3J.js","assets/index.html-DPewQIZ1.js","assets/index.html-BMd5dim_.js","assets/index.html-Wye7wgHt.js","assets/index.html-B7v2q-ZZ.js","assets/index.html-Cs4Qvgq9.js","assets/index.html-DEeH0O8Z.js","assets/index.html-FWx7IXp1.js","assets/index.html-gm7BOO_v.js","assets/index.html-B1wRO-mg.js","assets/index.html-BVx0j6Dw.js","assets/index.html-qQVeSLZ3.js","assets/index.html-Daj48wSi.js","assets/index.html-CdMYpWc4.js","assets/index.html-DGH4XqAU.js","assets/index.html-MZ8IHNse.js","assets/index.html-CnLQqw5u.js","assets/index.html-EgFIiqdH.js","assets/index.html-DcgsZ81e.js","assets/index.html-avui_b9T.js","assets/index.html-B_bnnP1_.js","assets/index.html-DmGBVChs.js","assets/index.html-Bey33Mcm.js","assets/index.html-BS_frrHh.js","assets/index.html-6-fzcPnB.js","assets/index.html-UdKW6ArY.js","assets/index.html-CPKzuRGY.js","assets/index.html-B_FI2_fH.js","assets/index.html-CPcrVMol.js","assets/index.html-DAOgY0UG.js","assets/index.html-CUWrR3Tc.js","assets/index.html-CZChOrMa.js","assets/index.html-D4TWplS_.js","assets/index.html-Bx3gG-Gb.js","assets/index.html-B3OIvPa0.js","assets/index.html-DYrD4BHw.js","assets/index.html-Ch0XfCnF.js","assets/index.html-CT9t0dnx.js","assets/index.html-Gh0TXNa-.js","assets/index.html-BltrQVj2.js","assets/index.html-u9IOdlWG.js","assets/index.html-husfknpy.js","assets/index.html-BA1hHPpV.js","assets/index.html-C1_8u6HH.js","assets/index.html-Cu_8e1PX.js","assets/index.html-DuXrpdAq.js","assets/index.html-D7y4bOb8.js","assets/index.html-DBHkvF_m.js","assets/index.html-B2J7pDFE.js","assets/index.html-Bt6IVqr2.js","assets/index.html-Ayy-Kp-E.js","assets/index.html-KeePoUb0.js","assets/index.html-CtYn8dAR.js","assets/index.html-VYHcyder.js","assets/index.html-DyNKXyx4.js","assets/index.html-Bz1spumK.js","assets/index.html-uPAhJhuq.js","assets/index.html-B4bwLMOZ.js","assets/index.html-CPW4-50O.js","assets/index.html-DmpprgTI.js","assets/index.html-CVtbuE6k.js","assets/index.html-xtkUy_jE.js","assets/index.html-CyTo4GL2.js","assets/index.html-DPkWzYrr.js","assets/index.html-C7ckP6wq.js","assets/index.html-BCYoSY2a.js","assets/index.html-Cy9kVM6C.js","assets/index.html-D5_gv3T_.js","assets/index.html-rif8DX1U.js","assets/index.html-CVk_O--p.js","assets/index.html-BdiC6vqT.js","assets/index.html-CYswbWXN.js","assets/index.html-DiA_xOXs.js","assets/index.html-xzdRZiUz.js","assets/index.html-BoOq4wOk.js","assets/index.html-Ci8vFgj9.js","assets/index.html-XhP8-xAj.js","assets/index.html-uEJbHMdq.js","assets/index.html-DdFrxAh-.js","assets/index.html-CiCIou8q.js","assets/index.html-vlvxeuaQ.js","assets/index.html-DEj6kNDW.js","assets/index.html-gc8pTyGa.js","assets/index.html-D367kdN1.js","assets/index.html-BvSk7DuU.js","assets/index.html-Cr4h3Vsm.js","assets/index.html-D8lhrGPB.js","assets/index.html-BGx_xD8V.js","assets/index.html-BHTOAIZ5.js","assets/index.html-oqQpcbDU.js","assets/index.html-VUdZlxx_.js","assets/index.html-CUV20JaD.js","assets/index.html-6ALdFpTR.js","assets/index.html-CnS0eP3c.js","assets/index.html-JG8qaMm-.js","assets/index.html-CCMQpAaY.js","assets/index.html-DZHvFjXO.js","assets/index.html-C0fhYmdC.js","assets/index.html-ChOnQPFL.js","assets/index.html-DyUchVjG.js","assets/index.html-JjYfsyL6.js","assets/index.html-Ddx_arA7.js","assets/index.html-Be4crSNq.js","assets/index.html-COykkYlT.js","assets/index.html-CmLMxjVQ.js","assets/index.html-XnvLUbOr.js","assets/index.html--Gwb7wtx.js","assets/index.html-CO0fitgj.js","assets/index.html-ClYxCVnL.js","assets/index.html-B2qSwIQx.js","assets/index.html-DzwrxlCd.js","assets/index.html-Bam73YcN.js","assets/index.html-Bw3HVdEj.js","assets/index.html-BL9r_mGT.js","assets/index.html-r1mcCJ8o.js","assets/index.html-hXPEnk2R.js","assets/index.html-DtaYpVDn.js","assets/index.html-Bzu1VV42.js","assets/index.html-BF8rHobl.js","assets/index.html-Cwoce7De.js","assets/index.html-DjOp_lOD.js","assets/index.html-CDe7Gnng.js","assets/index.html-cbT3QOdO.js","assets/index.html-ClK0vFs1.js","assets/index.html-_orULS1w.js","assets/index.html-BuanDS99.js","assets/index.html-Donr5uPr.js","assets/index.html-DjkwF7i5.js","assets/index.html-q7tvmOW5.js","assets/index.html-DIIqaX7f.js","assets/index.html-COk5uJDH.js","assets/index.html-BNlbSLeP.js","assets/index.html-GCRmrLrG.js","assets/index.html-4haPB0Si.js","assets/index.html-BQGOfwQw.js","assets/index.html-EHeMk-7s.js","assets/index.html-BRUJqvZL.js","assets/index.html-ON8qAd6L.js","assets/index.html-CvpoFjuT.js","assets/index.html-ChyCnrKi.js","assets/index.html-CzX4FQuC.js","assets/index.html-BmuREkd3.js","assets/index.html-CfNgN9Qa.js","assets/index.html-jit4fbxi.js","assets/index.html-CqiHWNll.js","assets/index.html-Ci4lZj5I.js","assets/index.html-RP03vGlW.js","assets/index.html-BqqsXg35.js","assets/index.html-5J3InnHK.js","assets/index.html-C5m61hq0.js","assets/index.html-BSSLasJ6.js","assets/index.html-D2fZU_uA.js","assets/index.html-DiNL7wnc.js"]
  }
  return indexes.map((i) => __vite__mapDeps.viteFileDeps[i])
}
