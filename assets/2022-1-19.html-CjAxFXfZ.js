import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as p,o as r,c as o,a as i,d as l,w as a,b as e,e as s}from"./app-DCTCPPGQ.js";const c={},d=s('<p>不同的游戏生成地图的方式有所不同，在此只是记录几种不同的生成地图的方式和思路</p><h3 id="地牢型地图" tabindex="-1"><a class="header-anchor" href="#地牢型地图"><span>地牢型地图</span></a></h3><p>参考游戏：</p><ul><li>死亡细胞</li><li>传说法师</li><li>元气骑士</li></ul><p>大部分的roguelike类游戏的关卡设计都是使用这种类型的地图生成方式，通过事先设计好的几类模板地图构成小房间，随机构成各类具有相似结构的房间。这样的探索可以给玩家初次的新鲜感，但是作为roguelike游戏，反复的游玩后，重复的关卡设计很容易使玩家疲倦</p><p>关于这种地图的实现思路是：</p><ol><li>在有限的网格中放置好关键房间</li><li>用柏林噪音随机漫步生成联通路线</li><li>根据路径的开口方向放置随机的房间</li></ol><h3 id="横板随机地图" tabindex="-1"><a class="header-anchor" href="#横板随机地图"><span>横板随机地图</span></a></h3><p>参考游戏：</p><ul><li>泰拉瑞亚</li><li>缺氧</li></ul><p>横板的地图生成比较好想，一维噪音用于生成地表，然后根据深度在噪音图的规划下嵌入不同的其他方块，再根据需求加入不同的特殊建筑就好</p><p>只是生成这样一个二维的地图可以说是相当简单的生成方式了，但是为了做到某些效果而不断调整生成地图的参数也是一件复杂的工作</p><h3 id="平面随机地图" tabindex="-1"><a class="header-anchor" href="#平面随机地图"><span>平面随机地图</span></a></h3><p>参考游戏：</p><ul><li>饥荒</li></ul><p>饥荒的地图比较于泰拉瑞亚、缺氧这种地图还要简单，一个平面内只需要一块大陆保证联通就好了，柏林噪音到这里用不上了，不过或许可以使用分形方式生成的噪音，关于如何生成一块连通的二值化的图像咱还得再了解一下</p><h3 id="三维地图" tabindex="-1"><a class="header-anchor" href="#三维地图"><span>三维地图</span></a></h3><p>参考游戏：</p><ul><li>MC</li></ul><p>这类地图生成是最复杂的，但也是最简单的 MC作为一款开源模板式的游戏，它的源代码中有它完整的地形生成方式，想要研究的话有着大量的资料和教程、文档可供参阅</p><p>一般来说，这样的地图首先采用柏林噪音生成高度图，根据高度初步生成海洋和雪山，再使用三维噪音在地底生成不连通洞穴，后续的就是各种复杂的修饰了，嵌入矿物、划分生物群系之类的</p><p>如果有足够的精力学习JAVA和MC的源码及文档的话，MC必定是一个值得学习的开源程序</p><h3 id="几点地图生成中值得注意的问题" tabindex="-1"><a class="header-anchor" href="#几点地图生成中值得注意的问题"><span>几点地图生成中值得注意的问题</span></a></h3>',23),u=i("li",null,[i("p",null,"一般来说，随机生成的地图都会有一个对应的种子，而游戏使用这些种子作为依据生成伪随机数，进而生成噪声、创建地图。但是程序中一般不会使用系统相关的随机数生成，而是使用自行编写的随机数生成器，目的是为了使得不同的电脑、系统上只要游戏程序相同就能使用一个种子生成相同地图")],-1),h=i("li",null,[i("p",null,"游戏编程永远和数学离不开关系，柏林噪音的实现原理和多元微积分、插值这些内容分不开，所以尽快完成基本的数学知识的学习很必要")],-1);function m(g,_){const t=p("Badge");return r(),o("div",null,[d,i("ul",null,[u,i("li",null,[i("p",null,[l(t,{type:"danger"},{default:a(()=>[e("对于咱来说还是太不熟悉")]),_:1}),l(t,{type:"danger"},{default:a(()=>[e("对于咱来说还是太不熟悉")]),_:1}),l(t,{type:"danger"},{default:a(()=>[e("对于咱来说还是太不熟悉")]),_:1}),l(t,{type:"danger"},{default:a(()=>[e("对于咱来说还是太不熟悉")]),_:1}),l(t,{type:"danger"},{default:a(()=>[e("对于咱来说还是太不熟悉")]),_:1}),l(t,{type:"danger"},{default:a(()=>[e("对于咱来说还是太不熟悉")]),_:1}),l(t,{type:"danger"},{default:a(()=>[e("对于咱来说还是太不熟悉")]),_:1}),e("于咱来说还是太不熟悉，很多高级特性运用不熟练，Qt使用C++编写，只要把重心放到Qt相关框架的学习上就好）")])]),h])])}const k=n(c,[["render",m],["__file","2022-1-19.html.vue"]]),x=JSON.parse(`{"path":"/posts/essay/2022-1-19.html","title":"关于游戏地图生成的想法","lang":"zh-CN","frontmatter":{"date":"2021-01-01T00:00:00.000Z","title":"关于游戏地图生成的想法","tag":["游戏编程","unity","地图生成"],"categories":["随笔"],"mathjax":true,"description":"不同的游戏生成地图的方式有所不同，在此只是记录几种不同的生成地图的方式和思路 地牢型地图 参考游戏： 死亡细胞 传说法师 元气骑士 大部分的roguelike类游戏的关卡设计都是使用这种类型的地图生成方式，通过事先设计好的几类模板地图构成小房间，随机构成各类具有相似结构的房间。这样的探索可以给玩家初次的新鲜感，但是作为roguelike游戏，反复的游玩...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/essay/2022-1-19.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"关于游戏地图生成的想法"}],["meta",{"property":"og:description","content":"不同的游戏生成地图的方式有所不同，在此只是记录几种不同的生成地图的方式和思路 地牢型地图 参考游戏： 死亡细胞 传说法师 元气骑士 大部分的roguelike类游戏的关卡设计都是使用这种类型的地图生成方式，通过事先设计好的几类模板地图构成小房间，随机构成各类具有相似结构的房间。这样的探索可以给玩家初次的新鲜感，但是作为roguelike游戏，反复的游玩..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-14T13:35:40.000Z"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"游戏编程"}],["meta",{"property":"article:tag","content":"unity"}],["meta",{"property":"article:tag","content":"地图生成"}],["meta",{"property":"article:published_time","content":"2021-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-14T13:35:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"关于游戏地图生成的想法\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-14T13:35:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":3,"title":"地牢型地图","slug":"地牢型地图","link":"#地牢型地图","children":[]},{"level":3,"title":"横板随机地图","slug":"横板随机地图","link":"#横板随机地图","children":[]},{"level":3,"title":"平面随机地图","slug":"平面随机地图","link":"#平面随机地图","children":[]},{"level":3,"title":"三维地图","slug":"三维地图","link":"#三维地图","children":[]},{"level":3,"title":"几点地图生成中值得注意的问题","slug":"几点地图生成中值得注意的问题","link":"#几点地图生成中值得注意的问题","children":[]}],"git":{"createdTime":1712936892000,"updatedTime":1713101740000,"contributors":[{"name":"DnullP","email":"dnull123p@gmail.com","commits":2}]},"readingTime":{"minutes":3.35,"words":1004},"filePathRelative":"posts/essay/2022-1-19.md","localizedDate":"2021年1月1日","excerpt":"<p>不同的游戏生成地图的方式有所不同，在此只是记录几种不同的生成地图的方式和思路</p>\\n<h3>地牢型地图</h3>\\n<p>参考游戏：</p>\\n<ul>\\n<li>死亡细胞</li>\\n<li>传说法师</li>\\n<li>元气骑士</li>\\n</ul>\\n<p>大部分的roguelike类游戏的关卡设计都是使用这种类型的地图生成方式，通过事先设计好的几类模板地图构成小房间，随机构成各类具有相似结构的房间。这样的探索可以给玩家初次的新鲜感，但是作为roguelike游戏，反复的游玩后，重复的关卡设计很容易使玩家疲倦</p>\\n<p>关于这种地图的实现思路是：</p>\\n<ol>\\n<li>在有限的网格中放置好关键房间</li>\\n<li>用柏林噪音随机漫步生成联通路线</li>\\n<li>根据路径的开口方向放置随机的房间</li>\\n</ol>","autoDesc":true}`);export{k as comp,x as data};
