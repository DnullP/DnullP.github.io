import{_ as r}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as c,c as h,f as t,a as e,d as l,w as m,e as s,b as a}from"./app-DCTCPPGQ.js";const d="/assets/image-LynjJTKI.png",p={},u=s('<ul><li><a href="#deadlock">Deadlock</a></li><li><a href="#deadlock-handling">Deadlock handling</a><ul><li><a href="#deadlock-prevention">Deadlock Prevention</a><ul><li><a href="#mutual-exclusion">mutual exclusion</a></li><li><a href="#hold-and-wait">Hold and wait</a></li><li><a href="#no-preemption">No preemption</a></li><li><a href="#circular-wait">Circular Wait</a></li></ul></li><li><a href="#deadlock-avoidance">Deadlock Avoidance</a><ul><li><a href="#resource-allocation-graph-algorithm">Resource-Allocation-Graph Algorithm</a></li><li><a href="#bankers-algorithm">Banker&#39;s Algorithm</a><ul><li><a href="#safe-state">safe state</a></li><li><a href="#bankers-algorithm-1">banker&#39;s algorithm</a></li></ul></li></ul></li><li><a href="#deadlock-detection">Deadlock Detection</a></li><li><a href="#recovery-from-deadlock">recovery from deadlock</a></li></ul></li></ul>',1),g=s('<h1 id="deadlock" tabindex="-1"><a class="header-anchor" href="#deadlock"><span>Deadlock</span></a></h1><p>Deadlock is a situation where a set of processes are blocked because each process is holding a resource and waiting for another resource acquired by some other process.</p><p>There are four conditions for deadlock:</p><ul><li><p><strong>Mutual Exclusion</strong>: Each resource can be assigned to only one process at a time.</p></li><li><p><strong>Hold and Wait</strong>: A process holding at least one resource is waiting to acquire additional resources held by other processes.</p></li><li><p><strong>No Preemption</strong>: Resources cannot be preempted. They must be released by the process holding them.</p></li><li><p><strong>Circular Wait</strong>: A set of processes must exist such that each process holds at least one resource needed by another process in the set.</p></li></ul><p>We can describe the resource dependency as the <strong>system resource-allocation graph</strong>.</p>',5),k=e("blockquote",null,[e("p",null,"this is a SRG with deadlock")],-1),f=s('<p>Elements in the graph:</p><ul><li><strong>block</strong>: a resource</li><li><strong>circle</strong>: a process</li><li><strong>arrow</strong>: <ul><li>from block to circle: the process is holding the resource</li><li>from circle to block: the process is waiting for the resource</li></ul></li></ul><p>If there is multiple instances of a resource, we can use some dots to represent the number of instances:</p><figure><img src="'+d+'" alt="Alt text" tabindex="0" loading="lazy"><figcaption>Alt text</figcaption></figure><p>Resources dependency is usually corresponding to a kind of resource rather than the specific instance, so the detection of deadlock is not just check the cycle in the graph.</p><h1 id="deadlock-handling" tabindex="-1"><a class="header-anchor" href="#deadlock-handling"><span>Deadlock handling</span></a></h1><p><strong>Deadlock prevention</strong> is to make sure that at least one of the four conditions for deadlock is never held.</p><p><strong>Deadlock avoidance</strong> is to keep the four conditions but make sure that the system will never enter a deadlock state.</p><h2 id="deadlock-prevention" tabindex="-1"><a class="header-anchor" href="#deadlock-prevention"><span>Deadlock Prevention</span></a></h2><h3 id="mutual-exclusion" tabindex="-1"><a class="header-anchor" href="#mutual-exclusion"><span>mutual exclusion</span></a></h3><p>This is usually cannot be prevented, because some resources are inherently non-shareable.</p><h3 id="hold-and-wait" tabindex="-1"><a class="header-anchor" href="#hold-and-wait"><span>Hold and wait</span></a></h3><p>To prevent this condition, we can have the process to get all resources it needs when it requests. Thus it no longer needs to wait for other resources.</p><h3 id="no-preemption" tabindex="-1"><a class="header-anchor" href="#no-preemption"><span>No preemption</span></a></h3><p>We can allow the thread to preempte the resources from other threads. But this is a little complex.</p><p>One more simple way is to have the process release its resources when it waits for another resource for too long.</p><h3 id="circular-wait" tabindex="-1"><a class="header-anchor" href="#circular-wait"><span>Circular Wait</span></a></h3><p>Circular Wait usually needs a certain sequence of resource acquiring. We can enact a policy that specify the order of resource acquiring.</p><h2 id="deadlock-avoidance" tabindex="-1"><a class="header-anchor" href="#deadlock-avoidance"><span>Deadlock Avoidance</span></a></h2><p>To avoid deadlock but keep the four conditions, we need some data struct anb algorithm to maintain the dependency graph.</p><h3 id="resource-allocation-graph-algorithm" tabindex="-1"><a class="header-anchor" href="#resource-allocation-graph-algorithm"><span>Resource-Allocation-Graph Algorithm</span></a></h3><p>This is suitable for the system with only one instance of each resource.</p><p>Given a resource-allocation graph:</p>',23),v=e("p",null,"The dashed line means the process may request the resource, but not yet.",-1),y=e("p",null,"If we allocate the resources to the process, we can reverse the dashed line's direction and turn it into a solid line.",-1),x=e("p",null,"After that, if there is a cycle in the graph, it's in an unsafe state that can be trapped in a deadlock.",-1),b=e("p",null,"So we shouldn't perform the allocation.",-1),w=e("h3",{id:"banker-s-algorithm",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#banker-s-algorithm"},[e("span",null,"Banker's Algorithm")])],-1),_=e("p",null,"This is suitable for the situation where a resource contains multiple instances.",-1),D=e("h4",{id:"safe-state",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#safe-state"},[e("span",null,"safe state")])],-1),T=e("p",null,[e("strong",null,"Pre-condition"),a(": Every thread gives a maximum number of resources it might need. We denote this value as "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mi",null,"M"),e("mi",null,"a"),e("mi",null,"x")]),e("annotation",{encoding:"application/x-tex"},"Max")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.6833em"}}),e("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"x")])])])],-1),A=e("p",null,[a("There is a constant "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mi",null,"A"),e("mi",null,"v"),e("mi",null,"a"),e("mi",null,"i"),e("mi",null,"l"),e("mi",null,"a"),e("mi",null,"b"),e("mi",null,"l"),e("mi",null,"e")]),e("annotation",{encoding:"application/x-tex"},"Available")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.6944em"}}),e("span",{class:"mord mathnormal"},"A"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"v"),e("span",{class:"mord mathnormal"},"ai"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),e("span",{class:"mord mathnormal"},"ab"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"l"),e("span",{class:"mord mathnormal"},"e")])])]),a(" that represents the number of available resources of each type.")],-1),M=e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"Thread"),e("th",null,"Max"),e("th",null,"Allocation"),e("th",null,"Available")])]),e("tbody",null,[e("tr",null,[e("td",null,[e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("msub",null,[e("mi",null,"T"),e("mn",null,"1")])]),e("annotation",{encoding:"application/x-tex"},"T_1")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),e("span",{class:"mord"},[e("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),e("span",{class:"msupsub"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.3011em"}},[e("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[e("span",{class:"pstrut",style:{height:"2.7em"}}),e("span",{class:"sizing reset-size6 size3 mtight"},[e("span",{class:"mord mtight"},"1")])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.15em"}},[e("span")])])])])])])])])]),e("td",null,"10"),e("td",null,"5"),e("td",null,"12")]),e("tr",null,[e("td",null,[e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("msub",null,[e("mi",null,"T"),e("mn",null,"2")])]),e("annotation",{encoding:"application/x-tex"},"T_2")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),e("span",{class:"mord"},[e("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),e("span",{class:"msupsub"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.3011em"}},[e("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[e("span",{class:"pstrut",style:{height:"2.7em"}}),e("span",{class:"sizing reset-size6 size3 mtight"},[e("span",{class:"mord mtight"},"2")])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.15em"}},[e("span")])])])])])])])])]),e("td",null,"4"),e("td",null,"2"),e("td")]),e("tr",null,[e("td",null,[e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("msub",null,[e("mi",null,"T"),e("mn",null,"3")])]),e("annotation",{encoding:"application/x-tex"},"T_3")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),e("span",{class:"mord"},[e("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),e("span",{class:"msupsub"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.3011em"}},[e("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[e("span",{class:"pstrut",style:{height:"2.7em"}}),e("span",{class:"sizing reset-size6 size3 mtight"},[e("span",{class:"mord mtight"},"3")])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.15em"}},[e("span")])])])])])])])])]),e("td",null,"9"),e("td",null,"2"),e("td")])])],-1),C=e("p",null,"This table is a state of the system. 9 resources are allocated thus 3 resources are available.",-1),z=e("p",null,[a("Under the current state, "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("msub",null,[e("mi",null,"T"),e("mn",null,"2")])]),e("annotation",{encoding:"application/x-tex"},"T_2")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),e("span",{class:"mord"},[e("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),e("span",{class:"msupsub"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.3011em"}},[e("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[e("span",{class:"pstrut",style:{height:"2.7em"}}),e("span",{class:"sizing reset-size6 size3 mtight"},[e("span",{class:"mord mtight"},"2")])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.15em"}},[e("span")])])])])])])])]),a(" requests 2 resources, so it's safe to allocate the resources to "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("msub",null,[e("mi",null,"T"),e("mn",null,"2")])]),e("annotation",{encoding:"application/x-tex"},"T_2")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),e("span",{class:"mord"},[e("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),e("span",{class:"msupsub"},[e("span",{class:"vlist-t vlist-t2"},[e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.3011em"}},[e("span",{style:{top:"-2.55em","margin-left":"-0.1389em","margin-right":"0.05em"}},[e("span",{class:"pstrut",style:{height:"2.7em"}}),e("span",{class:"sizing reset-size6 size3 mtight"},[e("span",{class:"mord mtight"},"2")])])]),e("span",{class:"vlist-s"},"​")]),e("span",{class:"vlist-r"},[e("span",{class:"vlist",style:{height:"0.15em"}},[e("span")])])])])])])])]),a(". Then we get 2 more resources available.")],-1),S=e("p",null,[a("We just need to check if "),e("span",{class:"katex"},[e("span",{class:"katex-mathml"},[e("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[e("semantics",null,[e("mrow",null,[e("mi",null,"M"),e("mi",null,"a"),e("mi",null,"x"),e("mo",null,"−"),e("mi",null,"A"),e("mi",null,"l"),e("mi",null,"l"),e("mi",null,"o"),e("mi",null,"c"),e("mi",null,"a"),e("mi",null,"t"),e("mi",null,"i"),e("mi",null,"o"),e("mi",null,"n")]),e("annotation",{encoding:"application/x-tex"},"Max - Allocation")])])]),e("span",{class:"katex-html","aria-hidden":"true"},[e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.7667em","vertical-align":"-0.0833em"}}),e("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"M"),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"x"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),e("span",{class:"mbin"},"−"),e("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),e("span",{class:"base"},[e("span",{class:"strut",style:{height:"0.6944em"}}),e("span",{class:"mord mathnormal"},"A"),e("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll"),e("span",{class:"mord mathnormal"},"oc"),e("span",{class:"mord mathnormal"},"a"),e("span",{class:"mord mathnormal"},"t"),e("span",{class:"mord mathnormal"},"i"),e("span",{class:"mord mathnormal"},"o"),e("span",{class:"mord mathnormal"},"n")])])]),a(" is less than the currently available resources. If it's true, we can add its allocation to the current state and check the next thread.")],-1),N=s('<h4 id="banker-s-algorithm-1" tabindex="-1"><a class="header-anchor" href="#banker-s-algorithm-1"><span>banker&#39;s algorithm</span></a></h4><p>This algorithm gives a vectorial process of the data to quickly check and find the safe state.</p><h2 id="deadlock-detection" tabindex="-1"><a class="header-anchor" href="#deadlock-detection"><span>Deadlock Detection</span></a></h2><p>This is similar to the deadlock avoidance.</p><h2 id="recovery-from-deadlock" tabindex="-1"><a class="header-anchor" href="#recovery-from-deadlock"><span>recovery from deadlock</span></a></h2><p>pass</p>',6);function O(L,B){const n=i("Mermaid"),o=i("center");return c(),h("div",null,[t(" TOC "),u,t(" /TOC "),t(" /TOC "),g,e("div",null,[l(o,null,{default:m(()=>[l(n,{id:"mermaid-119",code:"eJxLL0osyFDwCeJSAALH6NzSktSKeMNYBV1dOwXHeEMNjZKMotTElHhDTU2IknhDsJwTVKlRLFjYCSKIpMEIqgEoBjGMCwAQyRr7"}),k]),_:1})]),f,l(n,{id:"mermaid-222",code:"eJxLL0osyFDwCeJSAALH6NzSktSKeMNYBV1dOwXHeEMNjZKMotTElHhDTU2IknhDBV09oKQTVK1RLFjcCazDCUmHEVQHUAxiGhcAKL0bKQ=="}),v,y,x,b,w,_,D,T,A,M,C,z,S,N])}const R=r(p,[["render",O],["__file","OSC_5.html.vue"]]),E=JSON.parse(`{"path":"/posts/operating-system/osc/OSC_5.html","title":"Deadlock(OSC_5)","lang":"zh-CN","frontmatter":{"title":"Deadlock(OSC_5)","tag":["OS","synchronization","deadlock"],"category":["OS"],"math":true,"mermaid":true,"date":"2024-02-02T00:00:00.000Z","description":" Deadlock Deadlock handling Deadlock Prevention mutual exclusion Hold and wait No preemption Circular Wait Deadlock Avoidance Resource-Allocation-Graph Algorithm Banker's Algori...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/operating-system/osc/OSC_5.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"Deadlock(OSC_5)"}],["meta",{"property":"og:description","content":" Deadlock Deadlock handling Deadlock Prevention mutual exclusion Hold and wait No preemption Circular Wait Deadlock Avoidance Resource-Allocation-Graph Algorithm Banker's Algori..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-14T13:35:40.000Z"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"OS"}],["meta",{"property":"article:tag","content":"synchronization"}],["meta",{"property":"article:tag","content":"deadlock"}],["meta",{"property":"article:published_time","content":"2024-02-02T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-14T13:35:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Deadlock(OSC_5)\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-02-02T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-14T13:35:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"Deadlock Prevention","slug":"deadlock-prevention","link":"#deadlock-prevention","children":[{"level":3,"title":"mutual exclusion","slug":"mutual-exclusion","link":"#mutual-exclusion","children":[]},{"level":3,"title":"Hold and wait","slug":"hold-and-wait","link":"#hold-and-wait","children":[]},{"level":3,"title":"No preemption","slug":"no-preemption","link":"#no-preemption","children":[]},{"level":3,"title":"Circular Wait","slug":"circular-wait","link":"#circular-wait","children":[]}]},{"level":2,"title":"Deadlock Avoidance","slug":"deadlock-avoidance","link":"#deadlock-avoidance","children":[{"level":3,"title":"Resource-Allocation-Graph Algorithm","slug":"resource-allocation-graph-algorithm","link":"#resource-allocation-graph-algorithm","children":[]},{"level":3,"title":"Banker's Algorithm","slug":"banker-s-algorithm","link":"#banker-s-algorithm","children":[]}]},{"level":2,"title":"Deadlock Detection","slug":"deadlock-detection","link":"#deadlock-detection","children":[]},{"level":2,"title":"recovery from deadlock","slug":"recovery-from-deadlock","link":"#recovery-from-deadlock","children":[]}],"git":{"createdTime":1712936892000,"updatedTime":1713101740000,"contributors":[{"name":"DnullP","email":"dnull123p@gmail.com","commits":2}]},"readingTime":{"minutes":2.56,"words":768},"filePathRelative":"posts/operating-system/osc/OSC_5.md","localizedDate":"2024年2月2日","excerpt":"<!-- TOC -->\\n<ul>\\n<li><a href=\\"#deadlock\\">Deadlock</a></li>\\n<li><a href=\\"#deadlock-handling\\">Deadlock handling</a>\\n<ul>\\n<li><a href=\\"#deadlock-prevention\\">Deadlock Prevention</a>\\n<ul>\\n<li><a href=\\"#mutual-exclusion\\">mutual exclusion</a></li>\\n<li><a href=\\"#hold-and-wait\\">Hold and wait</a></li>\\n<li><a href=\\"#no-preemption\\">No preemption</a></li>\\n<li><a href=\\"#circular-wait\\">Circular Wait</a></li>\\n</ul>\\n</li>\\n<li><a href=\\"#deadlock-avoidance\\">Deadlock Avoidance</a>\\n<ul>\\n<li><a href=\\"#resource-allocation-graph-algorithm\\">Resource-Allocation-Graph Algorithm</a></li>\\n<li><a href=\\"#bankers-algorithm\\">Banker's Algorithm</a>\\n<ul>\\n<li><a href=\\"#safe-state\\">safe state</a></li>\\n<li><a href=\\"#bankers-algorithm-1\\">banker's algorithm</a></li>\\n</ul>\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\"#deadlock-detection\\">Deadlock Detection</a></li>\\n<li><a href=\\"#recovery-from-deadlock\\">recovery from deadlock</a></li>\\n</ul>\\n</li>\\n</ul>","autoDesc":true}`);export{R as comp,E as data};
