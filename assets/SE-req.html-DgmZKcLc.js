import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as n,f as e,e as i}from"./app-DCTCPPGQ.js";const t={},r=i('<ul><li><ol><li><a href="">过程模型</a></li></ol></li><li><ol start="2"><li><a href="#-1">过程活动者</a></li></ol></li><li><ol start="3"><li><a href="#-1">需求源</a></li></ol><ul><li>3.1. <a href="#-1">需求的交流</a></li><li>3.2. <a href="#-1">需求的优先级</a></li></ul></li><li><ol start="4"><li><a href="#-1">需求抽取的方式</a></li></ol></li><li><ol start="5"><li><a href="#-1">需求分类</a></li></ol></li><li><ol start="6"><li><a href="#-1">概念建模</a></li></ol><ul><li>6.1. <a href="#uml">如何选择合适的UML?</a></li></ul></li><li><ol start="7"><li><a href="#architecturedesignandrequirementsallocation">Architecture Design and Requirements Allocation</a></li></ol></li><li><ol start="8"><li><a href="#-1">需求协商</a></li></ol></li><li><ol start="9"><li><a href="#-1">形式分析</a></li></ol></li><li><ol start="10"><li><a href="#systemdefinitiondocument">System Definition Document</a></li></ol></li><li><ol start="11"><li><a href="#systemrequirementsspecification">System requirements specification</a></li></ol></li><li><ol start="12"><li><a href="#softwarerequirementsspecification">Software requirements specification</a></li></ol></li><li><ol start="13"><li><a href="#-1">需要执行的步骤</a></li></ol></li><li><ol start="14"><li><a href="#-1">需求过程的迭代性质</a></li></ol></li><li><ol start="15"><li><a href="#-1">需求的可追踪性</a></li></ol></li></ul>',1),s=i('<h1 id="分类" tabindex="-1"><a class="header-anchor" href="#分类"><span>分类</span></a></h1><p>软件工程中的需求我们可以大致按照以下内容分类:</p><ul><li>系统需求 <ul><li>软件需求 <ul><li>产品需求 <ul><li>功能性需求</li><li>非功能性需求</li></ul></li><li>过程需求</li></ul></li></ul></li></ul><h1 id="需求过程" tabindex="-1"><a class="header-anchor" href="#需求过程"><span>需求过程</span></a></h1><p>需求定义是软件生命周期初始化的配置(configure) 需求过程贯穿软件生命周期</p><h2 id="_1-过程模型" tabindex="-1"><a class="header-anchor" href="#_1-过程模型"><span>1. <a name=""></a>过程模型</span></a></h2><p>过程模型是整个生命周期采用的模型, 比如瀑布模型, 增量模型, 敏捷模型等</p><h2 id="_2-过程活动者" tabindex="-1"><a class="header-anchor" href="#_2-过程活动者"><span>2. <a name="-1"></a>过程活动者</span></a></h2><ul><li>需求专家</li><li>利益相关者 <ul><li>用户</li><li>客户</li><li>开发者</li><li>维护者</li><li>市场分析师(面向大市场的代理客户)</li></ul></li></ul><h1 id="需求抽取" tabindex="-1"><a class="header-anchor" href="#需求抽取"><span>需求抽取</span></a></h1><p>这一步是提取出不同的需求要素, 获得基本的需求信息</p><h2 id="_3-需求源" tabindex="-1"><a class="header-anchor" href="#_3-需求源"><span>3. <a name="-1"></a>需求源</span></a></h2><ul><li>目标 (高级别的需求, 可行性调查)</li><li>领域知识</li><li>利益相关者</li><li>商业规则</li><li>可操作环境</li><li>组织环境</li></ul><h3 id="_3-1-需求的交流" tabindex="-1"><a class="header-anchor" href="#_3-1-需求的交流"><span>3.1. <a name="-1"></a>需求的交流</span></a></h3><p>在不同的需求之间进行交流评估, 使得不同领域的专家和利益相关者能够互相沟通. 这需要一些通用的表达来有效化沟通</p><blockquote><p>A set of internally consistent model at different levels of abstraction facilitate the communication and understanding.</p></blockquote><p>也就是说我们将一个内部一致的系统, 从不同的级别和角度将其抽象出来, 使得不同的对象都能对同一个系统建立有效的理解</p><h3 id="_3-2-需求的优先级" tabindex="-1"><a class="header-anchor" href="#_3-2-需求的优先级"><span>3.2. <a name="-1"></a>需求的优先级</span></a></h3><p>我们需要明确<code>项目的范围</code></p><p>明确范围的目的是为了确定优先级, 将高优先级的任务先完成</p><p>同时保证可扩展性, 便于在后期对初期列表中没有的任务进行添加</p><h2 id="_4-需求抽取的方式" tabindex="-1"><a class="header-anchor" href="#_4-需求抽取的方式"><span>4. <a name="-1"></a>需求抽取的方式</span></a></h2><ul><li>面谈</li><li>制定场景, 然后模拟需求的场景</li><li>制造原型产品, 并进行各类评估</li><li>交流回忆</li><li>观察</li><li>用户描述</li></ul><h1 id="需求分析" tabindex="-1"><a class="header-anchor" href="#需求分析"><span>需求分析</span></a></h1><p>从不同渠道得到需求信息后, 需要进行进一步的分析</p><p>包含了:</p><ul><li>检查并解决需求间的冲突</li><li>发现需求的边界, 并阐明边界如何交互</li><li>详细阐述系统需求以能够衍生出软件需求</li></ul><h2 id="_5-需求分类" tabindex="-1"><a class="header-anchor" href="#_5-需求分类"><span>5. <a name="-1"></a>需求分类</span></a></h2><ul><li>功能性需求</li><li>非功能性需求</li></ul><hr><ul><li>从高级别衍生的需求</li><li>由相关需求源直接提出的需求</li></ul><hr><ul><li>产品需求</li><li>过程需求 (对开发方式的要求, 制定某些技术栈之类的)</li></ul><hr><ul><li>强制需求</li><li>高期待需求</li><li>期待需求</li><li>可选需求</li></ul><hr><ul><li>全局需求 (需求会影响大量软件组件)</li><li>局部需求</li></ul><hr><ul><li>稳定需求</li><li>可变需求</li></ul><h2 id="_6-概念建模" tabindex="-1"><a class="header-anchor" href="#_6-概念建模"><span>6. <a name="-1"></a>概念建模</span></a></h2><ul><li>用例图(use case diagram)</li><li>数据流模型(data flow model)</li><li>状态模型(state model)</li><li>目标模型(goal model)</li><li>用户交互模型(user interaction model)</li><li>对象模型(object model)</li><li>数据模型(data model)</li></ul><p>这些模型统称为UML(Unified Modeling Language)</p><h3 id="_6-1-如何选择合适的uml" tabindex="-1"><a class="header-anchor" href="#_6-1-如何选择合适的uml"><span>6.1. <a name="UML"></a>如何选择合适的UML?</span></a></h3><p>考虑如下的因素:</p><ol><li>问题的性质</li><li>软件工程师的经验</li><li>用户的过程需求</li></ol><blockquote><p>建立软件的需求前, 需要先建立对上下文情景的建模</p></blockquote><h2 id="_7-architecture-design-and-requirements-allocation" tabindex="-1"><a class="header-anchor" href="#_7-architecture-design-and-requirements-allocation"><span>7. <a name="ArchitectureDesignandRequirementsAllocation"></a>Architecture Design and Requirements Allocation</span></a></h2><p>架构中的不同组件满足不同的需求, 组件之间的链接交互进一步满足更多的需求</p><p>将需求分配给组件我们称为需求分配(requirements allocation), 一个独立的需求分配, 指的是一个需求对应架构中的一个组件, 而不是多个组件的连接.</p><p>对于需要在基础的需求分配给单独组件的基础上建立的futher Req, 我们可以作出相应的DAG, 作为依赖图(拓扑排序)</p><h2 id="_8-需求协商" tabindex="-1"><a class="header-anchor" href="#_8-需求协商"><span>8. <a name="-1"></a>需求协商</span></a></h2><p>目的是解决需求中的冲突</p><p>通过建立优先级来明确任务的先后</p><ul><li>cost-value方法</li><li>analytic hierarchy process(AHP)</li></ul><p>关于AHP方法或许需要单独开一篇笔记或者在其他的相关文章中记录</p><h2 id="_9-形式分析" tabindex="-1"><a class="header-anchor" href="#_9-形式分析"><span>9. <a name="-1"></a>形式分析</span></a></h2><p>通过对情景建模, 对需求进行理论证明和模型检查</p><p>一般来说形式建模会放到项目较后期进行, 形式符号的建模也需要随着需求的变化更新</p><h1 id="需求标准" tabindex="-1"><a class="header-anchor" href="#需求标准"><span>需求标准</span></a></h1><blockquote><p>A document that can be systematically reviewed, evaluated and approved.</p></blockquote><h2 id="_10-system-definition-document" tabindex="-1"><a class="header-anchor" href="#_10-system-definition-document"><span>10. <a name="SystemDefinitionDocument"></a>System Definition Document</span></a></h2><p>专业领域的高级别系统</p><p>引出DDD(Domain Driven Design)</p><h2 id="_11-system-requirements-specification" tabindex="-1"><a class="header-anchor" href="#_11-system-requirements-specification"><span>11. <a name="Systemrequirementsspecification"></a>System requirements specification</span></a></h2><p>基于系统定义, 引出系统层面的需求</p><h2 id="_12-software-requirements-specification" tabindex="-1"><a class="header-anchor" href="#_12-software-requirements-specification"><span>12. <a name="Softwarerequirementsspecification"></a>Software requirements specification</span></a></h2><p>基于系统需求, 引出软件层面的需求</p><h1 id="需求验证-validation" tabindex="-1"><a class="header-anchor" href="#需求验证-validation"><span>需求验证(Validation)</span></a></h1><p>需要保证以下几点:</p><ul><li>软件工程师能够理解</li><li>保证需求文档易于理解验证, 使用通用或广泛使用的标准术语等. 如果没有使用标准, 则需要在公司标准和广泛标准间建立映射</li></ul><h2 id="_13-需要执行的步骤" tabindex="-1"><a class="header-anchor" href="#_13-需要执行的步骤"><span>13. <a name="-1"></a>需要执行的步骤</span></a></h2><ol><li>review: 需要一群人完成</li><li>prototyping: 制作原型是验证最简单直接的方式, 但是要考虑成本和切实可行性</li><li>model validation: 进行模型验证可能需要一定程度的形式化定义</li><li>acceptance test</li></ol><h1 id="其他需要考虑的" tabindex="-1"><a class="header-anchor" href="#其他需要考虑的"><span>其他需要考虑的</span></a></h1><h2 id="_14-需求过程的迭代性质" tabindex="-1"><a class="header-anchor" href="#_14-需求过程的迭代性质"><span>14. <a name="-1"></a>需求过程的迭代性质</span></a></h2><p>如果需求是可迭代性的, 我们需要制定一条基准线(baselined)</p><p>在Req elicitation的过程中需要进行<strong>变更管理</strong></p><h2 id="_15-需求的可追踪性" tabindex="-1"><a class="header-anchor" href="#_15-需求的可追踪性"><span>15. <a name="-1"></a>需求的可追踪性</span></a></h2><p>需要做好需求的追踪</p><p>对于一个需求, 向后我们需要能够找到需求和对于的利益相关者, 向前我们要能找到架构设计中对应的部分和承担着</p>',79);function o(c,h){return a(),n("div",null,[e(" vscode-markdown-toc "),r,e(` vscode-markdown-toc-config
	numbering=true
	autoSave=true
	/vscode-markdown-toc-config `),e(" /vscode-markdown-toc "),s])}const u=l(t,[["render",o],["__file","SE-req.html.vue"]]),m=JSON.parse(`{"path":"/posts/SE/SE-req.html","title":"软件工程-需求分析","lang":"zh-CN","frontmatter":{"title":"软件工程-需求分析","tag":["需求","项目管理","软件工程"],"categories":["软件工程"],"math":true,"mermaid":true,"date":"2023-09-20T00:00:00.000Z","description":" 过程模型 过程活动者 需求源 3.1. 需求的交流 3.2. 需求的优先级 需求抽取的方式 需求分类 概念建模 6.1. 如何选择合适的UML? Architecture Design and Requirements Allocation 需求协商 形式分析 System Definition Document System requirement...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/SE/SE-req.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"软件工程-需求分析"}],["meta",{"property":"og:description","content":" 过程模型 过程活动者 需求源 3.1. 需求的交流 3.2. 需求的优先级 需求抽取的方式 需求分类 概念建模 6.1. 如何选择合适的UML? Architecture Design and Requirements Allocation 需求协商 形式分析 System Definition Document System requirement..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-14T13:35:40.000Z"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"需求"}],["meta",{"property":"article:tag","content":"项目管理"}],["meta",{"property":"article:tag","content":"软件工程"}],["meta",{"property":"article:published_time","content":"2023-09-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-14T13:35:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"软件工程-需求分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-14T13:35:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"1. 过程模型","slug":"_1-过程模型","link":"#_1-过程模型","children":[]},{"level":2,"title":"2. 过程活动者","slug":"_2-过程活动者","link":"#_2-过程活动者","children":[]},{"level":2,"title":"3. 需求源","slug":"_3-需求源","link":"#_3-需求源","children":[{"level":3,"title":"3.1. 需求的交流","slug":"_3-1-需求的交流","link":"#_3-1-需求的交流","children":[]},{"level":3,"title":"3.2. 需求的优先级","slug":"_3-2-需求的优先级","link":"#_3-2-需求的优先级","children":[]}]},{"level":2,"title":"4. 需求抽取的方式","slug":"_4-需求抽取的方式","link":"#_4-需求抽取的方式","children":[]},{"level":2,"title":"5. 需求分类","slug":"_5-需求分类","link":"#_5-需求分类","children":[]},{"level":2,"title":"6. 概念建模","slug":"_6-概念建模","link":"#_6-概念建模","children":[{"level":3,"title":"6.1. 如何选择合适的UML?","slug":"_6-1-如何选择合适的uml","link":"#_6-1-如何选择合适的uml","children":[]}]},{"level":2,"title":"7. Architecture Design and Requirements Allocation","slug":"_7-architecture-design-and-requirements-allocation","link":"#_7-architecture-design-and-requirements-allocation","children":[]},{"level":2,"title":"8. 需求协商","slug":"_8-需求协商","link":"#_8-需求协商","children":[]},{"level":2,"title":"9. 形式分析","slug":"_9-形式分析","link":"#_9-形式分析","children":[]},{"level":2,"title":"10. System Definition Document","slug":"_10-system-definition-document","link":"#_10-system-definition-document","children":[]},{"level":2,"title":"11. System requirements specification","slug":"_11-system-requirements-specification","link":"#_11-system-requirements-specification","children":[]},{"level":2,"title":"12. Software requirements specification","slug":"_12-software-requirements-specification","link":"#_12-software-requirements-specification","children":[]},{"level":2,"title":"13. 需要执行的步骤","slug":"_13-需要执行的步骤","link":"#_13-需要执行的步骤","children":[]},{"level":2,"title":"14. 需求过程的迭代性质","slug":"_14-需求过程的迭代性质","link":"#_14-需求过程的迭代性质","children":[]},{"level":2,"title":"15. 需求的可追踪性","slug":"_15-需求的可追踪性","link":"#_15-需求的可追踪性","children":[]}],"git":{"createdTime":1712936892000,"updatedTime":1713101740000,"contributors":[{"name":"DnullP","email":"dnull123p@gmail.com","commits":2}]},"readingTime":{"minutes":5.46,"words":1638},"filePathRelative":"posts/SE/SE-req.md","localizedDate":"2023年9月20日","excerpt":"<!-- vscode-markdown-toc -->\\n<ul>\\n<li>\\n<ol>\\n<li><a href=\\"\\">过程模型</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"2\\">\\n<li><a href=\\"#-1\\">过程活动者</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"3\\">\\n<li><a href=\\"#-1\\">需求源</a></li>\\n</ol>\\n<ul>\\n<li>3.1. <a href=\\"#-1\\">需求的交流</a></li>\\n<li>3.2. <a href=\\"#-1\\">需求的优先级</a></li>\\n</ul>\\n</li>\\n<li>\\n<ol start=\\"4\\">\\n<li><a href=\\"#-1\\">需求抽取的方式</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"5\\">\\n<li><a href=\\"#-1\\">需求分类</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"6\\">\\n<li><a href=\\"#-1\\">概念建模</a></li>\\n</ol>\\n<ul>\\n<li>6.1. <a href=\\"#uml\\">如何选择合适的UML?</a></li>\\n</ul>\\n</li>\\n<li>\\n<ol start=\\"7\\">\\n<li><a href=\\"#architecturedesignandrequirementsallocation\\">Architecture Design and Requirements Allocation</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"8\\">\\n<li><a href=\\"#-1\\">需求协商</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"9\\">\\n<li><a href=\\"#-1\\">形式分析</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"10\\">\\n<li><a href=\\"#systemdefinitiondocument\\">System Definition Document</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"11\\">\\n<li><a href=\\"#systemrequirementsspecification\\">System requirements specification</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"12\\">\\n<li><a href=\\"#softwarerequirementsspecification\\">Software requirements specification</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"13\\">\\n<li><a href=\\"#-1\\">需要执行的步骤</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"14\\">\\n<li><a href=\\"#-1\\">需求过程的迭代性质</a></li>\\n</ol>\\n</li>\\n<li>\\n<ol start=\\"15\\">\\n<li><a href=\\"#-1\\">需求的可追踪性</a></li>\\n</ol>\\n</li>\\n</ul>","autoDesc":true}`);export{u as comp,m as data};
