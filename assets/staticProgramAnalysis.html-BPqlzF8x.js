import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as n,c as e,e as l,a as s,b as a}from"./app-DCTCPPGQ.js";const m={},i=l('<p>本笔记是基于龙书和南京大学《软件分析》课程的学习笔记, 本文不具有教程科普的性质, 只是个人学习过程中的理解记录</p><hr><h1 id="静态程序分析" tabindex="-1"><a class="header-anchor" href="#静态程序分析"><span>静态程序分析</span></a></h1><h2 id="intermideate-representation" tabindex="-1"><a class="header-anchor" href="#intermideate-representation"><span>intermideate representation</span></a></h2><p>不同的中间表示适用于不同的静态分析</p><h2 id="reaching-definitions-analysis" tabindex="-1"><a class="header-anchor" href="#reaching-definitions-analysis"><span>Reaching Definitions Analysis</span></a></h2><ul><li><strong>Reaching Definitions(到达定值)</strong> 我们可以定值理解为任何修改一个变量的操作, 比如赋值, 自加, 函数调用等等 在程序流图中, 任何一个位置我们可以当作<strong>程序点(program point)</strong>, 能够到达这个位置产生作用的定值我们称为<strong>到达定值</strong> 一个定值会<strong>kill(杀死)</strong> 所有之前的其他相同变量的定值</li></ul><h3 id="到达定值的表示" tabindex="-1"><a class="header-anchor" href="#到达定值的表示"><span>到达定值的表示</span></a></h3><p>我们使用一个01向量来表示一个到达定值是否被杀死:</p>',9),c=s("p",null,[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mn",null,"01001010011"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"(01001010011)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"01001010011"),s("span",{class:"mclose"},")")])])])],-1),p=s("p",null,"每存在一个reaching definition就有一个01位",-1),r=s("h3",{id:"到达定值的转移方程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#到达定值的转移方程"},[s("span",null,"到达定值的转移方程")])],-1),o=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mtable",{rowspacing:"0.25em",columnalign:"right left",columnspacing:"0em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mtext",null,"in"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("munder",null,[s("mo",null,"⋃"),s("mrow",null,[s("mi",null,"p"),s("mo",null,"∈"),s("mi",null,"p"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"d"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])]),s("mtext",null,"out"),s("mo",{stretchy:"false"},"["),s("mi",null,"p"),s("mo",{stretchy:"false"},"]")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mtext",null,"out"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("mtext",null,"gen"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",null,"∪"),s("mo",{stretchy:"false"},"("),s("mtext",null,"in"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",null,"−"),s("mtext",null,"kill"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},")")])])])])]),s("annotation",{encoding:"application/x-tex"}," \\begin{aligned} \\text{in}[n] &= \\bigcup_{p \\in pred[n]} \\text{out}[p] \\\\ \\text{out}[n] &= \\text{gen}[n] \\cup (\\text{in}[n] - \\text{kill}[n]) \\end{aligned} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"4.366em","vertical-align":"-1.933em"}}),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-r"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.433em"}},[s("span",{style:{top:"-4.433em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"in")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]")])]),s("span",{style:{top:"-1.777em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"out")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.933em"}},[s("span")])])])]),s("span",{class:"col-align-l"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.433em"}},[s("span",{style:{top:"-4.433em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.05em"}},[s("span",{style:{top:"-1.809em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"p"),s("span",{class:"mrel mtight"},"∈"),s("span",{class:"mord mathnormal mtight"},"p"),s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mclose mtight"},"]")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"⋃")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.516em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"out")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mclose"},"]")])]),s("span",{style:{top:"-1.777em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"gen")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∪"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord text"},[s("span",{class:"mord"},"in")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"kill")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"])")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.933em"}},[s("span")])])])])])])])])])])],-1),h=s("p",null,"前者表示基本上一个程序点的输出是下一个程序点的输入, 多个程序点的输出取并集后作为输入",-1),g=s("p",null,"后者表示一个程序点的输出是其自身的定值加上输入中没有被杀死的定值",-1),u=s("h3",{id:"到达定值的迭代算法-iterative-algorithm",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#到达定值的迭代算法-iterative-algorithm"},[s("span",null,"到达定值的迭代算法 (Iterative Algorithm)")])],-1),d=s("p",null,[a("设定所有的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mi",null,"U"),s("mi",null,"T")]),s("annotation",{encoding:"application/x-tex"},"OUT")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T")])])]),a("为空, 然后通过转移方程对每一个基本块进行迭代, 直到所有的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"I"),s("mi",null,"N")]),s("annotation",{encoding:"application/x-tex"},"IN")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N")])])]),a("和"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mi",null,"U"),s("mi",null,"T")]),s("annotation",{encoding:"application/x-tex"},"OUT")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T")])])]),a("都不再变化")],-1),y=s("hr",null,null,-1),x=s("h2",{id:"活跃变量分析",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#活跃变量分析"},[s("span",null,"活跃变量分析")])],-1),v=s("p",null,"活跃变量分析可以看作到达定值分析的逆向版本",-1),f=s("p",null,"一个变量可以找到一条到达某个使用该变量的路径, 我们则称之为活跃变量",-1),w=s("h3",{id:"活跃变量的转移方程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#活跃变量的转移方程"},[s("span",null,"活跃变量的转移方程")])],-1),k=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mtable",{rowspacing:"0.25em",columnalign:"right left",columnspacing:"0em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mtext",null,"in"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("mtext",null,"use"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",null,"∪"),s("mo",{stretchy:"false"},"("),s("mtext",null,"out"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",null,"−"),s("mtext",null,"def"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},")")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mtext",null,"out"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("munder",null,[s("mo",null,"⋃"),s("mrow",null,[s("mi",null,"s"),s("mo",null,"∈"),s("mi",null,"s"),s("mi",null,"u"),s("mi",null,"c"),s("mi",null,"c"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])]),s("mtext",null,"in"),s("mo",{stretchy:"false"},"["),s("mi",null,"s"),s("mo",{stretchy:"false"},"]")])])])])]),s("annotation",{encoding:"application/x-tex"}," \\begin{aligned} \\text{in}[n] &= \\text{use}[n] \\cup (\\text{out}[n] - \\text{def}[n]) \\\\ \\text{out}[n] &= \\bigcup_{s \\in succ[n]} \\text{in}[s] \\end{aligned} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"4.366em","vertical-align":"-1.933em"}}),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-r"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.433em"}},[s("span",{style:{top:"-4.643em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"in")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]")])]),s("span",{style:{top:"-2.933em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"out")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.933em"}},[s("span")])])])]),s("span",{class:"col-align-l"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.433em"}},[s("span",{style:{top:"-4.643em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"use")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∪"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord text"},[s("span",{class:"mord"},"out")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"def")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"])")])]),s("span",{style:{top:"-2.933em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.05em"}},[s("span",{style:{top:"-1.809em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"s"),s("span",{class:"mrel mtight"},"∈"),s("span",{class:"mord mathnormal mtight"},"s"),s("span",{class:"mord mathnormal mtight"},"u"),s("span",{class:"mord mathnormal mtight"},"cc"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mclose mtight"},"]")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"⋃")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.516em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"in")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mclose"},"]")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.933em"}},[s("span")])])])])])])])])])])],-1),b=s("hr",null,null,-1),_=s("h2",{id:"可用表达式的分析",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#可用表达式的分析"},[s("span",null,"可用表达式的分析")])],-1),M=s("p",null,"可用表达式分析用于分析一个表达式是否在某个程序点之前已经被计算过, 如果是, 则可以直接使用之前的计算结果",-1),L=s("h3",{id:"可用表达式的转移方程",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#可用表达式的转移方程"},[s("span",null,"可用表达式的转移方程")])],-1),F=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mtable",{rowspacing:"0.25em",columnalign:"right left",columnspacing:"0em"},[s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mtext",null,"in"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("munder",null,[s("mo",null,"⋂"),s("mrow",null,[s("mi",null,"p"),s("mo",null,"∈"),s("mi",null,"p"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"d"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])]),s("mtext",null,"out"),s("mo",{stretchy:"false"},"["),s("mi",null,"p"),s("mo",{stretchy:"false"},"]")])])])]),s("mtr",null,[s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mtext",null,"out"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])])]),s("mtd",null,[s("mstyle",{scriptlevel:"0",displaystyle:"true"},[s("mrow",null,[s("mrow"),s("mo",null,"="),s("mtext",null,"gen"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",null,"∪"),s("mo",{stretchy:"false"},"("),s("mtext",null,"in"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",null,"−"),s("mtext",null,"kill"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},")")])])])])]),s("annotation",{encoding:"application/x-tex"}," \\begin{aligned} \\text{in}[n] &= \\bigcap_{p \\in pred[n]} \\text{out}[p] \\\\ \\text{out}[n] &= \\text{gen}[n] \\cup (\\text{in}[n] - \\text{kill}[n]) \\end{aligned} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"4.366em","vertical-align":"-1.933em"}}),s("span",{class:"mord"},[s("span",{class:"mtable"},[s("span",{class:"col-align-r"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.433em"}},[s("span",{style:{top:"-4.433em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"in")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]")])]),s("span",{style:{top:"-1.777em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord text"},[s("span",{class:"mord"},"out")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.933em"}},[s("span")])])])]),s("span",{class:"col-align-l"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"2.433em"}},[s("span",{style:{top:"-4.433em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.05em"}},[s("span",{style:{top:"-1.809em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"p"),s("span",{class:"mrel mtight"},"∈"),s("span",{class:"mord mathnormal mtight"},"p"),s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mclose mtight"},"]")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"⋂")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.516em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"out")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mclose"},"]")])]),s("span",{style:{top:"-1.777em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"mord"},[s("span",{class:"mord"}),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"gen")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∪"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mopen"},"("),s("span",{class:"mord text"},[s("span",{class:"mord"},"in")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"kill")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"])")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.933em"}},[s("span")])])])])])])])])])])],-1),z=s("p",null,[a("BB中的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"i"),s("mi",null,"l"),s("mi",null,"l")]),s("annotation",{encoding:"application/x-tex"},"kill")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"ki"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll")])])]),a("和"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"g"),s("mi",null,"e"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"gen")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"n")])])]),a("不变, 但是控制流的并集变成了交集, 表示只有每一条路径都有计算这个表达式, 才能在这个BB中使用这个表达式")],-1),D=s("p",null,[a("此处的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"i"),s("mi",null,"l"),s("mi",null,"l")]),s("annotation",{encoding:"application/x-tex"},"kill")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"ki"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll")])])]),a("和"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"g"),s("mi",null,"e"),s("mi",null,"n")]),s("annotation",{encoding:"application/x-tex"},"gen")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mord mathnormal"},"e"),s("span",{class:"mord mathnormal"},"n")])])]),a("和到达定值有所不同, 这里由于分析对象是表达式, 所以"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k"),s("mi",null,"i"),s("mi",null,"l"),s("mi",null,"l")]),s("annotation",{encoding:"application/x-tex"},"kill")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal"},"ki"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.01968em"}},"ll")])])]),a("一个表达式需要的是表达式中的变量被修改, 同时产生新的表达式")],-1),A=l('<hr><p>下面是对于数据流分析框架的抽象总结, 需要离散数学 (抽象代数) 的基础</p><p>为此我们依次记录以下需要掌握的关键点:</p><h2 id="数学前置" tabindex="-1"><a class="header-anchor" href="#数学前置"><span>数学前置</span></a></h2><ul><li>偏序集和全序集</li><li>对应的UB(upper bound)和LB(lower bound)</li><li>格: 任意两个元素都有上下界的偏序集</li><li>全格: 任意集合都有上下界的偏序集</li><li>半格: 任意两个元素都只有上界或者下界的偏序集</li></ul><h2 id="不动点定理" tabindex="-1"><a class="header-anchor" href="#不动点定理"><span>不动点定理</span></a></h2>',6),O=s("p",null,[a("对于一个全格, 如果存在函数"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f")]),s("annotation",{encoding:"application/x-tex"},"f")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f")])])]),a("满足:")],-1),P=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"x"),s("mo",null,"<"),s("mi",null,"y"),s("mo",null,"⇒"),s("mi",null,"f"),s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",{stretchy:"false"},")"),s("mo",null,"<"),s("mi",null,"f"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," x \\lt y \\Rightarrow f(x) \\lt f(y) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.5782em","vertical-align":"-0.0391em"}}),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"⇒"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"<"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mclose"},")")])])])])],-1),T=s("p",null,[a("那么我们称函数"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f")]),s("annotation",{encoding:"application/x-tex"},"f")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f")])])]),a("满足单调性")],-1),B=s("p",null,[a("对于一个全格我们可以得到最大下界"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"⊥")]),s("annotation",{encoding:"application/x-tex"},"\\bot")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord"},"⊥")])])]),a("和最小上界"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"normal"},"⊤")]),s("annotation",{encoding:"application/x-tex"},"\\top")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord"},"⊤")])])])],-1),R=s("p",null,[a("如果我们对这个值进行迭代, "),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"f"),s("mi",null,"k")]),s("mo",{stretchy:"false"},"("),s("mi",{mathvariant:"normal"},"⊥"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"f^k(\\bot)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0991em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k")])])])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"⊥"),s("span",{class:"mclose"},")")])])]),a("终能找到一个"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"k")]),s("annotation",{encoding:"application/x-tex"},"k")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03148em"}},"k")])])]),a("满足"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msup",null,[s("mi",null,"f"),s("mi",null,"k")]),s("mo",{stretchy:"false"},"("),s("mi",{mathvariant:"normal"},"⊥"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("msup",null,[s("mi",null,"f"),s("mrow",null,[s("mi",null,"k"),s("mo",null,"+"),s("mn",null,"1")])]),s("mo",{stretchy:"false"},"("),s("mi",{mathvariant:"normal"},"⊥"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"f^k(\\bot) = f^{k+1}(\\bot)")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0991em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k")])])])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"⊥"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.0991em","vertical-align":"-0.25em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8491em"}},[s("span",{style:{top:"-3.063em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03148em"}},"k"),s("span",{class:"mbin mtight"},"+"),s("span",{class:"mord mtight"},"1")])])])])])])])]),s("span",{class:"mopen"},"("),s("span",{class:"mord"},"⊥"),s("span",{class:"mclose"},")")])])]),a(", 我们称这个值为不动点")],-1),N=l(`<h2 id="程序状态可以看作半格" tabindex="-1"><a class="header-anchor" href="#程序状态可以看作半格"><span>程序状态可以看作半格</span></a></h2><p>首先我们以到达定值为例子, 到达定值的程序状态是集合, 集合间存在偏序关系, 我们可以将其进一步抽象为半格:</p><div class="language-Mermaid line-numbers-mode" data-ext="Mermaid" data-title="Mermaid"><pre class="language-Mermaid"><code>graph TD
    A[1,2,3] --&gt; B[1,2]
    A[1,2,3] --&gt; C[1,3]
    A[1,2,3] --&gt; D[2,3]
    B[1,2] --&gt; E[1]
    B[1,2] --&gt; F[2]
    C[1,3] --&gt; G[1]
    C[1,3] --&gt; H[3]
    D[2,3] --&gt; I[2]
    D[2,3] --&gt; J[3]
    E --&gt; K[ ]
    F --&gt; K[ ]
    G --&gt; K[ ]
    H --&gt; K[ ]
    I --&gt; K[ ]
    J --&gt; K[ ]

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),C=s("p",null,[a("按照上面的图例, 我们对于一个函数"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f")]),s("annotation",{encoding:"application/x-tex"},"f")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f")])])]),a("满足单调性, 则对于"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"f"),s("mo",{stretchy:"false"},"("),s("mo",{stretchy:"false"},"{"),s("mn",null,"1"),s("mo",{separator:"true"},","),s("mn",null,"2"),s("mo",{separator:"true"},","),s("mn",null,"3"),s("mo",{stretchy:"false"},"}"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"},"f(\\{1,2,3\\})")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"({"),s("span",{class:"mord"},"1"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"2"),s("span",{class:"mpunct"},","),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"3"),s("span",{class:"mclose"},"})")])])]),a("总能找到一个不动点")],-1),I=s("p",null,"所以迭代算法终会收敛",-1),U=s("h2",{id:"mop-meet-over-all-paths-solution",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mop-meet-over-all-paths-solution"},[s("span",null,"MOP(Meet-Over-All-Paths solution)")])],-1),K=s("p",null,"这种算法和迭代算法不太一样",-1),S=s("p",null,"迭代算法每次迭代对全部节点进行更新, 直到没有节点改变为止, 但是MOP算法每次迭代只对一个节点进行更新, 直到所有节点都更新完毕",-1),E=s("p",null,"具体来说, MOP算法会计算出到达一个节点的所有路径, 并将结果进行meet操作",-1),J=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mtext",null,"out"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mi",null,[s("munder",null,[s("mo",null,[s("mo",null,[s("mo",null,"⋂"),s("mi",{mathvariant:"normal"},"/"),s("mo",null,"⋃")])]),s("mrow",null,[s("mi",null,"p"),s("mo",null,"∈"),s("mi",null,"p"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"d"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]")])])]),s("mi",null,"F"),s("mo",{stretchy:"false"},"("),s("mtext",null,"in"),s("mo",{stretchy:"false"},"["),s("mi",null,"p"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," \\text{out}[n] = \\underset{p \\in pred[n]}{\\mathop{\\bigcap / \\bigcup}} F(\\text{in}[p]) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"out")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.566em","vertical-align":"-1.516em"}}),s("span",{class:"mord"},[s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.05em"}},[s("span",{style:{top:"-1.809em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"p"),s("span",{class:"mrel mtight"},"∈"),s("span",{class:"mord mathnormal mtight"},"p"),s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mclose mtight"},"]")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop"},[s("span",{class:"mop"},[s("span",{class:"mop op-symbol large-op",style:{position:"relative",top:"0em"}},"⋂"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},"/"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop op-symbol large-op",style:{position:"relative",top:"0em"}},"⋃")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.516em"}},[s("span")])])])])]),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mopen"},"("),s("span",{class:"mord text"},[s("span",{class:"mord"},"in")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mclose"},"])")])])])])],-1),V=s("p",null,"将每个到达该程序点的路径进行meet操作, 得到该程序点的输出",-1),Z=s("p",null,"迭代算法和MOP算法的区别可以用下面的式子理解:",-1),G=s("p",null,"迭代算法:",-1),H=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mtext",null,"out"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mi",null,"F"),s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",null,"∪"),s("mi",null,"y"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," \\text{out}[n] = F(x \\cup y) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"out")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∪"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mclose"},")")])])])])],-1),j=s("p",null,"MOP算法:",-1),q=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mtext",null,"out"),s("mo",{stretchy:"false"},"["),s("mi",null,"n"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mi",null,"F"),s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",{stretchy:"false"},")"),s("mo",null,"∪"),s("mi",null,"F"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," \\text{out}[n] = F(x) \\cup F(y) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"out")]),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"n"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∪"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mclose"},")")])])])])],-1),Q=s("p",null,[a("这就要求函数"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"F")]),s("annotation",{encoding:"application/x-tex"},"F")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F")])])]),a("满足可分配性:")],-1),W=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"F"),s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",null,"∪"),s("mi",null,"y"),s("mo",{stretchy:"false"},")"),s("mo",null,"="),s("mi",null,"F"),s("mo",{stretchy:"false"},"("),s("mi",null,"x"),s("mo",{stretchy:"false"},")"),s("mo",null,"∪"),s("mi",null,"F"),s("mo",{stretchy:"false"},"("),s("mi",null,"y"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," F(x \\cup y) = F(x) \\cup F(y) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∪"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal"},"x"),s("span",{class:"mclose"},")"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"∪"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"F"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"y"),s("span",{class:"mclose"},")")])])])])],-1),X=s("p",null,"然而不是所有的数据流分析框架都有这个性质, 常量传播框架就不存在此性质",-1),Y=s("hr",null,null,-1),$=s("h2",{id:"常量传播",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#常量传播"},[s("span",null,"常量传播")])],-1),ss=s("p",null,"TODO",-1),as=[i,c,p,r,o,h,g,u,d,y,x,v,f,w,k,b,_,M,L,F,z,D,A,O,P,T,B,R,N,C,I,U,K,S,E,J,V,Z,G,H,j,q,Q,W,X,Y,$,ss];function ls(ts,ns){return n(),e("div",null,as)}const is=t(m,[["render",ls],["__file","staticProgramAnalysis.html.vue"]]),cs=JSON.parse(`{"path":"/posts/CS/compiler/staticProgramAnalysis.html","title":"静态程序分析","lang":"zh-CN","frontmatter":{"title":"静态程序分析","tag":["compiler","静态分析","代码优化"],"categories":["compiler"],"math":true,"mermaid":true,"date":"2023-07-21T00:00:00.000Z","description":"本笔记是基于龙书和南京大学《软件分析》课程的学习笔记, 本文不具有教程科普的性质, 只是个人学习过程中的理解记录 静态程序分析 intermideate representation 不同的中间表示适用于不同的静态分析 Reaching Definitions Analysis Reaching Definitions(到达定值) 我们可以定值理解为任...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/CS/compiler/staticProgramAnalysis.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"静态程序分析"}],["meta",{"property":"og:description","content":"本笔记是基于龙书和南京大学《软件分析》课程的学习笔记, 本文不具有教程科普的性质, 只是个人学习过程中的理解记录 静态程序分析 intermideate representation 不同的中间表示适用于不同的静态分析 Reaching Definitions Analysis Reaching Definitions(到达定值) 我们可以定值理解为任..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"compiler"}],["meta",{"property":"article:tag","content":"静态分析"}],["meta",{"property":"article:tag","content":"代码优化"}],["meta",{"property":"article:published_time","content":"2023-07-21T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"静态程序分析\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-21T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"intermideate representation","slug":"intermideate-representation","link":"#intermideate-representation","children":[]},{"level":2,"title":"Reaching Definitions Analysis","slug":"reaching-definitions-analysis","link":"#reaching-definitions-analysis","children":[{"level":3,"title":"到达定值的表示","slug":"到达定值的表示","link":"#到达定值的表示","children":[]},{"level":3,"title":"到达定值的转移方程","slug":"到达定值的转移方程","link":"#到达定值的转移方程","children":[]},{"level":3,"title":"到达定值的迭代算法 (Iterative Algorithm)","slug":"到达定值的迭代算法-iterative-algorithm","link":"#到达定值的迭代算法-iterative-algorithm","children":[]}]},{"level":2,"title":"活跃变量分析","slug":"活跃变量分析","link":"#活跃变量分析","children":[{"level":3,"title":"活跃变量的转移方程","slug":"活跃变量的转移方程","link":"#活跃变量的转移方程","children":[]}]},{"level":2,"title":"可用表达式的分析","slug":"可用表达式的分析","link":"#可用表达式的分析","children":[{"level":3,"title":"可用表达式的转移方程","slug":"可用表达式的转移方程","link":"#可用表达式的转移方程","children":[]}]},{"level":2,"title":"数学前置","slug":"数学前置","link":"#数学前置","children":[]},{"level":2,"title":"不动点定理","slug":"不动点定理","link":"#不动点定理","children":[]},{"level":2,"title":"程序状态可以看作半格","slug":"程序状态可以看作半格","link":"#程序状态可以看作半格","children":[]},{"level":2,"title":"MOP(Meet-Over-All-Paths solution)","slug":"mop-meet-over-all-paths-solution","link":"#mop-meet-over-all-paths-solution","children":[]},{"level":2,"title":"常量传播","slug":"常量传播","link":"#常量传播","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":4.56,"words":1367},"filePathRelative":"posts/CS/compiler/staticProgramAnalysis.md","localizedDate":"2023年7月21日","excerpt":"<p>本笔记是基于龙书和南京大学《软件分析》课程的学习笔记, 本文不具有教程科普的性质, 只是个人学习过程中的理解记录</p>\\n<hr>\\n<h1>静态程序分析</h1>\\n<h2>intermideate representation</h2>\\n<p>不同的中间表示适用于不同的静态分析</p>\\n<h2>Reaching Definitions Analysis</h2>\\n<ul>\\n<li><strong>Reaching Definitions(到达定值)</strong>\\n我们可以定值理解为任何修改一个变量的操作, 比如赋值, 自加, 函数调用等等\\n在程序流图中, 任何一个位置我们可以当作<strong>程序点(program point)</strong>, 能够到达这个位置产生作用的定值我们称为<strong>到达定值</strong>\\n一个定值会<strong>kill(杀死)</strong> 所有之前的其他相同变量的定值</li>\\n</ul>","autoDesc":true}`);export{is as comp,cs as data};
