import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,e as a}from"./app-DCTCPPGQ.js";const r={},l=a('<h1 id="段式内存管理" tabindex="-1"><a class="header-anchor" href="#段式内存管理"><span>段式内存管理</span></a></h1><h2 id="段" tabindex="-1"><a class="header-anchor" href="#段"><span>段</span></a></h2><p>进程的虚拟内存空间是这样的(简化版):</p><table><thead><tr><th style="text-align:center;">代码段</th><th style="text-align:center;">堆</th><th style="text-align:center;">空闲内存</th><th style="text-align:center;">栈</th></tr></thead></table><p>其中的空闲内存不能占用物理内存空间, 所以我们考虑把进程的内存分成<strong>段</strong>(segment), 进程的内存将在物理内存中以段为单位分布</p><p>为了在段式分布的内存管理下完成内存翻译, 我们需要以下的信息:</p><ul><li>段表: 参考之前说过的页表, 也是储存在内存中, 一个进程拥有一个的地址查找表, 但是记录的是进程分段的地址</li><li>段号: 说明段是哪一个段, 从而在段表中查询到该段的基地址</li><li>偏移量: 地址的段内偏移</li></ul><p>整个过程也和分页查询很相似:</p><ul><li><p>首先段式内存管理的内存地址如下:</p><table><thead><tr><th style="text-align:center;">段号</th><th style="text-align:center;">偏移量</th></tr></thead></table></li><li><p>然后CPU也有一个对应基址寄存器, 用来指向当前进程的段表, 我们用段号查询段表中的基址, 然后返回MMU</p></li><li><p>使用的得到的基址, 加上偏移量即可得到物理地址</p></li></ul><hr><p>段式内存管理系统已经被淘汰了, 在linux系统中的段基址都被设置为了0, 所以段只被用于进程的保护和权限控制, 而不再用于内存管理</p><p>为此, 段地址的会加上权限位, 搭配硬件的支持可以对不同的段进行不同的权限控制</p><p>段式内存也引发了<strong>内存碎片</strong>问题, 相关的说明和解决不在本章的讨论范围之内</p>',13),o=[l];function i(p,s){return e(),n("div",null,o)}const m=t(r,[["render",i],["__file","CH1-Segmentation.html.vue"]]),g=JSON.parse(`{"path":"/posts/operating-system/ostep/CH1-Segmentation.html","title":"段式内存管理","lang":"zh-CN","frontmatter":{"date":"2021-01-01T00:00:00.000Z","title":"段式内存管理","tag":["operating-system","计算机系统","内存管理","段式内存管理","段式内存"],"categories":["操作系统","Three-Easy-Pieces"],"math":true,"description":"段式内存管理 段 进程的虚拟内存空间是这样的(简化版): 其中的空闲内存不能占用物理内存空间, 所以我们考虑把进程的内存分成段(segment), 进程的内存将在物理内存中以段为单位分布 为了在段式分布的内存管理下完成内存翻译, 我们需要以下的信息: 段表: 参考之前说过的页表, 也是储存在内存中, 一个进程拥有一个的地址查找表, 但是记录的是进程分段...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/operating-system/ostep/CH1-Segmentation.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"段式内存管理"}],["meta",{"property":"og:description","content":"段式内存管理 段 进程的虚拟内存空间是这样的(简化版): 其中的空闲内存不能占用物理内存空间, 所以我们考虑把进程的内存分成段(segment), 进程的内存将在物理内存中以段为单位分布 为了在段式分布的内存管理下完成内存翻译, 我们需要以下的信息: 段表: 参考之前说过的页表, 也是储存在内存中, 一个进程拥有一个的地址查找表, 但是记录的是进程分段..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-14T13:35:40.000Z"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"operating-system"}],["meta",{"property":"article:tag","content":"计算机系统"}],["meta",{"property":"article:tag","content":"内存管理"}],["meta",{"property":"article:tag","content":"段式内存管理"}],["meta",{"property":"article:tag","content":"段式内存"}],["meta",{"property":"article:published_time","content":"2021-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-14T13:35:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"段式内存管理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-14T13:35:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"段","slug":"段","link":"#段","children":[]}],"git":{"createdTime":1712936892000,"updatedTime":1713101740000,"contributors":[{"name":"DnullP","email":"dnull123p@gmail.com","commits":2}]},"readingTime":{"minutes":1.52,"words":457},"filePathRelative":"posts/operating-system/ostep/CH1-Segmentation.md","localizedDate":"2021年1月1日","excerpt":"\\n<h2>段</h2>\\n<p>进程的虚拟内存空间是这样的(简化版):</p>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:center\\">代码段</th>\\n<th style=\\"text-align:center\\">堆</th>\\n<th style=\\"text-align:center\\">空闲内存</th>\\n<th style=\\"text-align:center\\">栈</th>\\n</tr>\\n</thead>\\n</table>\\n<p>其中的空闲内存不能占用物理内存空间, 所以我们考虑把进程的内存分成<strong>段</strong>(segment), 进程的内存将在物理内存中以段为单位分布</p>","autoDesc":true}`);export{m as comp,g as data};
