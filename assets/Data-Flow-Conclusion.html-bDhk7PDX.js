import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as l,c as e,e as n,a as s,b as a}from"./app-DCTCPPGQ.js";const m={},i=n(`<p>由于是理解和心得是会随着时间的变化而改变的, 本文只是初学时的想法整理</p><h2 id="about-program-state" tabindex="-1"><a class="header-anchor" href="#about-program-state"><span>About program state</span></a></h2><p>程序状态包括了运行时栈和堆, 寄存器等储存设备, 所有的数据信息的总和构成了程序某一时刻的状态</p><p>每一段的intermediate-code statement都会对程序状态产生影响, 我们可以看作一个将状态输入, 输出为新状态的函数:</p><div class="language-Mermaid line-numbers-mode" data-ext="Mermaid" data-title="Mermaid"><pre class="language-Mermaid"><code>graph LR
A((state 1)) --&gt; B[code]
B --&gt; C((state 2))
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),r=s("p",null,[a("其中的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"t"),s("msub",null,[s("mi",null,"e"),s("mn",null,"1")])]),s("annotation",{encoding:"application/x-tex"},"state_1")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"e"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("和"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("mi",null,"s"),s("mi",null,"t"),s("mi",null,"a"),s("mi",null,"t"),s("msub",null,[s("mi",null,"e"),s("mn",null,"2")])]),s("annotation",{encoding:"application/x-tex"},"state_2")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.7651em","vertical-align":"-0.15em"}}),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord mathnormal"},"a"),s("span",{class:"mord mathnormal"},"t"),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"e"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3011em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("的位置我们都可以看作一个program point")],-1),o=s("p",null,"我们只从状态的众多要素中提取其中我们关注的那一部分, 来作为我们的数据流分析的对象",-1),p=s("p",null,"我们将这些状态抽象为data-flow value:",-1),c=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mi",null,"U"),s("mi",null,"T"),s("mo",{stretchy:"false"},"["),s("mi",null,"s"),s("mo",{stretchy:"false"},"]"),s("mspace",{linebreak:"newline"}),s("mi",null,"I"),s("mi",null,"N"),s("mo",{stretchy:"false"},"["),s("mi",null,"s"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"}," OUT[s] \\\\ IN[s] ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mclose"},"]")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mclose"},"]")])])])])],-1),h=s("p",null,"对于每个statement, 我们为其抽象出一个transfer function(转移函数)来表达状态的改变:",-1),g=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mi",null,"U"),s("mi",null,"T"),s("mo",{stretchy:"false"},"["),s("mi",null,"s"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mi",null,"f"),s("mo",{stretchy:"false"},"("),s("mi",null,"I"),s("mi",null,"N"),s("mo",{stretchy:"false"},"["),s("mi",null,"s"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},")"),s("mspace",{linebreak:"newline"}),s("mi",null,"I"),s("mi",null,"N"),s("mo",{stretchy:"false"},"["),s("mi",null,"s"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("mi",null,"g"),s("mo",{stretchy:"false"},"("),s("mi",null,"O"),s("mi",null,"U"),s("mi",null,"T"),s("mo",{stretchy:"false"},"["),s("mi",null,"s"),s("mo",{stretchy:"false"},"]"),s("mo",{stretchy:"false"},")")]),s("annotation",{encoding:"application/x-tex"}," OUT[s] = f(IN[s])\\\\ IN[s] = g(OUT[s]) ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10764em"}},"f"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mclose"},"])")]),s("span",{class:"mspace newline"}),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.03588em"}},"g"),s("span",{class:"mopen"},"("),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mclose"},"])")])])])])],-1),u=s("p",null,"前者我们称为正向分析, 后者我们称为逆向分析",-1),d=s("p",null,"如果产生了多个输出作为一个输入的路径的话, 我们需要根据具体的情况选择处理方式. 一般而言, 我们可以使用求并的方式来直接合并状态:",-1),y=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",null,"O"),s("mi",null,"U"),s("mi",null,"T"),s("mo",{stretchy:"false"},"["),s("mi",null,"s"),s("mo",{stretchy:"false"},"]"),s("mo",null,"="),s("munder",null,[s("mo",null,"⋃"),s("mrow",null,[s("mi",null,"p"),s("mo",null,"∈"),s("mi",null,"p"),s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"d"),s("mo",{stretchy:"false"},"["),s("mi",null,"s"),s("mo",{stretchy:"false"},"]")])]),s("mi",null,"I"),s("mi",null,"N"),s("mo",{stretchy:"false"},"["),s("mi",null,"p"),s("mo",{stretchy:"false"},"]")]),s("annotation",{encoding:"application/x-tex"}," OUT[s] = \\bigcup_{p \\in pred[s]} IN[p] ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1em","vertical-align":"-0.25em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"O"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"U"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.13889em"}},"T"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"s"),s("span",{class:"mclose"},"]"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"2.566em","vertical-align":"-1.516em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.05em"}},[s("span",{style:{top:"-1.809em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"p"),s("span",{class:"mrel mtight"},"∈"),s("span",{class:"mord mathnormal mtight"},"p"),s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mopen mtight"},"["),s("span",{class:"mord mathnormal mtight"},"s"),s("span",{class:"mclose mtight"},"]")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"⋃")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.516em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.07847em"}},"I"),s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"mopen"},"["),s("span",{class:"mord mathnormal"},"p"),s("span",{class:"mclose"},"]")])])])])],-1),v=s("p",null,[a("只关注每个程序点"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"p"),s("mi",null,"i")])]),s("annotation",{encoding:"application/x-tex"},"p_i")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.625em","vertical-align":"-0.1944em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal"},"p"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3117em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight"},"i")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])]),a("的话, 我们一般将其理解为所谓的"),s("strong",null,"数据流"),a(" 而转移方程以及BB(basic block)我们可以理解为控制流的一部分")],-1),x=s("p",null,"准确来说, 控制流是程序执行的走向, 而数据流是数据的传递和改变走向",-1),b=[i,r,o,p,c,h,g,u,d,y,v,x];function _(f,w){return l(),e("div",null,b)}const T=t(m,[["render",_],["__file","Data-Flow-Conclusion.html.vue"]]),N=JSON.parse(`{"path":"/posts/essay/Data-Flow-Conclusion.html","title":"对数据流分析的一点理解总结","lang":"zh-CN","frontmatter":{"title":"对数据流分析的一点理解总结","tag":["数据流分析","compiler","代码优化"],"categories":["随笔","编译原理"],"mathjax":true,"mermaid":true,"date":"2023-07-21T00:00:00.000Z","description":"由于是理解和心得是会随着时间的变化而改变的, 本文只是初学时的想法整理 About program state 程序状态包括了运行时栈和堆, 寄存器等储存设备, 所有的数据信息的总和构成了程序某一时刻的状态 每一段的intermediate-code statement都会对程序状态产生影响, 我们可以看作一个将状态输入, 输出为新状态的函数: 其中的...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/essay/Data-Flow-Conclusion.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"对数据流分析的一点理解总结"}],["meta",{"property":"og:description","content":"由于是理解和心得是会随着时间的变化而改变的, 本文只是初学时的想法整理 About program state 程序状态包括了运行时栈和堆, 寄存器等储存设备, 所有的数据信息的总和构成了程序某一时刻的状态 每一段的intermediate-code statement都会对程序状态产生影响, 我们可以看作一个将状态输入, 输出为新状态的函数: 其中的..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"数据流分析"}],["meta",{"property":"article:tag","content":"compiler"}],["meta",{"property":"article:tag","content":"代码优化"}],["meta",{"property":"article:published_time","content":"2023-07-21T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"对数据流分析的一点理解总结\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-07-21T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"About program state","slug":"about-program-state","link":"#about-program-state","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.51,"words":454},"filePathRelative":"posts/essay/Data-Flow-Conclusion.md","localizedDate":"2023年7月21日","excerpt":"<p>由于是理解和心得是会随着时间的变化而改变的, 本文只是初学时的想法整理</p>\\n<h2>About program state</h2>\\n<p>程序状态包括了运行时栈和堆, 寄存器等储存设备, 所有的数据信息的总和构成了程序某一时刻的状态</p>\\n<p>每一段的intermediate-code statement都会对程序状态产生影响, 我们可以看作一个将状态输入, 输出为新状态的函数:</p>\\n<div class=\\"language-Mermaid\\" data-ext=\\"Mermaid\\" data-title=\\"Mermaid\\"><pre class=\\"language-Mermaid\\"><code>graph LR\\nA((state 1)) --&gt; B[code]\\nB --&gt; C((state 2))\\n</code></pre></div>","autoDesc":true}`);export{T as comp,N as data};
