import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as a,o as n,c as l,d as o,e as r,a as e}from"./app-DCTCPPGQ.js";const s={},d=r('<p>此处记录一个硬件中解决cache coherence(缓存一致性)的机制: MESI</p><h1 id="缓存行" tabindex="-1"><a class="header-anchor" href="#缓存行"><span>缓存行</span></a></h1><p>缓存行是缓存中的最小单位, 一般为64字节, 也就是16个int</p><h1 id="mesi" tabindex="-1"><a class="header-anchor" href="#mesi"><span>MESI</span></a></h1><ul><li>modified</li><li>exclusive</li><li>shared</li><li>invalid</li></ul><p>这四个单词代表了缓存行的四种状态</p><h2 id="modified" tabindex="-1"><a class="header-anchor" href="#modified"><span>modified</span></a></h2><p>状态M表示数据只存在于当前的缓存行中, 并且已经被修改过</p><h2 id="exclusive" tabindex="-1"><a class="header-anchor" href="#exclusive"><span>exclusive</span></a></h2><p>状态E表示数据被当前缓存行独占, 但是没有修改过</p><h2 id="shared" tabindex="-1"><a class="header-anchor" href="#shared"><span>shared</span></a></h2><p>状态S表示数据在多个缓存行中使用, 并且未被修改</p><h2 id="invalid" tabindex="-1"><a class="header-anchor" href="#invalid"><span>invalid</span></a></h2><p>表示缓存行数据无效, 可以被新数据占用</p><h1 id="状态转换" tabindex="-1"><a class="header-anchor" href="#状态转换"><span>状态转换</span></a></h1>',15),c=e("p",null,"M态的缓存行, 需要在其他缓存行读取数据时, 将数据写回内存, 然后转换为S态, 如果其他缓存行将数据写入, 则转换为I态",-1),p=e("p",null,"S态的缓存行, 在远程写入时无效化, 在修改时变为M",-1),h=e("p",null,"I态的缓存行, 在本地读取时变为E或者S, 在本地写入时变为M",-1),m=e("p",null,"E态的缓存行, 在本地写入时变为M, 在远程读取时变为S, 在远程写入时变为I",-1),u=e("p",null,"缓存之间通过一条总线感知其他缓存的写入和读取",-1);function f(v,M){const t=a("Mermaid");return n(),l("div",null,[d,o(t,{id:"mermaid-64",code:"eJxLy8kvT85ILCrh8o3OzU/JTMtMTYnlCo4uBoqBWJ7RmXlliTmZQKZrdGpFck5pcWZZaiwXl6+Crq5dzYv9c56v6H6xfvfT/mk1CsEook/bZj5tXVqj4AkVfTZnzdM5G2BqfVFEYWp9ubiCsRqMLIowGCKKajBMLYbBnlgUu2IVDUYRRTLCFasRyKIIxRBRdH8giyL8wcUFALn+umI="}),c,p,h,m,u])}const S=i(s,[["render",f],["__file","MESI.html.vue"]]),x=JSON.parse(`{"path":"/posts/CS/PC_oranization/MESI.html","title":"MESI机制","lang":"zh-CN","frontmatter":{"title":"MESI机制","tags":["operating-system","OS","缓存","计组原理"],"categories":["computer organization"],"math":true,"mermaid":true,"date":"2023-09-15T00:00:00.000Z","description":"此处记录一个硬件中解决cache coherence(缓存一致性)的机制: MESI 缓存行 缓存行是缓存中的最小单位, 一般为64字节, 也就是16个int MESI modified exclusive shared invalid 这四个单词代表了缓存行的四种状态 modified 状态M表示数据只存在于当前的缓存行中, 并且已经被修改过 exc...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/CS/PC_oranization/MESI.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"MESI机制"}],["meta",{"property":"og:description","content":"此处记录一个硬件中解决cache coherence(缓存一致性)的机制: MESI 缓存行 缓存行是缓存中的最小单位, 一般为64字节, 也就是16个int MESI modified exclusive shared invalid 这四个单词代表了缓存行的四种状态 modified 状态M表示数据只存在于当前的缓存行中, 并且已经被修改过 exc..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"operating-system"}],["meta",{"property":"article:tag","content":"OS"}],["meta",{"property":"article:tag","content":"缓存"}],["meta",{"property":"article:tag","content":"计组原理"}],["meta",{"property":"article:published_time","content":"2023-09-15T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MESI机制\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-09-15T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"modified","slug":"modified","link":"#modified","children":[]},{"level":2,"title":"exclusive","slug":"exclusive","link":"#exclusive","children":[]},{"level":2,"title":"shared","slug":"shared","link":"#shared","children":[]},{"level":2,"title":"invalid","slug":"invalid","link":"#invalid","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":1.48,"words":445},"filePathRelative":"posts/CS/PC_oranization/MESI.md","localizedDate":"2023年9月15日","excerpt":"<p>此处记录一个硬件中解决cache coherence(缓存一致性)的机制: MESI</p>\\n<h1>缓存行</h1>\\n<p>缓存行是缓存中的最小单位, 一般为64字节, 也就是16个int</p>\\n<h1>MESI</h1>\\n<ul>\\n<li>modified</li>\\n<li>exclusive</li>\\n<li>shared</li>\\n<li>invalid</li>\\n</ul>\\n<p>这四个单词代表了缓存行的四种状态</p>\\n<h2>modified</h2>\\n<p>状态M表示数据只存在于当前的缓存行中, 并且已经被修改过</p>\\n<h2>exclusive</h2>\\n<p>状态E表示数据被当前缓存行独占, 但是没有修改过</p>","autoDesc":true}`);export{S as comp,x as data};
