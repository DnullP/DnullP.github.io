import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as t,o,c as p,a as n,d as l,w as c,b as s,f as i,e as r}from"./app-DCTCPPGQ.js";const d={},u=n("h1",{id:"显性转换或隐性转换",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#显性转换或隐性转换"},[n("span",null,"显性转换或隐性转换")])],-1),m=n("h2",{id:"隐性转换",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#隐性转换"},[n("span",null,"隐性转换")])],-1),k=r(`<div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> a<span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">long</span></span> b<span class="token punctuation">;</span>
b <span class="token operator">=</span> a<span class="token punctuation">;</span><span class="token comment">//long 类型自动转化成int</span>

<span class="token keyword">class</span> <span class="token class-name">A</span><span class="token punctuation">{</span>

<span class="token punctuation">}</span>

<span class="token keyword">class</span> <span class="token class-name">B</span><span class="token punctuation">:</span><span class="token type-list"><span class="token class-name">A</span></span><span class="token punctuation">{</span>

<span class="token punctuation">}</span>
<span class="token class-name">A</span> a_1 <span class="token operator">=</span> <span class="token keyword">new</span> B<span class="token punctuation">;</span><span class="token comment">//B子类自动转化成A父类</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="显性转换" tabindex="-1"><a class="header-anchor" href="#显性转换"><span>显性转换</span></a></h2><ul><li>显性转换即为强制转换</li></ul><p>类的强制转换：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name">Class1</span> c11 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token constructor-invocation class-name">Class1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name">Class2</span> c22 <span class="token operator">=</span> c11 <span class="token keyword">as</span> <span class="token class-name">Class2</span><span class="token punctuation">;</span> <span class="token comment">//使用as进行显式转换</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>几种强制转换方式：</p><div class="language-csharp line-numbers-mode" data-ext="cs" data-title="cs"><pre class="language-csharp"><code><span class="token class-name"><span class="token keyword">int</span></span> a <span class="token operator">=</span> <span class="token keyword">int</span><span class="token punctuation">.</span><span class="token function">Parse</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span></span> a <span class="token operator">=</span> Convert<span class="token punctuation">.</span><span class="token function">ToInt32</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token class-name"><span class="token keyword">int</span></span> a <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>b<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,7);function v(h,g){const a=t("Badge");return o(),p("div",null,[u,m,n("ul",null,[n("li",null,[l(a,{type:"danger"},{default:c(()=>[s("中的隐性转换自动为安全转换")]),_:1}),s("换，即小容量转化为大容量，子类转化为父类")])]),i(" more "),k])}const _=e(d,[["render",v],["__file","TwoKingofConversion.html.vue"]]),C=JSON.parse(`{"path":"/posts/program-language/Csharp/TwoKingofConversion.html","title":"C#的显性和隐性转换","lang":"zh-CN","frontmatter":{"date":"2021-01-01T00:00:00.000Z","title":"C#的显性和隐性转换","tag":["语法","特性","c#"],"categories":["C#学习记录"],"mathjax":true,"description":"显性转换或隐性转换 隐性转换 换，即小容量转化为大容量，子类转化为父类 显性转换 显性转换即为强制转换 类的强制转换： 几种强制转换方式： ","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/program-language/Csharp/TwoKingofConversion.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"C#的显性和隐性转换"}],["meta",{"property":"og:description","content":"显性转换或隐性转换 隐性转换 换，即小容量转化为大容量，子类转化为父类 显性转换 显性转换即为强制转换 类的强制转换： 几种强制转换方式： "}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"语法"}],["meta",{"property":"article:tag","content":"特性"}],["meta",{"property":"article:tag","content":"c#"}],["meta",{"property":"article:published_time","content":"2021-01-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"C#的显性和隐性转换\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-01-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"隐性转换","slug":"隐性转换","link":"#隐性转换","children":[]},{"level":2,"title":"显性转换","slug":"显性转换","link":"#显性转换","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.57,"words":170},"filePathRelative":"posts/program-language/Csharp/TwoKingofConversion.md","localizedDate":"2021年1月1日","excerpt":"\\n<h2>隐性转换</h2>\\n<ul>\\n<li>换，即小容量转化为大容量，子类转化为父类</li>\\n</ul>\\n","autoDesc":true}`);export{_ as comp,C as data};
