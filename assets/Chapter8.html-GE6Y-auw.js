import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as e,c as n,e as a}from"./app-DCTCPPGQ.js";const r={},o=a('<h2 id="信号" tabindex="-1"><a class="header-anchor" href="#信号"><span>信号</span></a></h2><p>该部分暂时只记录信号部分，作为比较重要且难懂的一个内容</p><p><strong>反思</strong>： 首先，我们先不用纠结信号的具体实现方式，其表示的含义就是一条小信息，用来告诉进程发生了什么事 进程是系统内核向进程发送的信息，就算是其他进程发出的信号也是经过内核再发出的</p><h4 id="发送信号" tabindex="-1"><a class="header-anchor" href="#发送信号"><span>发送信号</span></a></h4><p>内核可以通过改变进程上下文（context）中的某些信息，来表示信号的发送 发送信号有以下两种原因：</p><ul><li>内核检测到的系统事件</li><li>一个进程调用某些函数，显式地要求内核发送信号</li></ul><h4 id="处理信号" tabindex="-1"><a class="header-anchor" href="#处理信号"><span>处理信号</span></a></h4><p>接收信号的进程在从内核模式切换到用户模式时，会检查进程的未被阻塞的信号的集合，并操控逻辑流去处理对应的信号（调用信号处理程序）</p>',8),p=[o];function l(i,s){return e(),n("div",null,p)}const d=t(r,[["render",l],["__file","Chapter8.html.vue"]]),m=JSON.parse(`{"path":"/posts/CS/CSAPP-notes/Chapter8.html","title":"异常控制流","lang":"zh-CN","frontmatter":{"date":"2021-01-01T00:00:00.000Z","title":"异常控制流","tag":["operating-system","计算机系统","异常控制流"],"categories":["CSAPP学习笔记"],"mathjax":true,"render_drafts":true,"description":"信号 该部分暂时只记录信号部分，作为比较重要且难懂的一个内容 反思： 首先，我们先不用纠结信号的具体实现方式，其表示的含义就是一条小信息，用来告诉进程发生了什么事 进程是系统内核向进程发送的信息，就算是其他进程发出的信号也是经过内核再发出的 发送信号 内核可以通过改变进程上下文（context）中的某些信息，来表示信号的发送 发送信号有以下两种原因： ...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/CS/CSAPP-notes/Chapter8.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"异常控制流"}],["meta",{"property":"og:description","content":"信号 该部分暂时只记录信号部分，作为比较重要且难懂的一个内容 反思： 首先，我们先不用纠结信号的具体实现方式，其表示的含义就是一条小信息，用来告诉进程发生了什么事 进程是系统内核向进程发送的信息，就算是其他进程发出的信号也是经过内核再发出的 发送信号 内核可以通过改变进程上下文（context）中的某些信息，来表示信号的发送 发送信号有以下两种原因： ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"operating-system"}],["meta",{"property":"article:tag","content":"计算机系统"}],["meta",{"property":"article:tag","content":"异常控制流"}],["meta",{"property":"article:published_time","content":"2021-01-01T00:00:00.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"异常控制流\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-01-01T00:00:00.000Z\\",\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"信号","slug":"信号","link":"#信号","children":[]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":0.93,"words":280},"filePathRelative":"posts/CS/CSAPP-notes/Chapter8.md","localizedDate":"2021年1月1日","excerpt":"<h2>信号</h2>\\n<p>该部分暂时只记录信号部分，作为比较重要且难懂的一个内容</p>\\n<p><strong>反思</strong>：\\n首先，我们先不用纠结信号的具体实现方式，其表示的含义就是一条小信息，用来告诉进程发生了什么事\\n进程是系统内核向进程发送的信息，就算是其他进程发出的信号也是经过内核再发出的</p>\\n<h4>发送信号</h4>\\n<p>内核可以通过改变进程上下文（context）中的某些信息，来表示信号的发送\\n发送信号有以下两种原因：</p>\\n<ul>\\n<li>内核检测到的系统事件</li>\\n<li>一个进程调用某些函数，显式地要求内核发送信号</li>\\n</ul>\\n<h4>处理信号</h4>","autoDesc":true}`);export{d as comp,m as data};
