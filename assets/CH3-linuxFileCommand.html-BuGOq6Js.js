import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-DCTCPPGQ.js";const p={},e=t(`<h1 id="文件系统中的三个要素" tabindex="-1"><a class="header-anchor" href="#文件系统中的三个要素"><span>文件系统中的三个要素</span></a></h1><ul><li>文件</li><li>文件夹</li><li>软连接</li></ul><p>我们可以通过stat命令查看文件的详细信息</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">stat</span> calc
  File: calc
  Size: <span class="token number">4096</span>            Blocks: <span class="token number">0</span>          IO Block: <span class="token number">4096</span>   directory
Device: 50h/80d Inode: <span class="token number">14918173766102459</span>  Links: <span class="token number">1</span>
Access: <span class="token punctuation">(</span>0777/drwxrwxrwx<span class="token punctuation">)</span>  Uid: <span class="token punctuation">(</span> <span class="token number">1000</span>/   dnull<span class="token punctuation">)</span>   Gid: <span class="token punctuation">(</span> <span class="token number">1000</span>/   dnull<span class="token punctuation">)</span>
Access: <span class="token number">2023</span>-05-20 <span class="token number">13</span>:08:53.499645400 +0800
Modify: <span class="token number">2023</span>-05-03 <span class="token number">20</span>:31:58.232250800 +0800
Change: <span class="token number">2023</span>-05-03 <span class="token number">20</span>:31:58.232250800 +0800
 Birth: -
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以发现, 这是大小为4096kb大小的文件夹, 有一个链接, 有读写执行权限, 创建于2023年5月3日, 修改于2023年5月3日</p><p>文件和文件夹都很容易理解, 软连接一般而言讨论较少</p><h2 id="软链接-soft-link-和硬链接-hard-link" tabindex="-1"><a class="header-anchor" href="#软链接-soft-link-和硬链接-hard-link"><span>软链接(soft link)和硬链接(hard link)</span></a></h2><h3 id="硬链接" tabindex="-1"><a class="header-anchor" href="#硬链接"><span>硬链接</span></a></h3><p>我们可以使用指令<code>ln src target</code>来创建硬链接, 创建的硬链接相当于一个文件的别名</p><p>我们创建的文件实际上是储存在硬盘上, 通过inode来储存文件或文件夹的信息, 我们寻找一个文件都是通过寻找到指定的inode后, 在通过inode中的硬盘地址来获得数据的</p><p>而硬链接相当于对于一个文件, 建立了一个新的inode, 两个inode指向相同的位置, 此时我们可以通过两个inode来访问同一个文件, 但是硬链接不能跨文件系统, 也就是说硬链接不能跨硬盘</p><p>当我们为一个文件创建了硬链接后, 文件的link数目就会增加, 表示有多少个inode指向这个文件, 当link数目为0时, 文件就会被删除 所以说我们删除一个文件时, 删除的只是这个文件的inode, 文件在硬盘中仍然存在, 只有在需要的时候, 硬盘才会将没有引用的数据删除</p><h3 id="软链接" tabindex="-1"><a class="header-anchor" href="#软链接"><span>软链接</span></a></h3><p>我们可以用<code>ln -s src target</code>来创建软链接, 软链接相当于一个快捷方式, 保存了文件的绝对路径或相对路径, 所以软链接的大小由路径长度决定</p><p>软链接并不会增加引用数, 所以当源文件删除后, 软链接就会失效</p><h2 id="创建和读写文件" tabindex="-1"><a class="header-anchor" href="#创建和读写文件"><span>创建和读写文件</span></a></h2><p>创建文件有很多指令可以使用, 但是具体到系统层面的话, 其实都是调用了<code>open()</code>的系统调用, 比如我们可以用<code>strace</code>指令来跟踪一个进程的系统调用:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">strace</span> <span class="token function">cat</span> ans.txt
execve<span class="token punctuation">(</span><span class="token string">&quot;/usr/bin/cat&quot;</span>, <span class="token punctuation">[</span><span class="token string">&quot;cat&quot;</span>, <span class="token string">&quot;ans.txt&quot;</span><span class="token punctuation">]</span>, 0x7ffd820abd98 /* <span class="token number">24</span> vars */<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
brk<span class="token punctuation">(</span>NULL<span class="token punctuation">)</span>                               <span class="token operator">=</span> 0x55994fa81000
arch_prctl<span class="token punctuation">(</span>0x3001 /* ARCH_??? */, 0x7ffcb848ae30<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> EINVAL <span class="token punctuation">(</span>Invalid argument<span class="token punctuation">)</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">8192</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_ANONYMOUS, -1, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e104000
access<span class="token punctuation">(</span><span class="token string">&quot;/etc/ld.so.preload&quot;</span>, R_OK<span class="token punctuation">)</span>      <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/etc/ld.so.cache&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">52955</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">52955</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e0f7000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/lib/x86_64-linux-gnu/libc.so.6&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\177">\\177</span>ELF<span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span>&gt;<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\1">\\1</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>P<span class="token entity" title="\\237">\\237</span><span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">832</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">832</span>
pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\6">\\6</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">784</span>, <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">784</span>
pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span> <span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\5">\\5</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>GNU<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\2">\\2</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\300">\\300</span><span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">48</span>, <span class="token number">848</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">48</span>
pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\24">\\24</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\3">\\3</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>GNU<span class="token entity" title="\\0">\\0</span>i8<span class="token entity" title="\\235">\\235</span>HZ<span class="token entity" title="\\227">\\227</span><span class="token entity" title="\\223">\\223</span><span class="token entity" title="\\333">\\333</span><span class="token entity" title="\\350">\\350</span>s<span class="token entity" title="\\360">\\360</span><span class="token entity" title="\\352">\\352</span>,<span class="token entity" title="\\223">\\223</span><span class="token entity" title="\\340">\\340</span>.&quot;</span><span class="token punctuation">..</span>., <span class="token number">68</span>, <span class="token number">896</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">68</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">2216304</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
pread64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;<span class="token entity" title="\\6">\\6</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\4">\\4</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>@<span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span><span class="token entity" title="\\0">\\0</span>&quot;</span><span class="token punctuation">..</span>., <span class="token number">784</span>, <span class="token number">64</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">784</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">2260560</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377decf000
mmap<span class="token punctuation">(</span>0x7f377def7000, <span class="token number">1658880</span>, PROT_READ<span class="token operator">|</span>PROT_EXEC, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x28000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377def7000
mmap<span class="token punctuation">(</span>0x7f377e08c000, <span class="token number">360448</span>, PROT_READ, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x1bd000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e08c000
mmap<span class="token punctuation">(</span>0x7f377e0e4000, <span class="token number">24576</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_DENYWRITE, <span class="token number">3</span>, 0x214000<span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e0e4000
mmap<span class="token punctuation">(</span>0x7f377e0ea000, <span class="token number">52816</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_FIXED<span class="token operator">|</span>MAP_ANONYMOUS, -1, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e0ea000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">12288</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_ANONYMOUS, -1, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377decc000
arch_prctl<span class="token punctuation">(</span>ARCH_SET_FS, 0x7f377decc740<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
set_tid_address<span class="token punctuation">(</span>0x7f377decca10<span class="token punctuation">)</span>         <span class="token operator">=</span> <span class="token number">86</span>
set_robust_list<span class="token punctuation">(</span>0x7f377decca20, <span class="token number">24</span><span class="token punctuation">)</span>     <span class="token operator">=</span> <span class="token number">0</span>
rseq<span class="token punctuation">(</span>0x7f377decd0e0, 0x20, <span class="token number">0</span>, 0x53053053<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mprotect<span class="token punctuation">(</span>0x7f377e0e4000, <span class="token number">16384</span>, PROT_READ<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mprotect<span class="token punctuation">(</span>0x55994df3a000, <span class="token number">4096</span>, PROT_READ<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mprotect<span class="token punctuation">(</span>0x7f377e13e000, <span class="token number">8192</span>, PROT_READ<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
prlimit64<span class="token punctuation">(</span><span class="token number">0</span>, RLIMIT_STACK, NULL, <span class="token punctuation">{</span>rlim_cur<span class="token operator">=</span><span class="token number">8192</span>*1024, <span class="token assign-left variable">rlim_max</span><span class="token operator">=</span>RLIM64_INFINITY<span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
munmap<span class="token punctuation">(</span>0x7f377e0f7000, <span class="token number">52955</span><span class="token punctuation">)</span>           <span class="token operator">=</span> <span class="token number">0</span>
getrandom<span class="token punctuation">(</span><span class="token string">&quot;<span class="token entity" title="\\x0a">\\x0a</span><span class="token entity" title="\\x0d">\\x0d</span><span class="token entity" title="\\x6a">\\x6a</span><span class="token entity" title="\\x29">\\x29</span><span class="token entity" title="\\x8e">\\x8e</span><span class="token entity" title="\\x1d">\\x1d</span><span class="token entity" title="\\xb1">\\xb1</span><span class="token entity" title="\\x4c">\\x4c</span>&quot;</span>, <span class="token number">8</span>, GRND_NONBLOCK<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">8</span>
brk<span class="token punctuation">(</span>NULL<span class="token punctuation">)</span>                               <span class="token operator">=</span> 0x55994fa81000
brk<span class="token punctuation">(</span>0x55994faa2000<span class="token punctuation">)</span>                     <span class="token operator">=</span> 0x55994faa2000
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/locale-archive&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/share/locale/locale.alias&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">2996</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;# Locale name alias data base.<span class="token entity" title="\\n">\\n</span>#&quot;</span><span class="token punctuation">..</span>., <span class="token number">4096</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">2996</span>
read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token number">4096</span><span class="token punctuation">)</span>                       <span class="token operator">=</span> <span class="token number">0</span>
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_IDENTIFICATION&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_IDENTIFICATION&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">258</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">258</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e13d000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/x86_64-linux-gnu/gconv/gconv-modules.cache&quot;</span>, O_RDONLY<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">27002</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">27002</span>, PROT_READ, MAP_SHARED, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e0fd000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
futex<span class="token punctuation">(</span>0x7f377e0e9a6c, FUTEX_WAKE_PRIVATE, <span class="token number">2147483647</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_MEASUREMENT&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_MEASUREMENT&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">23</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">23</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e0fc000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_TELEPHONE&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_TELEPHONE&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">47</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">47</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e0fb000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_ADDRESS&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_ADDRESS&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">127</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">127</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e0fa000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_NAME&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_NAME&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">62</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">62</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e0f9000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_PAPER&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_PAPER&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">34</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">34</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e0f8000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_MESSAGES&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_MESSAGES&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFDIR<span class="token operator">|</span>0755, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">4096</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_MESSAGES/SYS_LC_MESSAGES&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">48</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">48</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377e0f7000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_MONETARY&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_MONETARY&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">270</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">270</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377decb000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_COLLATE&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_COLLATE&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">1406</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">1406</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377deca000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_TIME&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_TIME&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">3360</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">3360</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377dec9000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_NUMERIC&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_NUMERIC&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">50</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">50</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377dec8000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.UTF-8/LC_CTYPE&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token parameter variable">-1</span> ENOENT <span class="token punctuation">(</span>No such <span class="token function">file</span> or directory<span class="token punctuation">)</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;/usr/lib/locale/C.utf8/LC_CTYPE&quot;</span>, O_RDONLY<span class="token operator">|</span>O_CLOEXEC<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0644, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">353616</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">353616</span>, PROT_READ, MAP_PRIVATE, <span class="token number">3</span>, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377de71000
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
newfstatat<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFCHR<span class="token operator">|</span>0620, <span class="token assign-left variable">st_rdev</span><span class="token operator">=</span>makedev<span class="token punctuation">(</span>0x88, 0x7<span class="token punctuation">)</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;ans.txt&quot;</span>, O_RDONLY<span class="token punctuation">)</span>   <span class="token operator">=</span> <span class="token number">3</span>
newfstatat<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token punctuation">{</span>st_mode<span class="token operator">=</span>S_IFREG<span class="token operator">|</span>0777, <span class="token assign-left variable">st_size</span><span class="token operator">=</span><span class="token number">6</span>, <span class="token punctuation">..</span>.<span class="token punctuation">}</span>, AT_EMPTY_PATH<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
fadvise64<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token number">0</span>, <span class="token number">0</span>, POSIX_FADV_SEQUENTIAL<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span>
mmap<span class="token punctuation">(</span>NULL, <span class="token number">139264</span>, PROT_READ<span class="token operator">|</span>PROT_WRITE, MAP_PRIVATE<span class="token operator">|</span>MAP_ANONYMOUS, -1, <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">=</span> 0x7f377de4f000
read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;hello<span class="token entity" title="\\n">\\n</span>&quot;</span>, <span class="token number">131072</span><span class="token punctuation">)</span>              <span class="token operator">=</span> <span class="token number">6</span>
write<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token string">&quot;hello<span class="token entity" title="\\n">\\n</span>&quot;</span>, 6hello
<span class="token punctuation">)</span>                  <span class="token operator">=</span> <span class="token number">6</span>
read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token number">131072</span><span class="token punctuation">)</span>                     <span class="token operator">=</span> <span class="token number">0</span>
munmap<span class="token punctuation">(</span>0x7f377de4f000, <span class="token number">139264</span><span class="token punctuation">)</span>          <span class="token operator">=</span> <span class="token number">0</span>
close<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
close<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
close<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>                                <span class="token operator">=</span> <span class="token number">0</span>
exit_group<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                           <span class="token operator">=</span> ?
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>上面的指令打开了<code>ans.txt</code>文件，然后读取文件内容，最后输出到标准输出</p><p>我们可以从中提取出关键的几个调用</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>openat<span class="token punctuation">(</span>AT_FDCWD, <span class="token string">&quot;ans.txt&quot;</span>, O_RDONLY<span class="token punctuation">)</span>   <span class="token operator">=</span> <span class="token number">3</span>
read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;hello<span class="token entity" title="\\n">\\n</span>&quot;</span>, <span class="token number">131072</span><span class="token punctuation">)</span>              <span class="token operator">=</span> <span class="token number">6</span>
write<span class="token punctuation">(</span><span class="token number">1</span>, <span class="token string">&quot;hello<span class="token entity" title="\\n">\\n</span>&quot;</span>, 6hello
<span class="token punctuation">)</span>                  <span class="token operator">=</span> <span class="token number">6</span>
read<span class="token punctuation">(</span><span class="token number">3</span>, <span class="token string">&quot;&quot;</span>, <span class="token number">131072</span><span class="token punctuation">)</span>                     <span class="token operator">=</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>可以看见, <code>openat</code>函数打开了<code>ans.txt</code>文件，然后<code>read</code>函数读取了文件内容，最后<code>write</code>函数将内容输出到标准输出</p><p>其中<code>openat</code>函数的返回值<code>3</code>表示该文件描述符的值为3</p><h3 id="文件描述符" tabindex="-1"><a class="header-anchor" href="#文件描述符"><span>文件描述符</span></a></h3><p>文件描述符是每个进程独有的, 用来表示打开的文件的标志</p><p>标准输入输出也被视作了文件, 所以文件描述符<code>1</code> <code>2</code>都已经被占用了, 所以<code>openat</code>函数返回的文件描述符为<code>3</code></p><p>然后<code>read(3, &quot;hello\\n&quot;, 131072)</code>函数读取长度为<code>131072</code>的内容到缓冲区中, 这里直接将缓冲区的内容展示出来了</p><p>然后<code>write(1, &quot;hello\\n&quot;, 6hello)</code>函数将缓冲区的内容输出到标准输出</p><p>这里是文件描述符的基本使用</p><h3 id="文件的数据结构" tabindex="-1"><a class="header-anchor" href="#文件的数据结构"><span>文件的数据结构</span></a></h3><p>对于一个打开的文件, 进程会使用一个数据结构来维护文件的相关信息, 不同的系统使用的结构各有不同, 以下是书上提到的关于xv6的文件结构:</p><div class="language-c line-numbers-mode" data-ext="c" data-title="c"><pre class="language-c"><code><span class="token keyword">struct</span> <span class="token class-name">file</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> ref<span class="token punctuation">;</span>
    <span class="token keyword">char</span> readable<span class="token punctuation">;</span>
    <span class="token keyword">char</span> writable<span class="token punctuation">;</span>
    <span class="token keyword">struct</span> <span class="token class-name">inode</span> <span class="token operator">*</span>ip<span class="token punctuation">;</span>
    uint off<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中的<code>off</code>表示当前读取的位置, 进程会维护这个位置, 每次读取后会自动更新到读取的位置</p><p>此外我们还有一个相关的系统调用: <code>lseek(int fd, int offset, int whence)</code></p><p>这个调用能够将当前文件的位置移动到<code>offset</code>对应位置, 其中<code>whence</code>表示相对位置, 有三个值:</p><ul><li><code>SEEK_SET</code> 从文件开头开始</li><li><code>SEEK_CUR</code> 从当前位置开始</li><li><code>SEEK_END</code> 从文件结尾开始</li></ul><p>此外, 进程会使用一个文件表来维护所有打开的文件</p><p>特别的, 一个进程的子进程产生时, 会复制父进程的文件表, 也就是说子进程可以继承父进程打开的文件</p><hr><h3 id="文件系统" tabindex="-1"><a class="header-anchor" href="#文件系统"><span>文件系统</span></a></h3><p>包含若干文件, 文件夹, 和软链接的一起管理的集合, 我们称为文件系统</p><p>我们可以把一个磁盘分为多个区域, 每个区域都是独立的文件系统来管理</p>`,42),o=[e];function l(c,i){return s(),a("div",null,o)}const k=n(p,[["render",l],["__file","CH3-linuxFileCommand.html.vue"]]),m=JSON.parse(`{"path":"/posts/operating-system/ostep/CH3-linuxFileCommand.html","title":"Linux文件命令","lang":"zh-CN","frontmatter":{"title":"Linux文件命令","tags":["operating-system","file-system"],"categories":["操作系统","Three-Easy-Pieces"],"math":true,"mermaid":true,"date":"2023-05-20T00:00:00.000Z","description":"文件系统中的三个要素 文件 文件夹 软连接 我们可以通过stat命令查看文件的详细信息 可以发现, 这是大小为4096kb大小的文件夹, 有一个链接, 有读写执行权限, 创建于2023年5月3日, 修改于2023年5月3日 文件和文件夹都很容易理解, 软连接一般而言讨论较少 软链接(soft link)和硬链接(hard link) 硬链接 我们可以使...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/operating-system/ostep/CH3-linuxFileCommand.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"Linux文件命令"}],["meta",{"property":"og:description","content":"文件系统中的三个要素 文件 文件夹 软连接 我们可以通过stat命令查看文件的详细信息 可以发现, 这是大小为4096kb大小的文件夹, 有一个链接, 有读写执行权限, 创建于2023年5月3日, 修改于2023年5月3日 文件和文件夹都很容易理解, 软连接一般而言讨论较少 软链接(soft link)和硬链接(hard link) 硬链接 我们可以使..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-14T13:35:40.000Z"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"operating-system"}],["meta",{"property":"article:tag","content":"file-system"}],["meta",{"property":"article:published_time","content":"2023-05-20T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-14T13:35:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Linux文件命令\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-20T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-14T13:35:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"软链接(soft link)和硬链接(hard link)","slug":"软链接-soft-link-和硬链接-hard-link","link":"#软链接-soft-link-和硬链接-hard-link","children":[{"level":3,"title":"硬链接","slug":"硬链接","link":"#硬链接","children":[]},{"level":3,"title":"软链接","slug":"软链接","link":"#软链接","children":[]}]},{"level":2,"title":"创建和读写文件","slug":"创建和读写文件","link":"#创建和读写文件","children":[{"level":3,"title":"文件描述符","slug":"文件描述符","link":"#文件描述符","children":[]},{"level":3,"title":"文件的数据结构","slug":"文件的数据结构","link":"#文件的数据结构","children":[]},{"level":3,"title":"文件系统","slug":"文件系统","link":"#文件系统","children":[]}]}],"git":{"createdTime":1712936892000,"updatedTime":1713101740000,"contributors":[{"name":"DnullP","email":"dnull123p@gmail.com","commits":2}]},"readingTime":{"minutes":7.59,"words":2278},"filePathRelative":"posts/operating-system/ostep/CH3-linuxFileCommand.md","localizedDate":"2023年5月20日","excerpt":"\\n<ul>\\n<li>文件</li>\\n<li>文件夹</li>\\n<li>软连接</li>\\n</ul>\\n<p>我们可以通过stat命令查看文件的详细信息</p>\\n<div class=\\"language-bash\\" data-ext=\\"sh\\" data-title=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">stat</span> calc\\n  File: calc\\n  Size: <span class=\\"token number\\">4096</span>            Blocks: <span class=\\"token number\\">0</span>          IO Block: <span class=\\"token number\\">4096</span>   directory\\nDevice: 50h/80d Inode: <span class=\\"token number\\">14918173766102459</span>  Links: <span class=\\"token number\\">1</span>\\nAccess: <span class=\\"token punctuation\\">(</span>0777/drwxrwxrwx<span class=\\"token punctuation\\">)</span>  Uid: <span class=\\"token punctuation\\">(</span> <span class=\\"token number\\">1000</span>/   dnull<span class=\\"token punctuation\\">)</span>   Gid: <span class=\\"token punctuation\\">(</span> <span class=\\"token number\\">1000</span>/   dnull<span class=\\"token punctuation\\">)</span>\\nAccess: <span class=\\"token number\\">2023</span>-05-20 <span class=\\"token number\\">13</span>:08:53.499645400 +0800\\nModify: <span class=\\"token number\\">2023</span>-05-03 <span class=\\"token number\\">20</span>:31:58.232250800 +0800\\nChange: <span class=\\"token number\\">2023</span>-05-03 <span class=\\"token number\\">20</span>:31:58.232250800 +0800\\n Birth: -\\n</code></pre></div>","autoDesc":true}`);export{k as comp,m as data};
