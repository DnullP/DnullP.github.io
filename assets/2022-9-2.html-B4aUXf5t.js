import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as s,c as a,e as t}from"./app-DCTCPPGQ.js";const p={},e=t(`<h2 id="环境的配置" tabindex="-1"><a class="header-anchor" href="#环境的配置"><span>环境的配置</span></a></h2><p>OpenGL是一组通用的图形库标准，具体的软硬件实现方式各有不同，一般由显卡内部的固件自带，在不同系统下调用OpenGL核心的方式不同，所以通过第三方库来实现对OpenGL上下文的创建</p><h4 id="步骤" tabindex="-1"><a class="header-anchor" href="#步骤"><span>步骤</span></a></h4><ol><li>下载源代码，通过Cmake搭建工程，并编译出lib文件</li><li>新建工程，并添加头文件引用、lib库引用、链接器配置</li></ol><h2 id="关于头文件glad-h" tabindex="-1"><a class="header-anchor" href="#关于头文件glad-h"><span>关于头文件glad.h</span></a></h2><p>OpenGL的驱动版本众多，一般在运行时作为动态库储存在内存中，需要通过函数查询其内存地址，glad文件将这一步骤封装好，使得编写程序时不必为函数指针的维护做考虑</p><h2 id="基本代码的解析" tabindex="-1"><a class="header-anchor" href="#基本代码的解析"><span>基本代码的解析</span></a></h2><div class="language-cpp line-numbers-mode" data-ext="cpp" data-title="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;glad/glad.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;GLFW/glfw3.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;cstdlib&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ctime&gt;</span></span>

<span class="token keyword">void</span> <span class="token function">framebuffer_size_callback</span><span class="token punctuation">(</span>GLFWwindow<span class="token operator">*</span> window<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">void</span> <span class="token function">processInput</span><span class="token punctuation">(</span>GLFWwindow<span class="token operator">*</span> window<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token function">glfwInit</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">glfwWindowHint</span><span class="token punctuation">(</span>GLFW_CONTEXT_VERSION_MAJOR<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">glfwWindowHint</span><span class="token punctuation">(</span>GLFW_CONTEXT_VERSION_MINOR<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">glfwWindowHint</span><span class="token punctuation">(</span>GLFW_OPENGL_PROFILE<span class="token punctuation">,</span> GLFW_OPENGL_CORE_PROFILE<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//glfwWindowHint(GLFW_OPENGL_FORWARD_COMPAT, GL_TRUE);</span>
	GLFWwindow<span class="token operator">*</span> window <span class="token operator">=</span> <span class="token function">glfwCreateWindow</span><span class="token punctuation">(</span><span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">,</span> <span class="token string">&quot;LearnOpenGL&quot;</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>window <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Failed to create GLFW window&quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
		<span class="token function">glfwTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">glfwMakeContextCurrent</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">gladLoadGLLoader</span><span class="token punctuation">(</span><span class="token punctuation">(</span>GLADloadproc<span class="token punctuation">)</span>glfwGetProcAddress<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		std<span class="token double-colon punctuation">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">&quot;Failed to initialize GLAD&quot;</span> <span class="token operator">&lt;&lt;</span> std<span class="token double-colon punctuation">::</span>endl<span class="token punctuation">;</span>
		<span class="token keyword">return</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">glViewport</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">800</span><span class="token punctuation">,</span> <span class="token number">600</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">glfwSetFramebufferSizeCallback</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> framebuffer_size_callback<span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">glfwWindowShouldClose</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">)</span>
	<span class="token punctuation">{</span>
		<span class="token function">processInput</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">;</span>

		<span class="token function">glClearColor</span><span class="token punctuation">(</span><span class="token number">0.2f</span><span class="token punctuation">,</span> <span class="token number">0.3f</span><span class="token punctuation">,</span> <span class="token number">0.3f</span><span class="token punctuation">,</span> <span class="token number">1.0f</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">glClear</span><span class="token punctuation">(</span>GL_COLOR_BUFFER_BIT<span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">glfwPollEvents</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
		<span class="token function">glfwSwapBuffers</span><span class="token punctuation">(</span>window<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

	<span class="token function">glfwTerminate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">framebuffer_size_callback</span><span class="token punctuation">(</span>GLFWwindow<span class="token operator">*</span> window<span class="token punctuation">,</span> <span class="token keyword">int</span> width<span class="token punctuation">,</span> <span class="token keyword">int</span> height<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token function">glViewport</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> width<span class="token punctuation">,</span> height<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">processInput</span><span class="token punctuation">(</span>GLFWwindow<span class="token operator">*</span> window<span class="token punctuation">)</span>
<span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">glfwGetKey</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> GLFW_KEY_ESCAPE<span class="token punctuation">)</span> <span class="token operator">==</span> GLFW_PRESS<span class="token punctuation">)</span>
		<span class="token function">glfwSetWindowShouldClose</span><span class="token punctuation">(</span>window<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上为完整的代码，下面将逐句进行记录</p>`,9),o=[e];function c(l,i){return s(),a("div",null,o)}const d=n(p,[["render",c],["__file","2022-9-2.html.vue"]]),k=JSON.parse(`{"path":"/posts/openGL/2022-9-2.html","title":"OpenGL学习记录（一）","lang":"zh-CN","frontmatter":{"date":"2021-01-01T00:00:00.000Z","title":"OpenGL学习记录（一）","tag":["计算机图形","渲染"],"categories":["计算机图形"],"mathjax":true,"description":"环境的配置 OpenGL是一组通用的图形库标准，具体的软硬件实现方式各有不同，一般由显卡内部的固件自带，在不同系统下调用OpenGL核心的方式不同，所以通过第三方库来实现对OpenGL上下文的创建 步骤 下载源代码，通过Cmake搭建工程，并编译出lib文件 新建工程，并添加头文件引用、lib库引用、链接器配置 关于头文件glad.h OpenGL的驱...","head":[["meta",{"property":"og:url","content":"https://Dnullp.github.io/posts/openGL/2022-9-2.html"}],["meta",{"property":"og:site_name","content":"Dnull's Blog"}],["meta",{"property":"og:title","content":"OpenGL学习记录（一）"}],["meta",{"property":"og:description","content":"环境的配置 OpenGL是一组通用的图形库标准，具体的软硬件实现方式各有不同，一般由显卡内部的固件自带，在不同系统下调用OpenGL核心的方式不同，所以通过第三方库来实现对OpenGL上下文的创建 步骤 下载源代码，通过Cmake搭建工程，并编译出lib文件 新建工程，并添加头文件引用、lib库引用、链接器配置 关于头文件glad.h OpenGL的驱..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-04-14T13:35:40.000Z"}],["meta",{"property":"article:author","content":"Dnull"}],["meta",{"property":"article:tag","content":"计算机图形"}],["meta",{"property":"article:tag","content":"渲染"}],["meta",{"property":"article:published_time","content":"2021-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-04-14T13:35:40.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"OpenGL学习记录（一）\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2021-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2024-04-14T13:35:40.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dnull\\",\\"url\\":\\"https://Dnullp.github.io\\"}]}"]]},"headers":[{"level":2,"title":"环境的配置","slug":"环境的配置","link":"#环境的配置","children":[]},{"level":2,"title":"关于头文件glad.h","slug":"关于头文件glad-h","link":"#关于头文件glad-h","children":[]},{"level":2,"title":"基本代码的解析","slug":"基本代码的解析","link":"#基本代码的解析","children":[]}],"git":{"createdTime":1712936892000,"updatedTime":1713101740000,"contributors":[{"name":"DnullP","email":"dnull123p@gmail.com","commits":2}]},"readingTime":{"minutes":1.25,"words":376},"filePathRelative":"posts/openGL/2022-9-2.md","localizedDate":"2021年1月1日","excerpt":"<h2>环境的配置</h2>\\n<p>OpenGL是一组通用的图形库标准，具体的软硬件实现方式各有不同，一般由显卡内部的固件自带，在不同系统下调用OpenGL核心的方式不同，所以通过第三方库来实现对OpenGL上下文的创建</p>\\n<h4>步骤</h4>\\n<ol>\\n<li>下载源代码，通过Cmake搭建工程，并编译出lib文件</li>\\n<li>新建工程，并添加头文件引用、lib库引用、链接器配置</li>\\n</ol>\\n<h2>关于头文件glad.h</h2>\\n<p>OpenGL的驱动版本众多，一般在运行时作为动态库储存在内存中，需要通过函数查询其内存地址，glad文件将这一步骤封装好，使得编写程序时不必为函数指针的维护做考虑</p>","autoDesc":true}`);export{d as comp,k as data};
